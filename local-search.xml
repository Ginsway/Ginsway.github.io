<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/ad0cba6977e0/"/>
    <url>/ad0cba6977e0/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Sodium &amp; Rubidium &amp; Embeddium 版本列表</title>
    <link href="/c0771bb93df9/"/>
    <url>/c0771bb93df9/</url>
    
    <content type="html"><![CDATA[<p><a href="https://modrinth.com/mod/sodium"><img src="https://cdn.modrinth.com/data/AANobbMI/icon.png" width="100px" height="100px"></a></p><table><thead><tr><th>Minecraft 版本</th><th>Sodium 最新版本</th><th>下载链接</th></tr></thead><tbody><tr><td>1.20.4</td><td>0.5.5</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/InGKdfel/sodium-fabric-mc1.20.3-0.5.5.jar">Modrinth</a>                                                              <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.20.3-0.5.5/sodium-fabric-mc1.20.3-0.5.5.jar">Github</a></td></tr><tr><td>1.20.3</td><td>0.5.5</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/InGKdfel/sodium-fabric-mc1.20.3-0.5.5.jar">Modrinth</a>                                                              <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.20.3-0.5.5/sodium-fabric-mc1.20.3-0.5.5.jar">Github</a></td></tr><tr><td>1.20.2</td><td>0.5.5</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/pmgeU5yX/sodium-fabric-mc1.20.2-0.5.5.jar">Modrinth</a>                                                              <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.20.2-0.5.5/sodium-fabric-mc1.20.2-0.5.5.jar">Github</a></td></tr><tr><td><strong>1.20.1</strong></td><td><strong>0.5.3</strong></td><td><strong><a href="https://cdn.modrinth.com/data/AANobbMI/versions/4OZL6q9h/sodium-fabric-mc1.20.1-0.5.3.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.20.1-0.5.3/sodium-fabric-mc1.20.1-0.5.3.jar">Github</a></strong></td></tr><tr><td>1.20</td><td>0.4.10</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/vgceLbdH/sodium-fabric-mc1.20-0.4.10%2Bbuild.27.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.20-0.4.10/sodium-fabric-mc1.20-0.4.10+build.27.jar">Github</a></td></tr><tr><td><strong>1.19.4</strong></td><td><strong>0.4.10</strong></td><td><strong><a href="https://cdn.modrinth.com/data/AANobbMI/versions/b4hTi3mo/sodium-fabric-mc1.19.4-0.4.10%2Bbuild.24.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.19.4-0.4.10/sodium-fabric-mc1.19.4-0.4.10+build.24.jar">Github</a></strong></td></tr><tr><td>1.19.3</td><td>0.4.9</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/idtcaIVT/sodium-fabric-mc1.19.3-0.4.9%2Bbuild.23.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.19.3-0.4.9/sodium-fabric-mc1.19.3-0.4.9+build.23.jar">Github</a></td></tr><tr><td><strong>1.19.2</strong></td><td><strong>0.4.4</strong></td><td><strong><a href="https://cdn.modrinth.com/data/AANobbMI/versions/rAfhHfow/sodium-fabric-mc1.19.2-0.4.4%2Bbuild.18.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.19.2-0.4.4/sodium-fabric-mc1.19.2-0.4.4+build.18.jar">Github</a></strong></td></tr><tr><td>1.19.1</td><td>0.4.4</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/rAfhHfow/sodium-fabric-mc1.19.2-0.4.4%2Bbuild.18.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.19.2-0.4.4/sodium-fabric-mc1.19.2-0.4.4+build.18.jar">Github</a></td></tr><tr><td>1.19</td><td>0.4.4</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/rAfhHfow/sodium-fabric-mc1.19.2-0.4.4%2Bbuild.18.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.19.2-0.4.4/sodium-fabric-mc1.19.2-0.4.4+build.18.jar">Github</a></td></tr><tr><td><strong>1.18.2</strong></td><td><strong>0.4.1</strong></td><td><strong><a href="https://cdn.modrinth.com/data/AANobbMI/versions/mc1.18.2-0.4.1/sodium-fabric-mc1.18.2-0.4.1%2Bbuild.15.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.18.2-0.4.1/sodium-fabric-mc1.18.2-0.4.1+build.15.jar">Github</a></strong></td></tr><tr><td>1.18.1</td><td>0.4.0α6</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/mc1.18.1-0.4.0-alpha6/sodium-fabric-mc1.18.1-0.4.0-alpha6%2Bbuild.14.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.18.1-0.4.0-alpha6/sodium-fabric-mc1.18.1-0.4.0-alpha6+build.14.jar">Github</a></td></tr><tr><td>1.18</td><td>0.4.0α5</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/mc1.18-0.40-alpha5/sodium-fabric-mc1.18-0.4.0-alpha5%2Bbuild.9.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.18-0.4.0-alpha5/sodium-fabric-mc1.18-0.4.0-alpha5+build.9.jar">Github</a></td></tr><tr><td>1.17.1</td><td>0.3.4</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/mc1.17.1-0.3.4/sodium-fabric-mc1.17.1-0.3.4%2Bbuild.13.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.17.1-0.3.4/sodium-fabric-mc1.17.1-0.3.4+build.13.jar">Github</a></td></tr><tr><td><strong>1.16.5</strong></td><td><strong>0.2.0</strong></td><td><strong><a href="https://cdn.modrinth.com/data/AANobbMI/versions/mc1.16.5-0.2.0/sodium-fabric-mc1.16.5-0.2.0%2Bbuild.4.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.16.5-0.2.0/sodium-fabric-mc1.16.5-0.2.0+build.4.jar">Github</a></strong></td></tr><tr><td>1.16.4</td><td>0.2.0</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/mc1.16.5-0.2.0/sodium-fabric-mc1.16.5-0.2.0%2Bbuild.4.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.16.5-0.2.0/sodium-fabric-mc1.16.5-0.2.0+build.4.jar">Github</a></td></tr><tr><td>1.16.3</td><td>0.2.0</td><td><a href="https://cdn.modrinth.com/data/AANobbMI/versions/mc1.16.5-0.2.0/sodium-fabric-mc1.16.5-0.2.0%2Bbuild.4.jar">Modrinth</a> <a href="https://github.com/CaffeineMC/sodium-fabric/releases/download/mc1.16.5-0.2.0/sodium-fabric-mc1.16.5-0.2.0+build.4.jar">Github</a></td></tr></tbody></table><p><a href="https://modrinth.com/mod/rubidium"><img src="https://cdn.modrinth.com/data/4ZqxOvjD/icon.png" width="100px" height="100px"></a></p><table><thead><tr><th>Minecraft 版本</th><th>Rubidium 最新版本</th><th>下载链接</th></tr></thead><tbody><tr><td><strong>1.20.1</strong></td><td><strong>0.7.1</strong></td><td><strong><a href="https://cdn.modrinth.com/data/4ZqxOvjD/versions/VKligEsm/rubidium-mc1.20.1-0.7.1.jar">Modrinth</a></strong></td></tr><tr><td>1.20</td><td>0.6.5</td><td><a href="https://cdn.modrinth.com/data/4ZqxOvjD/versions/iLEHOlRR/rubidium-0.6.5.jar">Modrinth</a></td></tr><tr><td><strong>1.19.4</strong></td><td><strong>0.6.4</strong></td><td><strong><a href="https://cdn.modrinth.com/data/4ZqxOvjD/versions/lCbMhmSa/rubidium-0.6.4.jar">Modrinth</a></strong></td></tr><tr><td>1.19.3</td><td>0.6.3</td><td><a href="https://cdn.modrinth.com/data/4ZqxOvjD/versions/ySmWhbfP/rubidium-0.6.3.jar">Modrinth</a></td></tr><tr><td><strong>1.19.2</strong></td><td><strong>0.6.2c</strong></td><td><strong><a href="https://cdn.modrinth.com/data/4ZqxOvjD/versions/bmmEZ4mh/rubidium-mc1.19.2-0.6.2c.jar">Modrinth</a></strong></td></tr><tr><td>1.19.1</td><td>0.6.1</td><td><a href="https://cdn.modrinth.com/data/4ZqxOvjD/versions/0.6.1/rubidium-0.6.1.jar">Modrinth</a></td></tr><tr><td>1.19</td><td>0.6.1</td><td><a href="https://cdn.modrinth.com/data/4ZqxOvjD/versions/0.6.1/rubidium-0.6.1.jar">Modrinth</a></td></tr><tr><td><strong>1.18.2</strong></td><td><strong>0.5.6</strong></td><td><strong><a href="https://cdn.modrinth.com/data/4ZqxOvjD/versions/9DCa1IzX/rubidium-0.5.6.jar">Modrinth</a></strong></td></tr><tr><td>1.18.1</td><td>0.5.0</td><td></td></tr><tr><td><strong>1.16.5</strong></td><td><strong>0.2.13</strong></td><td><strong><a href="https://cdn.modrinth.com/data/4ZqxOvjD/versions/YDAuLUY8/rubidium-mc1.16.5-0.2.13.jar">Modrinth</a></strong></td></tr></tbody></table><p><a href="https://modrinth.com/mod/embeddium"><img src="https://cdn.modrinth.com/data/sk9rgfiA/7f5be8843494e3c34bd628143cbb07bc6cbc77f7.png" width="100px" height="100px"></a></p><table><thead><tr><th>Minecraft 版本</th><th>Embeddium 最新版本（Forge &#x2F; Neoforge）</th><th>下载链接</th></tr></thead><tbody><tr><td>1.20.4</td><td>~ &#x2F; 0.2.13</td><td><a href="https://cdn.modrinth.com/data/sk9rgfiA/versions/NhxNCVb8/embeddium-0.2.13%2Bmc1.20.4.jar">Modrinth (NeoForge)</a></td></tr><tr><td>1.20.3</td><td>~ &#x2F; 0.2.12</td><td><a href="https://cdn.modrinth.com/data/sk9rgfiA/versions/N21UWLtA/embeddium-0.2.12%2Bmc1.20.3.jar">Modrinth (NeoForge)</a></td></tr><tr><td>1.20.2</td><td>0.2.10 &#x2F; 0.2.12</td><td><a href="https://cdn.modrinth.com/data/sk9rgfiA/versions/CMIY4YD6/embeddium-0.2.10%2Bmc1.20.2.jar">Modrinth (Forge)</a> <a href="https://cdn.modrinth.com/data/sk9rgfiA/versions/8QyTfW8d/embeddium-0.2.12%2Bmc1.20.2.jar">Modrinth (NeoForge)</a></td></tr><tr><td><strong>1.20.1</strong></td><td><strong>0.2.13</strong></td><td><strong><a href="https://cdn.modrinth.com/data/sk9rgfiA/versions/tDExzaO7/embeddium-0.2.13%2Bmc1.20.1.jar">Modrinth</a></strong></td></tr><tr><td><strong>1.19.2</strong></td><td><strong>0.2.13</strong></td><td><strong><a href="https://cdn.modrinth.com/data/sk9rgfiA/versions/g9Z4ICTo/embeddium-0.2.13%2Bmc1.19.2.jar">Modrinth</a></strong></td></tr><tr><td><strong>1.18.2</strong></td><td><strong>0.2.13</strong></td><td><strong><a href="https://cdn.modrinth.com/data/sk9rgfiA/versions/nbnS4lv3/embeddium-0.2.13%2Bmc1.18.2.jar">Modrinth</a></strong></td></tr><tr><td><strong>1.16.5</strong></td><td><strong>0.2.13</strong></td><td><strong><a href="https://cdn.modrinth.com/data/sk9rgfiA/versions/JhR2FXy9/embeddium-0.2.13%2Bmc1.16.5.jar">Modrinth</a></strong></td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Mod Menu 系列版本列表</title>
    <link href="/21f3d6c265f7/"/>
    <url>/21f3d6c265f7/</url>
    
    <content type="html"><![CDATA[<p><a href="https://modrinth.com/mod/modmenu"><img src="https://cdn.modrinth.com/data/mOgUt4GM/icon.png" width="100px" height="100px"></a></p><table><thead><tr><th>Minecraft 版本</th><th>Mod Menu 最新版本</th><th>下载链接</th></tr></thead><tbody><tr><td>1.20.2</td><td>8.0.0</td><td><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/TwfjidT5/modmenu-8.0.0.jar">Modrinth</a></td></tr><tr><td><strong>1.20.1</strong></td><td><strong>7.2.2</strong></td><td><strong><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/lEkperf6/modmenu-7.2.2.jar">Modrinth</a></strong></td></tr><tr><td>1.20</td><td>7.0.1</td><td><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/RTFDnTKf/modmenu-7.0.1.jar">Modrinth</a></td></tr><tr><td><strong>1.19.4</strong></td><td><strong>6.3.1</strong></td><td><strong><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/lMqXEzUw/modmenu-6.3.1.jar">Modrinth</a></strong></td></tr><tr><td>1.19.3</td><td>5.1.0</td><td><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/id0aLmxO/modmenu-5.1.0.jar">Modrinth</a></td></tr><tr><td><strong>1.19.2</strong></td><td><strong>4.2.0+beta.2</strong></td><td><strong><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/gSoPJyVn/modmenu-4.2.0-beta.2.jar">Modrinth</a></strong></td></tr><tr><td>1.19.1</td><td>4.0.5</td><td><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/4.0.5/modmenu-4.0.5.jar">Modrinth</a></td></tr><tr><td>1.19</td><td>4.0.4</td><td><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/4.0.4/modmenu-4.0.4.jar">Modrinth</a></td></tr><tr><td><strong>1.18.2</strong></td><td><strong>3.2.5</strong></td><td><strong><a href="https://edge.forgecdn.net/files/4145/213/modmenu-3.2.5.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/nVxObSbX/modmenu-3.2.5.jar">Modrinth</a></strong></td></tr><tr><td>1.18.1</td><td>3.0.1</td><td><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/3.0.1/modmenu-3.0.1.jar">Modrinth</a></td></tr><tr><td>1.18</td><td>3.0.1</td><td><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/3.0.1/modmenu-3.0.1.jar">Modrinth</a></td></tr><tr><td>1.17.1</td><td>2.0.17</td><td><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/7kh2ofyR/modmenu-2.0.17.jar">Modrinth</a></td></tr><tr><td>1.17</td><td>2.0.17</td><td><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/7kh2ofyR/modmenu-2.0.17.jar">Modrinth</a></td></tr><tr><td><strong>1.16.5</strong></td><td><strong>1.16.23</strong></td><td><strong><a href="https://cdn.modrinth.com/data/mOgUt4GM/versions/1.16.23/modmenu-1.16.23.jar">Modrinth</a></strong></td></tr><tr><td>1.16.4</td><td>1.16.7</td><td></td></tr><tr><td>1.16.3</td><td>1.14.9+build.13</td><td></td></tr><tr><td>1.16.2</td><td>1.14.6+build.31</td><td></td></tr><tr><td>1.16.1</td><td>1.14.5+build.30</td><td></td></tr><tr><td>1.16</td><td>1.12.2+build.16</td><td></td></tr><tr><td>1.15.2</td><td>1.10.7</td><td></td></tr><tr><td>1.15.1</td><td>1.8.3+build.19</td><td></td></tr><tr><td>1.15</td><td>1.8.2+build.18</td><td></td></tr><tr><td>1.14.4</td><td>1.7.17+build.1</td><td></td></tr><tr><td>1.14.3</td><td>1.6.3+build.101</td><td></td></tr><tr><td>1.14.2</td><td>1.6.2+92</td><td></td></tr><tr><td>1.14.1</td><td>1.5.4+85</td><td></td></tr><tr><td>1.14</td><td>1.5.3+84</td><td></td></tr></tbody></table><table><thead><tr><th>Minecraft 版本</th><th>Legacy Mod Menu 最新版本</th><th>下载链接</th></tr></thead><tbody><tr><td>1.8.9</td><td>1.1.0</td><td><a href="https://cdn.modrinth.com/data/XzTYkVLx/versions/r7PigOJk/legacy-modmenu-1.1.0.jar">Modrinth</a></td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Fabric API 与 Quilted Fabric API / Quilt Standard Libraries 版本列表</title>
    <link href="/3df3d04c59fe/"/>
    <url>/3df3d04c59fe/</url>
    
    <content type="html"><![CDATA[<p><a href="https://modrinth.com/mod/fabric-api"><img src="https://cdn.modrinth.com/data/P7dR8mSH/icon.png" width="100px" height="100px"></a></p><table><thead><tr><th>Minecraft 版本</th><th>Fabric API 最新版本</th><th>下载链接</th></tr></thead><tbody><tr><td>1.20.2</td><td>0.90.7+1.20.2</td><td><a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/FhOnpSMY/fabric-api-0.90.7%2B1.20.2.jar">Modrinth</a>                                    <a href="https://edge.forgecdn.net/files/4834/998/fabric-api-0.90.7%2b1.20.2.jar">Curseforge</a>                         <a href="https://maven.fabricmc.net/net/fabricmc/fabric-api/fabric-api/0.90.7%2B1.20.2/fabric-api-0.90.7%2B1.20.2.jar">Maven</a></td></tr><tr><td><strong>1.20.1</strong></td><td><strong>0.90.7+1.20.1</strong></td><td><strong><a href="https://edge.forgecdn.net/files/4834/952/fabric-api-0.90.7%2b1.20.1.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/JXpzzvU6/fabric-api-0.90.7%2B1.20.1.jar">Modrinth</a> <a href="https://maven.fabricmc.net/net/fabricmc/fabric-api/fabric-api/0.90.7%2B1.20.1/fabric-api-0.90.7%2B1.20.1.jar">Maven</a></strong></td></tr><tr><td>1.20</td><td>0.83.0+1.20</td><td><a href="https://edge.forgecdn.net/files/4559/72/fabric-api-0.83.0+1.20.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/n2c5lxAo/fabric-api-0.83.0%2B1.20.jar">Modrinth</a> <a href="https://maven.fabricmc.net/net/fabricmc/fabric-api/fabric-api/0.83.0%2B1.20/fabric-api-0.83.0%2B1.20.jar">maven</a></td></tr><tr><td><strong>1.19.4</strong></td><td><strong>0.87.2+1.19.4</strong></td><td><strong><a href="https://edge.forgecdn.net/files/4834/896/fabric-api-0.87.2%2b1.19.4.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/nyAmoHlr/fabric-api-0.87.2%2B1.19.4.jar">Modrinth</a> <a href="https://maven.fabricmc.net/net/fabricmc/fabric-api/fabric-api/0.87.2%2B1.19.4/fabric-api-0.87.2%2B1.19.4.jar">Maven</a></strong></td></tr><tr><td>1.19.3</td><td>0.76.1+1.19.3</td><td><a href="https://edge.forgecdn.net/files/4485/410/fabric-api-0.76.1+1.19.3.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/jyKnHEDY/fabric-api-0.76.1%2B1.19.3.jar">Modrinth</a></td></tr><tr><td><strong>1.19.2</strong></td><td><strong>0.76.1+1.19.2</strong></td><td><strong><a href="https://edge.forgecdn.net/files/4702/913/fabric-api-0.76.1+1.19.2.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/fO05PwUR/fabric-api-0.76.1%2B1.19.2.jar">Modrinth</a> <a href="https://maven.fabricmc.net/net/fabricmc/fabric-api/fabric-api/0.76.1%2B1.19.2/fabric-api-0.76.1%2B1.19.2.jar">Maven</a></strong></td></tr><tr><td>1.19.1</td><td>0.58.5+1.19.1</td><td><a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.58.5%2B1.19.1/fabric-api-0.58.5%2B1.19.1.jar">Modrinth</a></td></tr><tr><td>1.19</td><td>0.58.0+1.19</td><td><a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.58.0%2B1.19/fabric-api-0.58.0%2B1.19.jar">Modrinth</a></td></tr><tr><td><strong>1.18.2</strong></td><td><strong>0.76.0+1.18.2</strong></td><td><strong><a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/95QMsRyb/fabric-api-0.76.0%2B1.18.2.jar">Modrinth</a></strong></td></tr><tr><td>1.18.1</td><td>0.46.6+1.18</td><td><a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.46.6%2B1.18/fabric-api-0.46.6%2B1.18.jar">Modrinth</a></td></tr><tr><td>1.18</td><td>0.44.0+1.18</td><td><a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.44.0%2B1.18/fabric-api-0.44.0%2B1.18.jar">Modrinth</a></td></tr><tr><td>1.17.1</td><td>0.46.1+1.17</td><td><a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.46.1%2B1.17/fabric-api-0.46.1%2B1.17.jar">Modrinth</a></td></tr><tr><td>1.17</td><td>0.36.0+1.17</td><td><a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.36.0%2B1.17/fabric-api-0.36.0%2B1.17.jar">Modrinth</a></td></tr><tr><td><strong>1.16.5</strong></td><td><strong>0.42.0+1.16</strong></td><td><strong><a href="https://edge.forgecdn.net/files/3516/413/fabric-api-0.42.0+1.16.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.42.0%2B1.16/fabric-api-0.42.0%2B1.16.jar">Modrinth</a></strong></td></tr><tr><td>1.16.4</td><td>0.29.3+1.16</td><td><a href="https://edge.forgecdn.net/files/3159/126/fabric-api-0.29.3+1.16.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.29.3%2B1.16/fabric-api-0.29.3%2B1.16.jar">Modrinth</a></td></tr><tr><td>1.16.3</td><td>0.25.0+build.415</td><td><a href="https://edge.forgecdn.net/files/3097/415/fabric-api-0.25.0+build.415-1.16.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.25.0%2Bbuild.415-1.16/fabric-api-0.25.0%2Bbuild.415-1.16.jar">Modrinth</a></td></tr><tr><td>1.16.2</td><td>0.20.1+build.401</td><td><a href="https://edge.forgecdn.net/files/3049/174/fabric-api-0.20.1+build.401-1.16.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/P7dR8mSH/versions/0.20.1%2Bbuild.401-1.16/fabric-api-0.20.1%2Bbuild.401-1.16.jar">Modrinth</a></td></tr><tr><td>1.16.1</td><td>0.18.0+build.387</td><td></td></tr><tr><td>1.16</td><td>0.13.1+build.370</td><td></td></tr><tr><td>1.15.2</td><td>0.28.5+1.15</td><td></td></tr><tr><td>1.15.1</td><td>0.4.27+build.286</td><td></td></tr><tr><td>1.15</td><td>0.4.27+build.286</td><td></td></tr><tr><td>1.14.4</td><td>0.28.5+1.14</td><td></td></tr><tr><td>1.14.3</td><td>0.3.0+build.198</td><td></td></tr><tr><td>1.14.2</td><td>0.3.0+build.176</td><td></td></tr><tr><td>1.14.1</td><td>0.3.0+build.157a</td><td></td></tr><tr><td>1.14</td><td>0.3.0+build.156</td><td></td></tr></tbody></table><p><a href="https://modrinth.com/mod/qsl"><img src="https://cdn.modrinth.com/data/qvIfYCYJ/icon.png" width="100px" height="100px"></a></p><table><thead><tr><th>Minecraft 版本</th><th>QFAPI | QSL 最新版本</th><th>下载链接</th></tr></thead><tbody><tr><td><strong>1.20.1</strong></td><td><strong>7.4.0 | 6.1.2</strong></td><td><strong><a href="https://edge.forgecdn.net/files/4787/908/qfapi-7.4.0_qsl-6.1.2_fapi-0.90.0_mc-1.20.1.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/qvIfYCYJ/versions/GjvWb8WQ/qfapi-7.4.0_qsl-6.1.2_fapi-0.90.0_mc-1.20.1.jar">Modrinth</a></strong></td></tr><tr><td>1.20</td><td>7.4.0 | 6.1.2</td><td><a href="https://edge.forgecdn.net/files/4787/908/qfapi-7.4.0_qsl-6.1.2_fapi-0.90.0_mc-1.20.1.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/qvIfYCYJ/versions/GjvWb8WQ/qfapi-7.4.0_qsl-6.1.2_fapi-0.90.0_mc-1.20.1.jar">Modrinth</a></td></tr><tr><td><strong>1.19.4</strong></td><td><strong>6.0.0-beta.11 | 5.0.0-beta.11</strong></td><td><strong><a href="https://edge.forgecdn.net/files/4810/218/qfapi-6.0.0-beta.11_qsl-5.0.0-beta.11_fapi-0.87.0_mc-1.19.4.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/qvIfYCYJ/versions/BQoiDT9n/qfapi-6.0.0-beta.11_qsl-5.0.0-beta.11_fapi-0.87.0_mc-1.19.4.jar">Modrinth</a></strong></td></tr><tr><td>1.19.3</td><td>5.0.0+beta.9 | 4.0.0-beta.13</td><td><a href="https://edge.forgecdn.net/files/4561/336/qfapi-6.0.0-beta.9_qsl-5.0.0-beta.10_fapi-0.83.0_mc-1.19.4.jar">Curseforge</a> <a href="https://edge.forgecdn.net/files/4475/529/qfapi-5.0.0-beta.9_qsl-4.0.0-beta.13_fapi-0.76.0_mc-1.19.3.jar">Modrinth</a></td></tr><tr><td><strong>1.19.2</strong></td><td><strong>4.0.0+beta.30 | 3.0.0-beta.29</strong></td><td><strong><a href="https://edge.forgecdn.net/files/4460/505/qfapi-4.0.0-beta.30_qsl-3.0.0-beta.29_fapi-0.76.0_mc-1.19.2.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/qvIfYCYJ/versions/BTCxVi75/qfapi-4.0.0-beta.30_qsl-3.0.0-beta.29_fapi-0.76.0_mc-1.19.2.jar">Modrinth</a></strong></td></tr><tr><td>1.19.1</td><td>4.0.0+beta.6 | 3.0.0-beta.10</td><td><a href="https://edge.forgecdn.net/files/3920/200/qfapi-4.0.0-beta.6_qsl-3.0.0-beta.10_fapi-0.58.5_mc-1.19.1.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/qvIfYCYJ/versions/4.0.0-beta.6%2B0.58.5-1.19.1/qfapi-4.0.0-beta.6_qsl-3.0.0-beta.10_fapi-0.58.5_mc-1.19.1.jar">Modrinth</a></td></tr><tr><td>1.19</td><td>2.0.0+beta.9 | 2.0.0-beta.16</td><td><a href="https://edge.forgecdn.net/files/3891/499/qfapi-2.0.0-beta.9_qsl-2.0.0-beta.16_fapi-0.58.0_mc-1.19.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/qvIfYCYJ/versions/2.0.0-beta.9%2B0.58.0-1.19/qfapi-2.0.0-beta.9_qsl-2.0.0-beta.16_fapi-0.58.0_mc-1.19.jar">Modrinth</a></td></tr><tr><td><strong>1.18.2</strong></td><td><strong>1.0.0+beta.28 | 1.1.0-beta.26</strong></td><td><strong><a href="https://edge.forgecdn.net/files/4102/455/qfapi-1.0.0-beta.28_qsl-1.1.0-beta.26_fapi-0.67.0_mc-1.18.2.jar">Curseforge</a> <a href="https://cdn.modrinth.com/data/qvIfYCYJ/versions/U0wSVcD2/qfapi-1.0.0-beta.28_qsl-1.1.0-beta.26_fapi-0.67.0_mc-1.18.2.jar">Modrinth</a></strong></td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Forge 与 NeoForge 版本列表</title>
    <link href="/40db92df5e5f/"/>
    <url>/40db92df5e5f/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th>Minecraft版本</th><th>NeoForge 最新版本</th><th>下载链接</th></tr></thead><tbody><tr><td>1.20.4</td><td>20.4.27-beta</td><td><a href="https://maven.neoforged.net/releases/net/neoforged/neoforge/20.4.27-beta/neoforge-20.4.27-beta-installer.jar">Installer</a></td></tr><tr><td>1.20.3</td><td>20.3.8-beta</td><td><a href="https://maven.neoforged.net/releases/net/neoforged/neoforge/20.3.8-beta/neoforge-20.3.8-beta-installer.jar">Installer</a></td></tr><tr><td>1.20.2</td><td>20.2.86</td><td><a href="https://maven.neoforged.net/releases/net/neoforged/neoforge/20.2.86/neoforge-20.2.86-installer.jar">Installer</a></td></tr><tr><td><strong>1.20.1</strong></td><td><strong>47.1.81</strong></td><td><strong><a href="https://maven.neoforged.net/releases/net/neoforged/forge/1.20.1-47.1.81/forge-1.20.1-47.1.81-installer.jar">Installer</a></strong></td></tr></tbody></table><table><thead><tr><th>Minecraft版本</th><th>Forge 最新版本</th><th>下载链接</th></tr></thead><tbody><tr><td>1.20.4</td><td>49.0.9</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.4-49.0.9/forge-1.20.4-49.0.9-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.4-49.0.9/forge-1.20.4-49.0.9-mdk.zip">Mdk</a></td></tr><tr><td>1.20.3</td><td>49.0.2</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.3-49.0.2/forge-1.20.3-49.0.2-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.3-49.0.2/forge-1.20.3-49.0.2-mdk.zip">Mdk</a></td></tr><tr><td>1.20.2</td><td>48.1.0</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.2-48.1.0/forge-1.20.2-48.1.0-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.2-48.1.0/forge-1.20.2-48.1.0-mdk.zip">Mdk</a></td></tr><tr><td><strong>1.20.1</strong></td><td><strong>47.2.17</strong></td><td><strong><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.1-47.2.17/forge-1.20.1-47.2.17-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20.1-47.2.17/forge-1.20.1-47.2.17-mdk.zip">Mdk</a></strong></td></tr><tr><td>1.20</td><td>46.0.14</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20-46.0.14/forge-1.20-46.0.14-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.20-46.0.14/forge-1.20-46.0.14-mdk.zip">Mdk</a></td></tr><tr><td><strong>1.19.4</strong></td><td><strong>45.2.6</strong></td><td><strong><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19.4-45.2.6/forge-1.19.4-45.2.6-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19.4-45.2.6/forge-1.19.4-45.2.6-mdk.zip">Mdk</a></strong></td></tr><tr><td>1.19.3</td><td>44.1.23</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19.3-44.1.23/forge-1.19.3-44.1.23-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19.3-44.1.23/forge-1.19.3-44.1.23-mdk.zip">Mdk</a></td></tr><tr><td><strong>1.19.2</strong></td><td><strong>43.3.5</strong></td><td><strong><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19.2-43.3.5/forge-1.19.2-43.3.5-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19.2-43.3.5/forge-1.19.2-43.3.5-mdk.zip">Mdk</a></strong></td></tr><tr><td>1.19.1</td><td>42.0.9</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19.1-42.0.9/forge-1.19.1-42.0.9-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19.1-42.0.9/forge-1.19.1-42.0.9-mdk.zip">Mdk</a></td></tr><tr><td>1.19</td><td>41.1.0</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19-41.1.0/forge-1.19-41.1.0-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.19-41.1.0/forge-1.19-41.1.0-mdk.zip">Mdk</a></td></tr><tr><td><strong>1.18.2</strong></td><td><strong>40.2.13</strong></td><td><strong><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.18.2-40.2.13/forge-1.18.2-40.2.13-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.18.2-40.2.13/forge-11.18.2-40.2.13-mdk.zip">Mdk</a></strong></td></tr><tr><td>1.18.1</td><td>39.1.2</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.18.1-39.1.2/forge-1.18.1-39.1.2-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.18.1-39.1.2/forge-1.18.1-39.1.2-mdk.zip">Mdk</a></td></tr><tr><td>1.18</td><td>38.0.17</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.18-38.0.17/forge-1.18-38.0.17-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.18-38.0.17/forge-1.18-38.0.17-mdk.zip">Mdk</a></td></tr><tr><td>1.17.1</td><td>37.1.1</td><td><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.17.1-37.1.1/forge-1.17.1-37.1.1-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.17.1-37.1.1/forge-1.17.1-37.1.1-mdk.zip">Mdk</a></td></tr><tr><td><strong>1.16.5</strong></td><td><strong>36.2.39</strong></td><td><strong><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.16.5-36.2.39/forge-1.16.5-36.2.39-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.16.5-36.2.39/forge-1.16.5-36.2.39-mdk.zip">Mdk</a></strong></td></tr><tr><td>1.16.4</td><td>35.1.37</td><td></td></tr><tr><td>1.16.3</td><td>34.1.42</td><td></td></tr><tr><td>1.16.2</td><td>33.0.61</td><td></td></tr><tr><td>1.16.1</td><td>32.0.108</td><td></td></tr><tr><td><strong>1.15.2</strong></td><td><strong>31.2.57</strong></td><td></td></tr><tr><td>1.15.1</td><td>30.0.51</td><td></td></tr><tr><td>1.15</td><td>29.0.4</td><td></td></tr><tr><td><strong>1.14.4</strong></td><td><strong>28.2.26</strong></td><td></td></tr><tr><td>1.14.3</td><td>27.0.60</td><td></td></tr><tr><td>1.14.2</td><td>26.0.63</td><td></td></tr><tr><td>1.13.2</td><td>25.0.233</td><td></td></tr><tr><td><strong>1.12.2</strong></td><td><strong>14.23.5.2860</strong></td><td><strong><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.12.2-14.23.5.2860/forge-1.12.2-14.23.5.2860-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.12.2-14.23.5.2860/forge-1.12.2-14.23.5.2860-mdk.zip">Mdk</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.12.2-14.23.5.2860/forge-1.12.2-14.23.5.2860-universal.jar">Universal</a></strong></td></tr><tr><td>1.12.1</td><td>14.22.1.2485</td><td></td></tr><tr><td>1.12</td><td>14.21.1.2443</td><td></td></tr><tr><td>1.11.2</td><td>13.20.1.2588</td><td></td></tr><tr><td>1.11</td><td>13.19.1.2199</td><td></td></tr><tr><td>1.10.2</td><td>12.18.3.2511</td><td></td></tr><tr><td>1.10</td><td>12.18.0.2000</td><td></td></tr><tr><td>1.9.4</td><td>12.17.0.2317</td><td></td></tr><tr><td>1.9</td><td>12.16.1.1938</td><td></td></tr><tr><td><strong>1.8.9</strong></td><td><strong>11.15.1.2318</strong></td><td></td></tr><tr><td>1.8.8</td><td>11.15.0.1655</td><td></td></tr><tr><td>1.8</td><td>11.14.4.1577</td><td></td></tr><tr><td><strong>1.7.10</strong></td><td><strong>10.13.4.1614</strong></td><td><strong><a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.7.10-10.13.4.1614-1.7.10/forge-1.7.10-10.13.4.1614-1.7.10-installer.jar">Installer</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.7.10-10.13.4.1614-1.7.10/forge-1.7.10-10.13.4.1614-1.7.10-src.zip">Src</a> <a href="https://maven.minecraftforge.net/net/minecraftforge/forge/1.7.10-10.13.4.1614-1.7.10/forge-1.7.10-10.13.4.1614-1.7.10-universal.jar">Universal</a></strong></td></tr><tr><td>1.7.10-pre4</td><td>10.12.2.1149</td><td></td></tr><tr><td>1.7.2</td><td>10.12.2.1161</td><td></td></tr><tr><td>1.6.4</td><td>9.11.1.1345</td><td></td></tr><tr><td>1.6.3</td><td>9.11.0.878</td><td></td></tr><tr><td>1.6.2</td><td>9.10.1.871</td><td></td></tr><tr><td>1.6.1</td><td>8.9.0.775</td><td></td></tr><tr><td>1.5.2</td><td>7.8.1.738</td><td></td></tr><tr><td>1.5.1</td><td>7.7.2.682</td><td></td></tr><tr><td>1.5</td><td>7.7.0.598</td><td></td></tr><tr><td>1.4.7</td><td>6.6.2.534</td><td></td></tr><tr><td>1.4.6</td><td>6.5.0.489</td><td></td></tr><tr><td>1.4.5</td><td>6.4.2.448</td><td></td></tr><tr><td>1.4.4</td><td>6.3.0.378</td><td></td></tr><tr><td>1.4.3</td><td>6.2.1.358</td><td></td></tr><tr><td>1.4.2</td><td>6.0.1.355</td><td></td></tr><tr><td>1.4.1</td><td>6.0.0.329</td><td></td></tr><tr><td>1.4</td><td>5.0.0.326</td><td></td></tr><tr><td>1.3.2</td><td>4.3.5.318</td><td></td></tr><tr><td>1.2.5</td><td>3.4.9.171</td><td></td></tr><tr><td>1.2.4</td><td>2.0.0.68</td><td></td></tr><tr><td>1.2.3</td><td>1.4.1.64</td><td></td></tr><tr><td>1.1</td><td>1.3.4.29</td><td></td></tr><tr><td>1.0.0</td><td>1.2.5</td><td><a href="https://master.dl.sourceforge.net/project/minecraftforge/1.2.5/minecraftforge-client-1.2.5.zip">Client</a> <a href="https://master.dl.sourceforge.net/project/minecraftforge/1.2.5/minecraftforge-server-1.2.5.zip">Server</a> <a href="https://master.dl.sourceforge.net/project/minecraftforge/1.2.5/minecraftforge-src-1.2.5.zip">Src</a></td></tr><tr><td>Beta 1.8.1</td><td>1.1.2</td><td><a href="https://master.dl.sourceforge.net/project/minecraftforge/1.1.2/minecraftforge-client-1.1.2.zip">Client</a> <a href="https://master.dl.sourceforge.net/project/minecraftforge/1.1.2/minecraftforge-server-1.1.2.zip">Server</a> <a href="https://master.dl.sourceforge.net/project/minecraftforge/1.1.2/minecraftforge-src-1.1.2.zip">Src</a></td></tr><tr><td>Beta 1.7.3</td><td>1.0.7</td><td><a href="https://master.dl.sourceforge.net/project/buildcraft/Forge%201.0.7%2020110907/minecraftforge-client-1.0.7-20110907.zip">Client</a> <a href="https://master.dl.sourceforge.net/project/buildcraft/Forge%201.0.7%2020110907/minecraftforge-server-1.0.7-20110907.zip">Server</a> <a href="https://master.dl.sourceforge.net/project/buildcraft/Forge%201.0.7%2020110907/minecraftforge-src-1.0.7-20110907.zip">Src</a></td></tr></tbody></table>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Minecraft 1.8.9 FML Mod 开发教程</title>
    <link href="/029147bea258/"/>
    <url>/029147bea258/</url>
    
    <content type="html"><![CDATA[<p><strong><a href="https://fmltutor.ustc-zzzz.net/">原文链接</a></strong></p><h1 id="0-绪论"><a href="#0-绪论" class="headerlink" title="0 绪论"></a>0 绪论</h1><h3 id="FML与Forge的由来"><a href="#FML与Forge的由来" class="headerlink" title="FML与Forge的由来"></a>FML与Forge的由来</h3><p>在很久很久以前（一个可以追溯到Minecraft刚刚发布的年代），人们就开始为Minecraft制作和使用Mod了。那个时候，由于Mod的制作方式是直接通过底层对Minecraft修改，所以将两个Minecraft Mod进行整合几乎是一件不可能的事情。</p><p>随后，Minecraft MCP（Minecraft Mod Coder Pack）的诞生，让Mod的制作和整合变得容易。这是因为Minecraft被进行了混淆化，这件事使得原本好看好记的诸如Item这样的类名、方法名、变量名等，通通被混淆化成了alq这样难以阅读和辨认的符号。Minecraft MCP的意义，就是对其进行反混淆，把alq这样的类名用一个诸如Item的名称代替。这使得人们可以通过更改MCP提供的源代码来进行Mod制作。但是，若是想合并两个Mod，必须要把两个Mod的源代码<strong>一行一行</strong>地进行整合。</p><p>直到2010年年底，一个叫作ModLoader的Mod横空出世，这使得Mod的开发方式产生了跨时代性的变化。ModLoader提供了一个框架和一套API，玩家通过这个框架可以很方便地管理Mod，开发者通过这一套API可以完成很多任务，如添加新方块、添加新物品，等等。</p><p>从2010年圣诞节前夕，Minecraft Beta版本发布开始，直到2011年年底Minecraft正式版发布，这一段时间被称为Minecraft Mod的“黄金时期”。很多著名的Mod如RailCraft，IndustrialCraft，BuildCraft等，都是这一时期开始开发的。但是，这段时期的Mod开发仍然问题重重。比如BuildCraft和IndistrialCraft就不能共存。他们更改了太多底层的东西。</p><p>这些Mod的开发者们看到Mod的整合仍旧困难，他们便发起了一项新的计划，这个计划就是Minecraft Forge。随着Minecraft正式版的发布和“黄金时期”的终结，很多Minecraft Forge的开发者，渐渐不再参与Minecraft Forge的开发。然而随着Mod数量的爆炸式增加，以LexManos和Cpw等为首的开发人员仍然坚持着Minecraft Forge的开发，并加入了很多崭新的特性。他们甚至将ModLoader这个框架整合进了Minecraft Forge，也就是Forge Mod Loader，简称FML。直到今天，Minecraft Forge和通过Minecraft Forge开发的难以计数的Mods，仍在发展壮大。</p><h3 id="阅读本教程需要什么"><a href="#阅读本教程需要什么" class="headerlink" title="阅读本教程需要什么"></a>阅读本教程需要什么</h3><h4 id="Java等程序设计基础知识"><a href="#Java等程序设计基础知识" class="headerlink" title="Java等程序设计基础知识"></a>Java等程序设计基础知识</h4><p>本教程不针对Java初学者，本教程假定读者已经对Java的基础知识有了一定深入的了解。换言之，本教程假设读者已经对下面这些Java概念进行了深入地了解：</p><ul><li>对象</li><li>类、属性和方法</li><li>变量、运算符和表达式</li><li>条件和循环</li><li>包、继承、多态和接口</li><li>泛型</li><li>容器</li><li>异常</li></ul><p>下面这些Java概念虽然对Mod开发比较重要，但是读者在阅读之前不需要掌握或者只有阅读本教程更深入的部分才需要掌握，如果教程的某一部分认为读者不需要掌握，教程会在用到的时候会加以简要的介绍，如果需要，教程会提醒读者阅读相关的资料：</p><ul><li>注解</li><li>数字和字符串的操作</li><li>输入输出流</li><li>多线程和同步</li><li>反射</li><li>中立字节码</li></ul><p>下面这些Java概念和本Mod开发教程无关，虽然这些概念在其他Java应用中比较重要，但在本教程中不会用到。当然，了解这些知识对Mod开发是有一定帮助的：</p><ul><li>正则表达式</li><li>图形界面</li><li>网络</li><li>数据库</li><li>…</li></ul><p>这里推荐一本书《Head First Java, 2nd Edition》，这本书的中文版适用于没有任何编程基础的读者。如果看完了这本书的前十一章，对于阅读本教程的Java基础知识就已经足够了。</p><p>如果想深入学习的话，推荐《Effective Java (2nd Edition)》和《The Java Language Specification (3rd Edition)》两本书。</p><p>相对而言，作者会保证教程使用的代码可以在Java6下运行，尽量减少使用一些令人迷惑的特性，并尽可能保证除了Forge&#x2F;FML之外，不使用其他的第三方库。</p><p>除了Java知识之外，了解一些游戏开发的知识，如OpenGL等等，对阅读本教程有一些帮助，但对于阅读本教程没有专门学习的必要，除非作者在某些地方特定指出了对该知识的需要。</p><h4 id="对Minecraft游戏的大致了解"><a href="#对Minecraft游戏的大致了解" class="headerlink" title="对Minecraft游戏的大致了解"></a>对Minecraft游戏的大致了解</h4><p>本教程假设读者在阅读本教程前，已经对Minecraft这款游戏有了一些了解，包括Minecraft中一些现象的运作机制，一些小技巧等有了一些了解。作者也相信对本教程感兴趣的读者已经做到了这一点。</p><h4 id="Java开发环境"><a href="#Java开发环境" class="headerlink" title="Java开发环境"></a>Java开发环境</h4><p>为实践本教程的内容，读者可能需要一台安装有<a href="http://www.oracle.com/technetwork/cn/java/javase/downloads/jdk7-downloads-1880260.html">JDK7</a>或<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">JDK8</a>或其他JDK版本的，可以保证流畅运行Minecraft的电脑。别忘了这里修改的是游戏（本人旧电脑的流畅度就很难满足这一条件&#x3D; &#x3D;）。</p><p>开发Mod最为推荐的JDK版本是JDK8，当然，使用特性相对较少的JDK7开发也是可以的。对于JDK6而言，虽然Minecraft 1.8.9可以在Java6上运行，但是JDK6相对而言太过陈旧了，所以并不推荐。对于JDK9及更高版本来说，由于Forge不准备对Minecraft 1.12.2及更低版本提供针对Java9及更高版本的支持，因此请不要尝试使用JDK9及更高版本编写Mod。</p><p>为了方便开发，你需要一个用于Java开发的IDE（Integrated Development Environment，集成开发环境），如Eclipse、IntelliJIDEA、Netbeans等，这里推荐<a href="http://www.eclipse.org/downloads/">Eclipse</a>和<a href="https://www.jetbrains.com/idea/download/">IntelliJIDEA</a>，本教程作者使用的IDE是IntelliJIDEA。</p><h4 id="一定程度的不借助JavaDoc的源代码分析能力"><a href="#一定程度的不借助JavaDoc的源代码分析能力" class="headerlink" title="一定程度的不借助JavaDoc的源代码分析能力"></a>一定程度的不借助JavaDoc的源代码分析能力</h4><p>Minecraft作为一个商业软件，每一次次版本号更新对于Mod界都是一次灾难，直到现在，仍然有很多优秀的Mod卡在Minecraft1.6.4、Minecraft1.7.10等旧版本。因此，这要求开发者拥有不借助JavaDoc，通过MCP提供的名称进行的源代码分析能力。当然，如果读者怀疑自己没有这方面的能力，那也没有关系，因为我相信通过本教程的学习，读者会慢慢掌握不借助JavaDoc分析源代码的能力的。</p><h4 id="对Mod开发的热情、缜密的思维、以及一个足够大而又能正常运作的脑洞"><a href="#对Mod开发的热情、缜密的思维、以及一个足够大而又能正常运作的脑洞" class="headerlink" title="对Mod开发的热情、缜密的思维、以及一个足够大而又能正常运作的脑洞"></a>对Mod开发的热情、缜密的思维、以及一个足够大而又能正常运作的脑洞</h4><p>这条很重要！！！</p><h3 id="本教程为读者提供什么"><a href="#本教程为读者提供什么" class="headerlink" title="本教程为读者提供什么"></a>本教程为读者提供什么</h3><h4 id="针对Minecraft-1-8-9版本并基于Forge的Mod开发教程"><a href="#针对Minecraft-1-8-9版本并基于Forge的Mod开发教程" class="headerlink" title="针对Minecraft 1.8.9版本并基于Forge的Mod开发教程"></a>针对Minecraft 1.8.9版本并基于Forge的Mod开发教程</h4><p>本教程主要面向的Minecraft版本为1.8.9，本教程也会兼顾到对于Minecraft 1.9、1.9.4、1.10等更高版本对应的Forge的支持。</p><p>本教程不讨论1.8、1.7.10及之前的如1.7.2、1.6.4等Minecraft版本，虽然较1.8.9早期的版本的Mod开发和1.8.9的有着很多相通之处，本教程的很多地方也可能会对这些版本的Mod开发提供帮助，但本教程不去探究这些差别。</p><p>本教程不讨论基于ModLoader、Liteloader等其他Mod API的开发，以及基于CraftBukkit、Spigot等插件的开发，等等。</p><p>虽然本教程的每一句都经过了作者的推敲，但是由于大意疏忽等原因，可能无法发现一些错误，恳情读者斧正。</p><h4 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h4><p>对于教程中的所有源代码实现，本教程会尽可能地保证在Minecraft 1.8.9版本、和给定Forge版本下的服务端和客户端下成功运行。本教程也会考虑到诸如Minecraft 1.9.4、1.10.2、1.11.2等更高的Minecraft版本对应的Forge版本，并尽可能使相同的代码在高版本的Forge里正常工作，但不作保证。</p><p>对于教程中出现的源代码，读者可能需要加上一些import等辅助语句以使其正常工作。对于教程附带的源代码，本教程已经在Minecraft 1.8.9版本、和给定Forge版本，也就是11.15.1.2318下的客户端和服务端进行了测试。</p><p>本教程的所有源代码虽然进行了充分的测试，但是由于作者水平有限，可能无法发现一些错误，恳情读者指出。</p><h3 id="工作环境的准备"><a href="#工作环境的准备" class="headerlink" title="工作环境的准备"></a>工作环境的准备</h3><p>从<a href="http://files.minecraftforge.net/">Forge官网</a>下载Forge<strong>Mdk</strong>，并<strong>尽可能采用稳定版本</strong>（作者采用的是<a href="http://adfoc.us/serve/sitelinks/?id=271228&url=http://files.minecraftforge.net/maven/net/minecraftforge/forge/1.8.9-11.15.1.2318-1.8.9/forge-1.8.9-11.15.1.2318-1.8.9-mdk.zip">11.15.1.2318</a>版本），本教程的所有开发操作都基于此。</p><p>接下来对于工作环境的配置，教程会在下一部分进行讲解，如果读者希望升级自己的开发环境中Forge的版本，可以参阅<a href="%E9%99%84%E5%BD%95A-%E9%85%8D%E7%BD%AEGradle%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7.md">附录</a>。</p><h1 id="1-基础部分"><a href="#1-基础部分" class="headerlink" title="1 基础部分"></a>1 基础部分</h1><h2 id="1-1-配置你的工作环境"><a href="#1-1-配置你的工作环境" class="headerlink" title="1.1 配置你的工作环境"></a>1.1 配置你的工作环境</h2><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>基础部分讲述的内容，是几乎所有Mod都会频繁使用的、较为容易实现的特性。</p><p>建议读者在阅读完绪论后，对于初级部分的每一部分都加以阅读。</p><h3 id="配置工作环境"><a href="#配置工作环境" class="headerlink" title="配置工作环境"></a>配置工作环境</h3><p>解压在上一部分，也就是绪论中提到的下载到的文件，进入该目录，也就是工作环境的根目录。</p><p>如果你使用的是Linux或者Mac OS X，在该目录下运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./gradlew setupDecompWorkspace<br></code></pre></td></tr></table></figure><p>如果你使用的是Microsoft Windows，则运行：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">gradlew.<span class="hljs-keyword">bat </span>setupDecompWorkspace<br></code></pre></td></tr></table></figure><p>后面的所有类似命令、都将描述的是在Linux或者Mac OS X的运行方式，如果是Microsoft Windows用户请将后面的所有命令中的<code>./gradlew</code>替换成<code>gradlew.bat</code>，教程不再赘述。</p><p>可以通过添加参数的方式设置代理，<code>&lt;host&gt;</code>表示代理服务器的地址，<code>&lt;port&gt;</code>表示开放代理的端口。</p><p>使用socks代理的方式：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./gradlew setupDecompWorkspace <span class="hljs-attribute">-DsocksProxyHost</span>=&lt;host&gt; <span class="hljs-attribute">-DsocksProxyPort</span>=&lt;port&gt;<br></code></pre></td></tr></table></figure><p>针对https资源使用http代理的方式：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./gradlew setupDecompWorkspace -Dhttps.<span class="hljs-attribute">proxyHost</span>=&lt;host&gt; -Dhttps.<span class="hljs-attribute">proxyPort</span>=&lt;port&gt;<br></code></pre></td></tr></table></figure><p>针对http资源使用http代理的方式：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./gradlew setupDecompWorkspace -Dhttp.<span class="hljs-attribute">proxyHost</span>=&lt;host&gt; -Dhttp.<span class="hljs-attribute">proxyPort</span>=&lt;port&gt;<br></code></pre></td></tr></table></figure><p>因为资源大多在国外，所以可能要等待一段漫长的时间。建议在网络状况好的地方运行此命令，以配置开发环境，并获取反编译过的Minecraft源代码。如果有条件，建议使用国外的代理。</p><p>在此我们提供了一个免费Shadowsocks代理服务器来帮助您构建. 注意此代理只能用来构建Forge无法访问其他墙外网站:</p><blockquote><p><strong>server:</strong> forge-build-srar-telecom.ustc-zzzz.net<br><strong>server_port:</strong> 65099<br><strong>password:</strong> 9c4d5a9a6d97<br><strong>method:</strong> rc4-md5  </p></blockquote><p>Shadowsocks客户端默认监听<code>127.0.0.1:1080</code>作为代理服务来运行, 当您配置完Shadowsocks后您可以执行以下命令来使用代理进行构建:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">./gradlew setupDecompWorkspace -Dhttps.<span class="hljs-attribute">proxyHost</span>=127.0.0.1 -Dhttp.<span class="hljs-attribute">proxyHost</span>=127.0.0.1 -Dhttps.<span class="hljs-attribute">proxyPort</span>=1080 -Dhttp.<span class="hljs-attribute">proxyPort</span>=1080<br></code></pre></td></tr></table></figure><blockquote><p>推荐使用的Shadowsocks客户端：<a href="https://github.com/shadowsocks/shadowsocks-windows/releases">https://github.com/shadowsocks/shadowsocks-windows/releases</a></p></blockquote><p>由于获取反编译的Minecraft源代码的过程是在自己的计算机上进行的，所以说有时可能出现内存不足的情况。如果运行一次后出现的错误中有<code>Java Heap Space</code>的字样，那很可能是因为默认情况下分配的内存不足。这时你可以添加下面的参数手动指定JVM的初始内存，同时禁用<a href="https://docs.gradle.org/current/userguide/gradle_daemon.html">Gradle Daemon</a>以减少不必要的内存消耗（当然，减少计算机上的其他不必要进程以提高内存可用空间也很重要）。经过作者测试，1.4G的内存足够反编译Minecraft了：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">./gradlew</span> setupDecompWorkspace -Dorg.gradle.jvmargs=-Xms1440m <span class="hljs-params">--no-daemon</span><br></code></pre></td></tr></table></figure><p>最后如果出现<code>BUILD SUCCESSFUL</code>字样，就代表你第一步的配置成功了，以下所有需要用到<code>./gradlew</code>的运行结果都以<code>BUILD SUCCESSFUL</code>字样为成功的标志，如果出现了<code>BUILD FAILED</code>字样，那么代表尚未成功，可以重新运行相同的命令尝试，如果还是不可以，可以尝试使用上面提到的使用代理的模式，并尝试手动指定JVM的初始内存。</p><p>如果你使用Eclipse作为你的IDE，请在上面的命令运行完成后运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./gradlew eclipse<br></code></pre></td></tr></table></figure><p>如果你使用IntelliJIDEA（IDEA大法好→_→）的话：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./gradlew idea<br></code></pre></td></tr></table></figure><p>使用代理的方式同上。</p><p>然后打开IDE，将工程目录切换到这个目录，如果配置成功，IDE会注意到这个目录存在一个工程，并自动找到刚刚配置的这个Mod工程的源代码和资源文件的位置。</p><p>默认配置中，Mod工程的源代码在目录<code>src/main/java</code>下，而Mod工程的资源文件（如图片、模型等）在目录<code>src/main/resources</code>下。读者应该会发现在Mod源代码中有一个<code>com.example.examplemod</code>的包，那个是测试用的，删掉就可以了。</p><h3 id="运行、构建和发布Mod的方法"><a href="#运行、构建和发布Mod的方法" class="headerlink" title="运行、构建和发布Mod的方法"></a>运行、构建和发布Mod的方法</h3><p>如果你想构建并发布你的Mod，运行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./gradlew build<br></code></pre></td></tr></table></figure><p>这样根目录下的<code>build/libs/</code>里会有一个jar包，那便是你构建完成的Mod文件。</p><p>如果想要运行客户端，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./gradlew runClient<br></code></pre></td></tr></table></figure><p>如果想要运行服务端，运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./gradlew runServer<br></code></pre></td></tr></table></figure><p>客户端和服务端的运行文件将在根目录的<code>eclipse</code>文件夹中。</p><p>上面三个命令在非特殊情况下，强烈建议添加<code>--offline</code>参数，阻止与外界网络的连接，即对国外的资源的访问，以提高速度。</p><p>当然，你也可以在你的IDE中运行、或者调试你的Mod。</p><p>对于Eclipse而言，Forge在针对IDE配置的时候，已经添加了相关的运行选项。不过对于IntelliJIDEA而言，你可能需要多运行一条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./gradlew genIntellijRuns<br></code></pre></td></tr></table></figure><p>然后你的IntelliJIDEA中就应该有运行选项了。</p><h3 id="Mod的唯一标识符"><a href="#Mod的唯一标识符" class="headerlink" title="Mod的唯一标识符"></a>Mod的唯一标识符</h3><p>每个Mod都会有一串唯一标识符用于与其他Mod相区分，这个标识符我们通常也称为modid。</p><p><strong>modid请全部使用小写字母，并且不要使用除英文字母和下划线外的其他符号</strong>。实际上，Forge从Minecraft 1.11对应的某个Forge版本开始就不支持含有大写字母的modid了（同时modid的长度不得超过64个字符，不过应该没人会起那么长的modid）。当然，你可以使用小写加下划线的<code>snake_case</code>形式，事实上我们也推荐使用这一形式。</p><p>modid一旦决定，就不能轻易改动，因为其他Mod很可能根据这一唯一标识符来识别你的Mod，如果名称发生更改则可能带来意料之外的影响，所以考虑modid时一定要慎重。</p><h3 id="Forge是如何管理工程的"><a href="#Forge是如何管理工程的" class="headerlink" title="Forge是如何管理工程的"></a>Forge是如何管理工程的</h3><p>很明显，Mod的管理、构建都十分复杂，所以Forge使用了一个被称为<a href="https://gradle.org/">Gradle</a>的工具，还通过编写插件的方式对其进行了<a href="https://github.com/MinecraftForge/ForgeGradle">修改</a>。Gradle本身是一个比较强大的工程构建工具，它本身集成了很多的编译、构建选项，却又十分简单（相对<a href="https://maven.apache.org/">Maven</a>来说）。</p><p>在你的根目录下应该有一个文件名为<code>bulid.gradle</code>的文件（为了节省篇幅，这里删掉了所有的注释）：</p><p><strong><code>build.gradle:</code></strong></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">buildscript</span> &#123;<br>    <span class="hljs-keyword">repositories</span> &#123;<br>        jcenter()<br>        maven &#123;<br>            name = <span class="hljs-string">&quot;forge&quot;</span><br>            url = <span class="hljs-string">&quot;http://files.minecraftforge.net/maven&quot;</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">dependencies</span> &#123;<br>        <span class="hljs-keyword">classpath</span> <span class="hljs-string">&#x27;net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT&#x27;</span><br>    &#125;<br>&#125;<br>apply plugin: <span class="hljs-string">&#x27;net.minecraftforge.gradle.forge&#x27;</span><br><br>version = <span class="hljs-string">&quot;1.0&quot;</span><br><span class="hljs-keyword">group</span>= <span class="hljs-string">&quot;com.yourname.modid&quot;</span><br>archivesBaseName = <span class="hljs-string">&quot;modid&quot;</span><br><br>minecraft &#123;<br> version = <span class="hljs-string">&quot;1.8.9-11.15.1.2318-1.8.9&quot;</span><br> runDir = <span class="hljs-string">&quot;run&quot;</span><br> <br> mappings = <span class="hljs-string">&quot;stable_20&quot;</span><br>&#125;<br><br><span class="hljs-keyword">dependencies</span> &#123;<br><br>&#125;<br><br>processResources<br>&#123;<br> inputs.property <span class="hljs-string">&quot;version&quot;</span>, <span class="hljs-keyword">project</span>.version<br> inputs.property <span class="hljs-string">&quot;mcversion&quot;</span>, <span class="hljs-keyword">project</span>.minecraft.version<br><br> <span class="hljs-keyword">from</span>(<span class="hljs-keyword">sourceSets</span>.main.resources.srcDirs) &#123;<br>     <span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;mcmod.info&#x27;</span><br>             <br>     expand <span class="hljs-string">&#x27;version&#x27;</span>:<span class="hljs-keyword">project</span>.version, <span class="hljs-string">&#x27;mcversion&#x27;</span>:<span class="hljs-keyword">project</span>.minecraft.version<br> &#125;<br>     <br> <span class="hljs-keyword">from</span>(<span class="hljs-keyword">sourceSets</span>.main.resources.srcDirs) &#123;<br>     <span class="hljs-keyword">exclude</span> <span class="hljs-string">&#x27;mcmod.info&#x27;</span><br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里，我们找到其中的三行：</p><p><strong><code>build.gradle（部分）:</code></strong></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">version</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;1.0&quot;</span><br><span class="hljs-attribute">group</span><span class="hljs-operator">=</span> <span class="hljs-string">&quot;com.yourname.modid&quot;</span><br><span class="hljs-attribute">archivesBaseName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;modid&quot;</span><br></code></pre></td></tr></table></figure><p>并更改掉它：</p><p><strong><code>build.gradle（部分）:</code></strong></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">version</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;1.0.0&quot;</span><br><span class="hljs-attribute">group</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;com.github.ustc_zzzz&quot;</span><br><span class="hljs-attribute">archivesBaseName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;fmltutor&quot;</span><br></code></pre></td></tr></table></figure><p><code>version</code>表示该Mod的版本。关于版本的设置，可以参照一个GitHub推荐的，被称为<a href="http://semver.org/lang/zh-CN/">语义化版本</a>的标准（<a href="http://semver.org/">英文原版</a>），按照这个标准，作为第一个正式版本，显然应该是1.0.0。</p><p><code>group</code>表示组id，建议使用Java包命名规范，比如如果你这个项目所在网站为<code>www.example.com</code>，那么包名建议为：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">com</span>.example.<span class="hljs-symbol">&lt;your_username&gt;</span>.<span class="hljs-symbol">&lt;your_project_name&gt;</span><br></code></pre></td></tr></table></figure><p>比如本教程的所有代码都在这个包下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">com<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.ustc_zzzz</span>.fmltutor<br></code></pre></td></tr></table></figure><p>当然如果没有网站，也可以直接使用用户名：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">your_username</span>&gt;</span>.<span class="hljs-tag">&lt;<span class="hljs-name">your_project_name</span>&gt;</span><br></code></pre></td></tr></table></figure><p>比如对于本教程的代码，可以这样命名：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">ustc_zzzz.fmltutor<br></code></pre></td></tr></table></figure><p>当然，也有直接以Mod名称作为包命名的，等等。</p><p>总而言之，包的命名以不冲突为前提。</p><p><code>archivesBaseName</code>表示生成的Mod包使用的名称，Mod包使用的文件名是“名称+横线+版本号.jar”，这里就是<code>fmltutor-1.0.jar</code>。</p><p>Gradle本身有一个详细的<a href="https://docs.gradle.org/current/userguide/userguide.html">User Guide</a>，如果读者对进一步的配置感兴趣，可以仔细阅读。</p><p>对于Mod进一步的配置，我们会在下一部分中提及。</p><h2 id="1-2-主类、代理和Mod信息"><a href="#1-2-主类、代理和Mod信息" class="headerlink" title="1.2 主类、代理和Mod信息"></a>1.2 主类、代理和Mod信息</h2><h3 id="新建一个主类"><a href="#新建一个主类" class="headerlink" title="新建一个主类"></a>新建一个主类</h3><p>新建一个包（这里是<code>com.github.ustc_zzzz.fmltutor</code>），并在其中新建一个类（<strong>强烈建议这个类的类名和你的Mod名称相同</strong>），这就是这个Mod的主类了。</p><p>把下面的代码抄进你新建的类中，下面我会解释为什么要这么做。</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/FMLTutor.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.common.CommonProxy;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.Mod;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.Mod.EventHandler;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.Mod.Instance;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.SidedProxy;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPostInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> ustc_zzzz</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Mod(modid = FMLTutor.MODID, name = FMLTutor.NAME, version = FMLTutor.VERSION, acceptedMinecraftVersions = &quot;1.8.9&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FMLTutor</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">MODID</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;fmltutor&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;FML Tutor&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">VERSION</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;1.0.0&quot;</span>;<br><br>    <span class="hljs-meta">@Instance(FMLTutor.MODID)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> FMLTutor instance;<br><br>    <span class="hljs-meta">@EventHandler</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        <span class="hljs-comment">// TODO</span><br>    &#125;<br><br>    <span class="hljs-meta">@EventHandler</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>    &#123;<br>        <span class="hljs-comment">// TODO</span><br>    &#125;<br><br>    <span class="hljs-meta">@EventHandler</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">postInit</span><span class="hljs-params">(FMLPostInitializationEvent event)</span><br>    &#123;<br>        <span class="hljs-comment">// TODO</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>package</code>、<code>import</code>部分含义显而易见。</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/FMLTutor.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mod(modid = FMLTutor.MODID, name = FMLTutor.NAME, version = FMLTutor.VERSION, acceptedMinecraftVersions = &quot;1.8.9&quot;)</span><br></code></pre></td></tr></table></figure><p>上面这一行是Java从JDK1.5引入的一种机制：注解。注解的功能类似于代码中的注释，不同的是，注解不仅提供代码功能的说明，还是实现程序功能的重要组成部分。Java注解已经在很多框架中得到了广泛的使用，用来简化程序中的配置。</p><p>比如下面三个最常见的注解：</p><ul><li><code>@Override</code> 用于声明该方法覆写了父类方法，使用该注解，如果（由于拼写错误等）没有覆写，编译器会报错</li><li><code>@SuppressWarning</code> 用于显式忽略警告，使用该注解，编译器不会产生对应代码的警告</li><li><code>@Deprecated</code> 用于标记一个方法不应该再被使用，使用该注解，如果在代码中调用了该方法，编译器会产生一个警告</li></ul><p>因为注解中可以添加键-值对，所以动态查看一个注解的内容是有意义的，也是可行的。比如这个注解，FML在加载这个Mod的时候，就会去自动寻找含有<code>@Mod</code>注解的类，并读取下面的数据：</p><ul><li><code>modid</code>指的就是该Mod的唯一标识符</li><li><code>name</code>指的是该Mod的名称</li><li><code>version</code>指的是该Mod的版本号，在Mod间的依赖关系时可能会用作识别</li><li><code>acceptedMinecraftVersions</code>指的是Mod接受的Minecraft版本，当版本不对时，FML会优雅地抛出一个错误而不是继续加载这个Mod</li></ul><p><code>acceptedMinecraftVersions</code>约定的版本声明如下：</p><ul><li><code>1.8.9</code>（本教程）表示该Mod只支持Minecraft 1.8.9</li><li><code>[1.8,1.9)</code>表示该Mod支持从1.8（包含）到1.9（不包含）的所有Minecraft版本</li><li><code>[1.8,1.10]</code>表示该Mod支持从1.8（包含）到1.10（包含）的所有Minecraft版本</li><li><code>[1.8,)</code>表示该Mod支持从1.8（包含）之后出现的所有Minecraft版本</li><li><code>(,1.8],[1.9,)</code>表示该Mod支持1.8（包含）之前出现的所有Minecraft版本和从1.9（包含）之后出现的所有Minecraft版本</li></ul><p>当然这个注解也有着其他数据（没有声明的数据作为默认值），比如该Mod依赖于什么Mod等等，有些比较有必要的数据会在后面部分讲到。</p><p>下面的三个方法带有<code>@EventHandler</code>注解，它们的作用也是类似。Forge在找到这个类后，会检查这个类中所有含有<code>@EventHandler</code>注解的方法，并通过方法的参数类型来判定到底应该在何时调用它们：</p><ul><li>含有<code>FMLPreInitializationEvent</code>参数的方法（这里是<code>preInit</code>）在所有Mod初始化之前调用，<strong>这时候应该加载配置文件，实例化物品和方块，并注册它们</strong>。</li><li>含有<code>FMLInitializationEvent</code>参数的方法（这里是<code>init</code>）用于该Mod的初始化，<strong>这时候应该为Mod进行设置，如注册合成表和烧炼系统，并且向其他Mod发送交互信息</strong>。</li><li>含有<code>FMLPostInitializationEvent</code>参数的方法（这里是<code>postInit</code>）在所有Mod都初始化之后调用，<strong>这时候应该接收其他Mod发送的交互信息，并完成对Mod的设置</strong>。</li></ul><p>有些Mod会把注册方块、物品等等操作放在Mod初始化阶段完成，<strong>这种做法是不推荐的，Forge推荐在<code>preInit</code>阶段完成</strong>。</p><p><code>@Instance</code>注解的作用是将生成的该Mod的实例，注册到对应的Mod的id，同时，也可以访问其他Mod的id对应的实例，当然，<strong>这里的id要和本Mod的id相同</strong>。</p><h3 id="代理？那是什么"><a href="#代理？那是什么" class="headerlink" title="代理？那是什么"></a>代理？那是什么</h3><p>众所周知，Minecraft Mod有客户端和服务端两种使用方式，而两种方式的差异足够大使得Mod需要采用两种初始化方式，而两种方式的差异又足够小使得Mod没有必要制作客户端和服务端两个版本。这时候代理便起到了区别两种初始化方式的作用。<strong>在单机运行时，Minecraft也会生成一个本地服务端</strong>。服务端和客户端之间的差异十分复杂，甚至很多都只是经验之谈，然而有一点往往是通用的，<strong>服务端的代码，往往客户端都会执行</strong>。</p><p>在主类中添加以下代码：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/FMLTutor.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SidedProxy(clientSide = &quot;com.github.ustc_zzzz.fmltutor.client.ClientProxy&quot;, </span><br><span class="hljs-meta">        serverSide = &quot;com.github.ustc_zzzz.fmltutor.common.CommonProxy&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> CommonProxy proxy;<br></code></pre></td></tr></table></figure><p>Forge会在加载Mod的时候自动使用上面的类名对这个代理进行实例化。</p><p>当然，我们需要创建上面所说的<code>CommonProxy</code>，和<code>ClientProxy</code>。</p><p>新建一个包<code>com.github.ustc_zzzz.fmltutor.common</code>，在其中新建一个类<code>CommonProxy</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.common;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPostInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommonProxy</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>    &#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">postInit</span><span class="hljs-params">(FMLPostInitializationEvent event)</span><br>    &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>新建包<code>com.github.ustc_zzzz.fmltutor.client</code>，新建类<code>ClientProxy</code>，并继承类<code>CommonProxy</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/client/ClientProxy.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.client;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.common.CommonProxy;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPostInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ClientProxy</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">CommonProxy</span><br>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>.preInit(event);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>.init(event);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">postInit</span><span class="hljs-params">(FMLPostInitializationEvent event)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>.postInit(event);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>主类的调整：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/FMLTutor.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EventHandler</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    proxy.preInit(event);<br>&#125;<br><br><span class="hljs-meta">@EventHandler</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>&#123;<br>    proxy.init(event);<br>&#125;<br><br><span class="hljs-meta">@EventHandler</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">postInit</span><span class="hljs-params">(FMLPostInitializationEvent event)</span><br>&#123;<br>    proxy.postInit(event);<br>&#125;<br></code></pre></td></tr></table></figure><p>很明显，当服务端被初始化时，<code>CommonProxy</code>类中对应方法会被调用，如果是客户端，<code>ClientProxy</code>类中对应方法会被调用，这样我们就可以实现服务端和客户端的差异。</p><h3 id="完善你的Mod信息"><a href="#完善你的Mod信息" class="headerlink" title="完善你的Mod信息"></a>完善你的Mod信息</h3><p>一个Mod的信息在其jar根目录下的<code>mcmod.info</code>文件里，这里是<code>src/main/resources/mcmod.info</code>，打开就可以完善你的Mod信息。<strong>注意：<code>version</code>和<code>mcversion</code>字段不应修改，它们会在Gradle构建Mod的时候被自动替换掉</strong>。你应该更改<code>build.gradle</code>文件。</p><p>比如，本教程的<code>mcmod.info</code>文件是这个样子的：</p><p><strong><code>src/main/resources/mcmod.info:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">[</span><br><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;modid&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;FML Tutor&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;description&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;A Minecraft 1.8 Forge Mod Loader Tutorial by ustc_zzzz.&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$&#123;version&#125;&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;mcversion&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$&#123;mcversion&#125;&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://github.com/ustc-zzzz/fmltutor/wiki&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;updateUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;https://github.com/ustc-zzzz/fmltutor/tags&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;authorList&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;ustc_zzzz&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;credits&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Notch, Cpw, etc.&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;logoFile&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;screenshots&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;dependencies&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><h2 id="1-3-第一个物品"><a href="#1-3-第一个物品" class="headerlink" title="1.3 第一个物品"></a>1.3 第一个物品</h2><h3 id="制作一个物品一共分几步"><a href="#制作一个物品一共分几步" class="headerlink" title="制作一个物品一共分几步"></a>制作一个物品一共分几步</h3><p>制作一个物品一共分三步：</p><ol><li>创建一个物品</li><li>实例化并注册这个物品</li><li>为这个物品添加模型和材质</li></ol><p>Minecraft中，使用八个金锭和一个苹果可以创造一个金苹果，那我们是不是可以创造一个金蛋呢，这一次教程会一步一步地带着你完成制作新物品的全过程。</p><h3 id="创建一个物品"><a href="#创建一个物品" class="headerlink" title="创建一个物品"></a>创建一个物品</h3><p>如果读者翻看了<code>net.minecraft.item</code>包，想必就会发现你在Minecraft中遇到的各种物品，都继承了<code>Item</code>类，那很明显，我们制作的物品也要继承这个类。</p><p>新建一个包<code>com.github.ustc_zzzz.fmltutor.item</code>，在其中创建一个类<code>ItemGoldenEgg</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemGoldenEgg.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.item;<br><br><span class="hljs-keyword">import</span> net.minecraft.item.Item;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ItemGoldenEgg</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Item</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemGoldenEgg</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>();<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;goldenEgg&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里的<code>setUnlocalizedName</code>方法为该物品添加了一个非本地化的名称，该名称为“<code>item.</code>”+设置的名称，比如这里就是<code>item.goldenEgg</code>，这个非本地化名称，与本地化和国际化有关，在后面的部分我们会讲到。<strong>非本地化名称尽量使用小写驼峰式写法，即第一个词以小写字母开始，第二个词开始首字母大写，中间不使用任何符号分隔</strong>。</p><h3 id="实例化并注册这个物品"><a href="#实例化并注册这个物品" class="headerlink" title="实例化并注册这个物品"></a>实例化并注册这个物品</h3><p>在<code>CommonProxy</code>类中添加下面的代码：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemLoader</span>(event);<br>&#125;<br></code></pre></td></tr></table></figure><p>新建一个类<code>ItemLoader</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.item;<br><br><span class="hljs-keyword">import</span> net.minecraft.item.Item;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.registry.GameRegistry;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ItemLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Item</span> <span class="hljs-variable">goldenEgg</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemGoldenEgg</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        register(goldenEgg, <span class="hljs-string">&quot;golden_egg&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">register</span><span class="hljs-params">(Item item, String name)</span><br>    &#123;<br>        GameRegistry.registerItem(item.setRegistryName(name));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>新建一个类进行初始化的原因是当你的物品越来越多，如果所有的注册过程都直接在<code>CommonProxy</code>类中进行，随着注册的对象越来越多，这些注册的对象会越来越难以管理。换句话说，这体现了代码模块化的原则。</p><p>首先，我们要实例化这个物品：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Item</span> <span class="hljs-variable">goldenEgg</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemGoldenEgg</span>();<br></code></pre></td></tr></table></figure><p>然后，我们来到了这块的重点，注册这个物品：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">GameRegistry.registerItem(item.setRegistryName(name));<br></code></pre></td></tr></table></figure><p><code>GameRegistry</code>是Forge提供的一个用来注册物品、方块、合成表、烧炼规则等各种常见内容的类，比如下面的用于注册的方法我们在后面都会遇到并加以讲解：</p><ul><li><code>registerBlock</code>方法用于注册方块</li><li><code>registerFuelHandler</code>方法用于注册燃料</li><li><code>registerItem</code>方法用于注册物品</li><li><code>registerTileEntity</code>方法用于注册TileEntity（后面会讲到什么是TileEntity）</li><li><code>registerWorldGenerator</code>方法用于注册世界生成器以生成不同的世界</li><li><code>addRecipe</code>方法和<code>addShapedRecipe</code>方法用于注册合成表</li><li><code>addSmelting</code>方法用于注册物品烧炼规则</li></ul><p>这个方法需要传入一个<code>Item</code>类的实例用于注册物品，那么如何指定这个物品的id呢？在示例中，我们通过调用物品的<code>setRegistryName</code>方法指定了物品的id，这也是从1.8.9开始指定物品id的通用做法。</p><p>有一点需要注意，从Minecraft的1.9及以上版本开始，<code>GameRegistry</code>类中相应的方法名被修改为了<code>register</code>方法，因此注册物品时需要用到的代码会有一点微小的变动。</p><p>我们这里通过参数提供物品的id。<strong>id请尽量使用小写字母加下划线，并且同一个Mod下的物品id不能相同</strong>，有的Mod会使用驼峰式，这样的好处是把物品的非本地化名称和物品id设置成相同的，<strong>但是我们不推荐这样的做法</strong>。</p><p>现在不管是在服务端，还是在客户端，Forge都会在<code>preInit</code>阶段，运行到<code>ItemLoader</code>类中的构造函数，也就是实例化一个物品，并注册它。</p><p>现在运行客户端，运行命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">/give <span class="hljs-keyword">@a</span> <span class="hljs-attribute">fmltutor</span>:golden_egg<br></code></pre></td></tr></table></figure><p>玩家的手上便多了一个新的物品。</p><h3 id="为这个物品添加模型和材质"><a href="#为这个物品添加模型和材质" class="headerlink" title="为这个物品添加模型和材质"></a>为这个物品添加模型和材质</h3><p>可以看到，你手上的物品，现在还什么都没有，只是一个两种颜色交替的方块，这是因为你没有添加模型和材质。模型的作用是保证你手里的物品是一个扁平的长方体，而材质的作用，就是给这个长方体上色。</p><p>首先，新建一个文件夹：<code>src/main/resources/assets/fmltutor/models/item</code>，并在其中新建一个文件：<code>golden_egg.json</code>：</p><p><strong><code>src/main/resources/assets/fmltutor/models/item/golden_egg.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;parent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;builtin/generated&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;textures&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;layer0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:items/golden_egg&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;display&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;thirdperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">-90</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-2</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0.55</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.55</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.55</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;firstperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-135</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>当然，这里的<code>fmltutor</code>就是Mod id，<code>golden_egg</code>就是你的物品id。</p><p>这个json的文件，就是这个物品的模型，这个文件的内容解释起来极其复杂，这也不是教程负责的介绍内容，直接抄下来就好了，但是有的地方是显而易见的：</p><p><strong><code>src/main/resources/assets/fmltutor/models/item/golden_egg.json（部分）:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;textures&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;layer0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:items/golden_egg&quot;</span><br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br></code></pre></td></tr></table></figure><p>这一部分告诉我们的是这个物品材质的位置，也就是<code>fmltutor:items/golden_egg</code>，很明显，我们需要建立一个材质文件。这里使用的是16x16的材质文件（当然Minecraft也支持尺寸更大如32x32的材质文件，不过建议还是使用16x16的），新建文件夹<code>src/main/resources/assets/fmltutor/textures/items</code>，把制作完成的golden_egg.png放入（其实是我照着鸡蛋的原图嗐改的&#x3D;_&#x3D;||）：</p><p><strong><code>src/main/resources/assets/fmltutor/textures/items/golden_egg.png:</code></strong></p><p><img src="/golden_egg.png" alt="golden_egg"></p><p>所有模型和材质都准备好了，现在需要做的，就是<strong>让Minecraft知道你准备的模型和材质</strong>了。</p><p>修改<code>ItemLoader</code>类的内容：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.item;<br><br><span class="hljs-keyword">import</span> net.minecraft.client.resources.model.ModelResourceLocation;<br><span class="hljs-keyword">import</span> net.minecraft.item.Item;<br><span class="hljs-keyword">import</span> net.minecraftforge.client.model.ModelLoader;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.registry.GameRegistry;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.relauncher.Side;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.relauncher.SideOnly;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ItemLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Item</span> <span class="hljs-variable">goldenEgg</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemGoldenEgg</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        register(goldenEgg, <span class="hljs-string">&quot;golden_egg&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@SideOnly(Side.CLIENT)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRenders</span><span class="hljs-params">()</span><br>    &#123;<br>        registerRender(goldenEgg);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">register</span><span class="hljs-params">(Item item, String name)</span><br>    &#123;<br>        GameRegistry.registerItem(item.setRegistryName(name));<br>    &#125;<br><br>    <span class="hljs-meta">@SideOnly(Side.CLIENT)</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRender</span><span class="hljs-params">(Item item)</span><br>    &#123;<br>        <span class="hljs-type">ModelResourceLocation</span> <span class="hljs-variable">model</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelResourceLocation</span>(item.getRegistryName(), <span class="hljs-string">&quot;inventory&quot;</span>);<br>        ModelLoader.setCustomModelResourceLocation(item, <span class="hljs-number">0</span>, model);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们来看这一段：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SideOnly(Side.CLIENT)</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRender</span><span class="hljs-params">(Item item)</span><br>&#123;<br>    <span class="hljs-type">ModelResourceLocation</span> <span class="hljs-variable">model</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelResourceLocation</span>(item.getRegistryName(), <span class="hljs-string">&quot;inventory&quot;</span>);<br>    ModelLoader.setCustomModelResourceLocation(item, <span class="hljs-number">0</span>, model);<br>&#125;<br></code></pre></td></tr></table></figure><p>Forge提供了<code>ModelLoader</code>类用于加载和处理模型，其<code>setCustomModelResourceLocation</code>方法有三个参数：</p><ul><li>第一个参数是要被注册的物品。</li><li>第二个参数是这个物品的Metadata。Metadata是一个用于区分同一个物品或方块的不同状态的数据，比如钟表的十六种状态、羊毛的十六种颜色，在3.2.1节会讲到Metadata，默认为零就好了。</li><li>第三个参数就是这个物品模型的资源位置了，资源位置是类<code>ModelResourceLocation</code>的一个实例，它用于描述一个模型，在后面我们还会比较常用到这个类的。</li></ul><p><code>ModelResourceLocation</code>被用于标注模型的位置，通常为由冒号（<code>:</code>）和井号（<code>#</code>）分隔的三个字符串组成，对于我们这里构造的<code>ModelResourceLocation</code>，它的一部分通过调用物品的<code>getRegistryName</code>方法得到，第二部分由我们指定，为<code>inventory</code>，是一个固定的字符串，代表作为一个物品的渲染模型。</p><p>在这里，第一部分为<code>fmltutor:golden_egg</code>，第二部分为<code>inventory</code>，组合后的<code>ModelResourceLocation</code>就是<code>fmltutor:golden_egg#inventory</code>。Minecraft便会去相应的目录下寻找相应的资源：</p><ul><li><code>fmltutor</code>指示游戏应该在<code>assets.fmltutor</code>包下找到这个资源</li><li><code>inventory</code>指示游戏应该在<code>assets.fmltutor.models.item</code>包下找到这个资源</li><li><code>golden_egg</code>指示这个资源就是<code>assets.fmltutor.models.item.golden_egg.json</code>，对应到源代码，就是<code>src/main/resources/assets/fmltutor/models/item/golden_egg.json</code>这一文件</li></ul><p>当然，上面已经提到了，<code>golden_egg.json</code>模型文件里已经包含了材质的信息。</p><p><code>@SideOnly</code>注解的作用是注解这一方法、类等只作用于客户端或服务端。很明显，对于模型和材质的操作只会在客户端执行（实际上如果在服务端执行会出错），所以我们同时要在**<code>ClientProxy</code>的<code>preInit</code>阶段**中初始化：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/client/ClientProxy.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.client;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.common.CommonProxy;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPostInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ClientProxy</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">CommonProxy</span><br>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>.preInit(event);<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemRenderLoader</span>();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>.init(event);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">postInit</span><span class="hljs-params">(FMLPostInitializationEvent event)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>.postInit(event);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在<code>com.github.ustc_zzzz.fmltutor.client</code>下新建<code>ItemRenderLoader</code>类：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/client/ItemRenderLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.client;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.item.ItemLoader;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ItemRenderLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemRenderLoader</span><span class="hljs-params">()</span><br>    &#123;<br>        ItemLoader.registerRenders();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>现在在客户端，Forge会在<code>preInit</code>阶段，运行到<code>ItemRenderLoader</code>类的构造函数，进而运行到<code>ItemLoader</code>类中的<code>registerRenders</code>方法中的代码，也就是注册这个物品的渲染，而在服务端则不会运行。</p><p>现在运行游戏，你的手上是不是有了一个金色的蛋啦～</p><p>最后说一句，把所有只在客户端执行的代码放到同一个<code>client</code>文件夹下是一个好的习惯。</p><h2 id="1-4-第一个方块"><a href="#1-4-第一个方块" class="headerlink" title="1.4 第一个方块"></a>1.4 第一个方块</h2><h3 id="制作一个方块一共分几步"><a href="#制作一个方块一共分几步" class="headerlink" title="制作一个方块一共分几步"></a>制作一个方块一共分几步</h3><p>制作一个方块一共只比物品多一步：</p><ol><li>创建一个方块</li><li>实例化并注册这个方块</li><li>为这个方块对应的物品添加模型和材质</li><li>为这个方块添加模型和材质</li></ol><p>我们发现雪可以合成雪块，那么，草可不可以合成草块呢&#x3D; &#x3D;本次教程将带领你一步一步地做出一个草块。</p><h3 id="创建一个方块"><a href="#创建一个方块" class="headerlink" title="创建一个方块"></a>创建一个方块</h3><p>创建一个方块的过程，和创建一个物品的过程非常相似。</p><p>这里我们如法炮制，新建一个包<code>com.github.ustc_zzzz.fmltutor.block</code>，并新建文件<code>BlockGrassBlock.java</code>，在其中创建一个类，使其继承方块类：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/block/BlockGrassBlock.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.block;<br><br><span class="hljs-keyword">import</span> net.minecraft.block.Block;<br><span class="hljs-keyword">import</span> net.minecraft.block.material.Material;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BlockGrassBlock</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Block</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BlockGrassBlock</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(Material.ground);<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;grassBlock&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setHardness(<span class="hljs-number">0.5F</span>);<br>        <span class="hljs-built_in">this</span>.setStepSound(soundTypeGrass);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>一个方块初始化的时候和物品有一点不同，例如需要设定方块的材质，这里设定成和泥土一样的材质。</p><p>当然，就像上面那样，方块往往有很多需要设定的性质，现将一些常见的设定方法列举如下：</p><ul><li><code>setBlockUnbreakable</code>方法用于设定方块的硬度为-1，即不能损坏。</li><li><code>setHardness</code>方法用于设定方块的硬度，如黑曜石是50，铁块5，金块3，圆石2，石头1.5，南瓜1，泥土0.5，甘蔗0，基岩-1。</li><li><code>setHarvestLevel</code>方法用于设定方块的可挖掘等级，如钻石镐是3，铁2，石1，木金0。</li><li><code>setLightLevel</code>方法用于设定方块的光照，其周围的光照为设定值x15，如岩浆1.0，对应15，红石火把0.5，对应7.5。</li><li><code>setLightOpacity</code>方法用于设定方块的透光率，数值越大透光率越低，如树叶和蜘蛛网是1，水和冰3。</li><li><code>setResistance</code>方法用于设定方块的爆炸抗性，如木头的抗性为4，石头为10，黑曜石为2000，基岩为6000000。</li><li><code>setStepSound</code>方法用于设定走在方块上的响声。</li><li><code>setTickRandomly</code>方法用于设定方块是否会接受随机Tick（如农作物）。</li></ul><h3 id="实例化并注册这个方块"><a href="#实例化并注册这个方块" class="headerlink" title="实例化并注册这个方块"></a>实例化并注册这个方块</h3><p>同样，在<code>CommonProxy</code>类中添加下面的代码：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">BlockLoader</span>(event);<br>&#125;<br></code></pre></td></tr></table></figure><p>新建一个类<code>BlockLoader</code>，以完成对应的方块的注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/block/BlockLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.block;<br><br><span class="hljs-keyword">import</span> net.minecraft.block.Block;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.registry.GameRegistry;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BlockLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Block</span> <span class="hljs-variable">grassBlock</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BlockGrassBlock</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BlockLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        register(grassBlock, <span class="hljs-string">&quot;grass_block&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">register</span><span class="hljs-params">(Block block, String name)</span><br>    &#123;<br>        GameRegistry.registerBlock(block.setRegistryName(name));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>有一点需要注意，从Minecraft的1.9及以上版本开始，除和物品一样，<code>GameRegistry</code>类中相应的方法名被修改为了<code>register</code>方法之外，方块对应的物品需要手动实例化一个<code>ItemBlock</code>去注册。关于<code>ItemBlock</code>的更多内容，请参阅3.2.1节。</p><p>现在不管是在服务端，还是在客户端，Forge都会在<code>preInit</code>阶段，运行到<code>BlockLoader</code>类的构造方法中的代码，实例化一个方块并注册它。</p><h3 id="为这个方块对应的物品添加模型和材质"><a href="#为这个方块对应的物品添加模型和材质" class="headerlink" title="为这个方块对应的物品添加模型和材质"></a>为这个方块对应的物品添加模型和材质</h3><p>和物品一样，我们现在扩充一下<code>BlockLoader</code>类的代码：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/block/BlockLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.block;<br><br><span class="hljs-keyword">import</span> net.minecraft.block.Block;<br><span class="hljs-keyword">import</span> net.minecraft.client.resources.model.ModelResourceLocation;<br><span class="hljs-keyword">import</span> net.minecraft.item.Item;<br><span class="hljs-keyword">import</span> net.minecraftforge.client.model.ModelLoader;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.registry.GameRegistry;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.relauncher.Side;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.relauncher.SideOnly;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BlockLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Block</span> <span class="hljs-variable">grassBlock</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BlockGrassBlock</span>();<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BlockLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        register(grassBlock, <span class="hljs-string">&quot;grass_block&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@SideOnly(Side.CLIENT)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRenders</span><span class="hljs-params">()</span><br>    &#123;<br>        registerRender(grassBlock);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">register</span><span class="hljs-params">(Block block, String name)</span><br>    &#123;<br>        GameRegistry.registerBlock(block.setRegistryName(name));<br>    &#125;<br><br>    <span class="hljs-meta">@SideOnly(Side.CLIENT)</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRender</span><span class="hljs-params">(Block block)</span><br>    &#123;<br>        <span class="hljs-type">ModelResourceLocation</span> <span class="hljs-variable">model</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelResourceLocation</span>(block.getRegistryName(), <span class="hljs-string">&quot;inventory&quot;</span>);<br>        ModelLoader.setCustomModelResourceLocation(Item.getItemFromBlock(block), <span class="hljs-number">0</span>, model);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>由于注册的是方块对应的物品的模型和材质，所以就如上面的代码描述的一样，和物品唯一不一样的地方就是，我们通过<code>Item</code>类的静态方法<code>getItemFromBlock</code>获取方块对应的物品，其他的和物品相同。</p><p>接下来的事情也十分顺理成章，只不过这里有一些微小的变动。</p><p>我们这次先新建一个文件夹：<code>src/main/resources/assets/fmltutor/models/block</code>，并在其中新建一个文件：<code>grass_block.json</code>：</p><p><strong><code>src/main/resources/assets/fmltutor/models/block/grass_block.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;parent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;block/cube_all&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;textures&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;all&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:blocks/grass_block&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>在<code>src/main/resources/assets/fmltutor/models/item</code>里新建文件：<code>grass_block.json</code>：</p><p><strong><code>src/main/resources/assets/fmltutor/models/item/grass_block.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;parent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:block/grass_block&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;display&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;thirdperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-45</span><span class="hljs-punctuation">,</span> <span class="hljs-number">170</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-2.75</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0.375</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.375</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.375</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>细心的读者可能发现，下面的文件中出现了一个名为<code>parent</code>的字段，表示的含义似乎是继承了上面的文件，本部分的稍后面我们会讲为何要这么做。</p><p>然后我们新建文件夹<code>src/main/resources/assets/fmltutor/textures/blocks</code>，在其中创建尺寸同样为16x16的图片文件<code>grass_block.png</code>（其实也仅仅是干草堆调了个色&#x3D;_&#x3D;||）：</p><p><strong><code>src/main/resources/assets/fmltutor/textures/blocks/grass_block.png:</code></strong></p><p><img src="/grass_block.png" alt="grass_block"></p><p>对<code>ItemRenderLoader</code>的修改：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/client/ItemRenderLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.client;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.item.ItemLoader;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ItemRenderLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemRenderLoader</span><span class="hljs-params">()</span><br>    &#123;<br>        ItemLoader.registerRenders();<br>        BlockLoader.registerRenders();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>现在在客户端，Forge就会在初始化Mod的时候，运行到<code>BlockLoader</code>类中的<code>registerRenders</code>方法中的代码，注册这个方块对应物品的渲染，而在服务端则不会运行。</p><p>现在运行游戏，并在其中运行命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">/give <span class="hljs-keyword">@a</span> <span class="hljs-attribute">fmltutor</span>:grass_block<br></code></pre></td></tr></table></figure><p>玩家的手上是不是多了一个新的方块呢～</p><h3 id="为这个方块添加模型和材质"><a href="#为这个方块添加模型和材质" class="headerlink" title="为这个方块添加模型和材质"></a>为这个方块添加模型和材质</h3><p>但是，当方块被放到地上的时候，我们会发现，方块并没有显示出应有的样子，而只是一个两种颜色交替的方块。这是因为刚刚我们仅仅注册了方块对应物品的模型和材质，而没有注册方块本身的模型和材质。</p><p>这里就多出来了一个问题，为什么Minecraft要分开注册方块和其对应物品的材质呢？</p><p>这是因为Minecraft往往一个方块有多种状态，如一个漏斗，就有漏斗的口向下、向北、向东、向南、向西五种状态，一个火焰甚至有三千多种状态，而这些状态，每个的模型都不一样。</p><p>当然，如何指定一个超过一个状态的方块、为一个方块指定多个物品、甚至不指定物品等，后面的部分会有讲到，这里我们不作探讨。</p><p>Minecraft会将方块的状态和模型之间的关系信息放在<code>assets.minecraft.blockstates</code>文件夹下，同样，Minecraft会自动寻找对应的存放方块状态的文件夹，比如这里就是<code>assets.fmltutor.blockstates</code>，也就是<code>src/main/resources/assets/fmltutor/blockstates</code>文件夹，如果没有特殊设置，再在这个文件夹下寻找文件名和<code>&lt;方块id&gt;.json</code>相同的文件。</p><p>我们新建这样一个文件夹，并在其中新建一个文件<code>grass_block.json</code>：</p><p><strong><code>src/main/resources/assets/fmltutor/blockstates/grass_block.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;variants&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;normal&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;model&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:grass_block&quot;</span> <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>这个文件告诉游戏，这个方块使用<code>assets.fmltutor.models.block</code>包下的一个名为<code>grass_block.json</code>的文件作为模型，这也是物品模型被拆分成两个文件的原因。</p><p>现在打开游戏，放在地上的方块，是不是成功地渲染了呢～</p><p>最后说一句，把所有物品相关的类使用Item开头，所有方块相关的类使用Block开头，等等，并把它们放到对应的包里，是一个好的习惯。</p><h2 id="1-5-创造模式物品栏"><a href="#1-5-创造模式物品栏" class="headerlink" title="1.5 创造模式物品栏"></a>1.5 创造模式物品栏</h2><h3 id="将你的物品和方块放入创造模式物品栏"><a href="#将你的物品和方块放入创造模式物品栏" class="headerlink" title="将你的物品和方块放入创造模式物品栏"></a>将你的物品和方块放入创造模式物品栏</h3><p>其实这很简单，只要在物品和方块初始化的时候加上一句就好了：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/block/BlockGrassBlock.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.block;<br><br><span class="hljs-keyword">import</span> net.minecraft.block.Block;<br><span class="hljs-keyword">import</span> net.minecraft.block.material.Material;<br><span class="hljs-keyword">import</span> net.minecraft.creativetab.CreativeTabs;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BlockGrassBlock</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Block</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">BlockGrassBlock</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(Material.ground);<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;grassBlock&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setHardness(<span class="hljs-number">0.5F</span>);<br>        <span class="hljs-built_in">this</span>.setStepSound(soundTypeGrass);<br>        <span class="hljs-built_in">this</span>.setCreativeTab(CreativeTabs.tabBlock);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>构造函数的最后一句：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/block/BlockGrassBlock.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-built_in">this</span>.setCreativeTab(CreativeTabs.tabBlock);<br></code></pre></td></tr></table></figure><p>把这个方块放到了名为“方块”的创造模式物品栏里。</p><h3 id="新建一个创造模式物品栏"><a href="#新建一个创造模式物品栏" class="headerlink" title="新建一个创造模式物品栏"></a>新建一个创造模式物品栏</h3><p>Minecraft的所有物品栏都是<code>CreativeTabs</code>类的子类，我们首先新建包<code>com.github.ustc_zzzz.fmltutor.creativetab</code>，并在其下新建类<code>CreativeTabsFMLTutor</code>，使其继承<code>CreativeTabs</code>类：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/creativetab/CreativeTabsFMLTutor.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.creativetab;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.item.ItemLoader;<br><br><span class="hljs-keyword">import</span> net.minecraft.creativetab.CreativeTabs;<br><span class="hljs-keyword">import</span> net.minecraft.item.Item;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CreativeTabsFMLTutor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">CreativeTabs</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CreativeTabsFMLTutor</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(<span class="hljs-string">&quot;fmltutor&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Item <span class="hljs-title function_">getTabIconItem</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> ItemLoader.goldenEgg;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>getTabIconItem</code>方法，返回的是创造模式物品栏上显示的物品。</p><p>新建包<code>com.github.ustc_zzzz.fmltutor.creativetab</code>并在其下新建类<code>CreativeTabsLoader</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/creativetab/CreativeTabsLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.creativetab;<br><br><span class="hljs-keyword">import</span> net.minecraft.creativetab.CreativeTabs;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CreativeTabsLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> CreativeTabs tabFMLTutor;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CreativeTabsLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        tabFMLTutor = <span class="hljs-keyword">new</span> <span class="hljs-title class_">CreativeTabsFMLTutor</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>并将物品注册进去：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemGoldenEgg.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.item;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.creativetab.CreativeTabsLoader;<br><br><span class="hljs-keyword">import</span> net.minecraft.item.Item;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ItemGoldenEgg</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Item</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemGoldenEgg</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>();<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;goldenEgg&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setCreativeTab(CreativeTabsLoader.tabFMLTutor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>最后在<code>CommonProxy</code>中的<code>preInit</code>阶段添加代码，记得创造模式物品栏的初始化一定要在物品和方块的初始化之前：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">CreativeTabsLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">BlockLoader</span>(event);<br>&#125;<br></code></pre></td></tr></table></figure><p>打开游戏，你是不是看到了物品被注册到了新的创造模式物品栏，方块被注册到了“方块”创造模式物品栏呢～</p><h3 id="个性化创造模式物品栏"><a href="#个性化创造模式物品栏" class="headerlink" title="个性化创造模式物品栏"></a>个性化创造模式物品栏</h3><p><code>CreativeTab</code>类提供了<code>hasSearchBar</code>方法，可以用于设置是否有搜索框，这里我们通过覆写这个方法设置为<code>true</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/creativetab/CreativeTabsFMLTutor.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">hasSearchBar</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们就可以在打开的创造模式物品栏上看到搜索框了。同时还有的是一个名为<code>getSearchbarWidth</code>的方法，用于设置搜索框的宽度。</p><p>现在我们再进一步，设置一下创造模式物品栏的背景。这里我们需要的是一个名为<code>setBackgroundImageName</code>的方法，这个方法传入的参数最终会和一个非常长的路径接合，这里我们先设置一下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">CreativeTabsFMLTutor</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-built_in">super</span>(<span class="hljs-string">&quot;fmltutor&quot;</span>);<br>    <span class="hljs-built_in">this</span>.setBackgroundImageName(<span class="hljs-string">&quot;fmltutor.png&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>然后我们需要新建文件夹<code>assets/minecraft/textures/gui/container/creative_inventory</code>（<strong>注意这里的名称是<code>minecraft</code>不是Mod id</strong>），然后建立一个以<code>tab_</code>开头的PNG文件，名字由刚刚设置的字符串决定，这里就是<code>tab_fmltutor.png</code>，注意，这里的图片尺寸大小需要是256x256，其他的尺寸大小会出问题，需要设置的背景放置在左上角，其他的位置设置成透明就可以了：</p><p><strong><code>src/main/resources/assets/minecraft/textures/gui/container/creative_inventory/tab_fmltutor.png</code></strong></p><p><img src="/tab_fmltutor.png" alt="tab_fmltutor"></p><p>现在我们就可以看到由于作者的艺术细胞极度缺乏而导致的金光闪闪熠熠生辉的创造模式物品栏了：</p><p><img src="/./tutorial-ustc-zzzz/tab_fmltutor_analysis.png" alt="tab_fmltutor_analysis"></p><h2 id="1-6-第一份合成表、烧炼规则和燃料"><a href="#1-6-第一份合成表、烧炼规则和燃料" class="headerlink" title="1.6 第一份合成表、烧炼规则和燃料"></a>1.6 第一份合成表、烧炼规则和燃料</h2><h3 id="第一份合成表"><a href="#第一份合成表" class="headerlink" title="第一份合成表"></a>第一份合成表</h3><p>新建包<code>com.github.ustc_zzzz.fmltutor.crafting</code>，并新建文件<code>CraftingLoader.java</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/crafting/CraftingLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.crafting;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.registry.GameRegistry;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CraftingLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CraftingLoader</span><span class="hljs-params">()</span><br>    &#123;<br>        registerRecipe();<br>        registerSmelting();<br>        registerFuel();<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRecipe</span><span class="hljs-params">()</span><br>    &#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerSmelting</span><span class="hljs-params">()</span><br>    &#123;<br><br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerFuel</span><span class="hljs-params">()</span><br>    &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>向<code>registerRecipe</code>方法添加内容：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/crafting/CraftingLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRecipe</span><span class="hljs-params">()</span><br>&#123;<br>    GameRegistry.addShapedRecipe(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(ItemLoader.goldenEgg), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]<br>    &#123;<br>            <span class="hljs-string">&quot;###&quot;</span>, <span class="hljs-string">&quot;#*#&quot;</span>, <span class="hljs-string">&quot;###&quot;</span>, <span class="hljs-string">&#x27;#&#x27;</span>, Items.gold_ingot, <span class="hljs-string">&#x27;*&#x27;</span>, Items.egg<br>    &#125;);<br>    GameRegistry.addShapedRecipe(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(BlockLoader.grassBlock), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]<br>    &#123;<br>            <span class="hljs-string">&quot;##&quot;</span>, <span class="hljs-string">&quot;##&quot;</span>, <span class="hljs-string">&#x27;#&#x27;</span>, Blocks.vine<br>    &#125;);<br>    GameRegistry.addShapelessRecipe(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(Blocks.vine, <span class="hljs-number">4</span>), BlockLoader.grassBlock);<br>&#125;<br></code></pre></td></tr></table></figure><p>前两句通过调用<code>addShapedRecipe</code>方法添加了有序合成表（如合成木棍等等）。</p><p>后一句通过调用<code>addShapelessRecipe</code>方法添加了无序合成表（如合成书等等）。</p><p>Minecraft原版所有的方块和物品都被存放在<code>Blocks</code>类和<code>Items</code>类里。</p><p>读者想必到这里已经明白，这三份合成表是什么意思了，不过需要注意的可能是表示字符的单引号和表示字符串的双引号。</p><h3 id="第一个烧炼规则"><a href="#第一个烧炼规则" class="headerlink" title="第一个烧炼规则"></a>第一个烧炼规则</h3><p>向<code>registerSmelting</code>方法添加内容：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/crafting/CraftingLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerSmelting</span><span class="hljs-params">()</span><br>&#123;<br>    GameRegistry.addSmelting(BlockLoader.grassBlock, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(Items.coal), <span class="hljs-number">0.5F</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>第一个参数是待烧炼的物品，第二个参数是烧炼后的物品，第三个参数是烧炼后玩家可以得到的经验。</p><h3 id="第一个燃料"><a href="#第一个燃料" class="headerlink" title="第一个燃料"></a>第一个燃料</h3><p>向<code>registerFuel</code>方法添加内容：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/crafting/CraftingLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerFuel</span><span class="hljs-params">()</span><br>&#123;<br>    GameRegistry.registerFuelHandler(<span class="hljs-keyword">new</span> <span class="hljs-title class_">IFuelHandler</span>()<br>    &#123;<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getBurnTime</span><span class="hljs-params">(ItemStack fuel)</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> Items.diamond != fuel.getItem() ? <span class="hljs-number">0</span> : <span class="hljs-number">12800</span>;<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>注册燃料需要实现<code>IFuelHandler</code>接口，这里使用了匿名类以节省代码量。</p><p>实现<code>IFuelHandler</code>接口需要实现<code>getBurnTime</code>方法，该方法判断物品的烧炼时间，如果返回0，则为不能判断物品的烧炼时间。</p><p>这里的烧炼时间为gametick，<strong>一秒为20个gametick</strong>，下面列出一些常见的烧炼时间数据：</p><ul><li>树苗　　100</li><li>木板　　200</li><li>煤炭　　1600</li><li>烈焰棒　2400</li><li>煤炭块　16000</li><li>岩浆桶　20000</li></ul><p>这段代码添加了钻石作为燃料，想必读者也很容易看出这段代码的含义。</p><p>最后，在CommonProxy中的<code>init</code>阶段注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">CraftingLoader</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>打开游戏，进行测试吧～</p><h2 id="1-7-本地化和国际化"><a href="#1-7-本地化和国际化" class="headerlink" title="1.7 本地化和国际化"></a>1.7 本地化和国际化</h2><h3 id="什么是本地化和国际化"><a href="#什么是本地化和国际化" class="headerlink" title="什么是本地化和国际化"></a>什么是本地化和国际化</h3><p>下面内容来自来自<a href="https://zh.wikipedia.org/wiki/%E5%9B%BD%E9%99%85%E5%8C%96%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%8C%96">wikipedia</a>：</p><blockquote><p>本地化则是指当移植软件时，加上与特定区域设置有关的信息和翻译文件的过程。国际化是指在设计软件，将软件与特定语言及地区脱钩的过程。当软件被移植到不同的语言及地区时，软件本身不用做内部工程上的改变或修正。</p></blockquote><p>本地化的国际化的英文分别是Localization和internationalization，由于字母过多，它们被简化成了L10n和i18n，其中i18n的简写由于其中间有足足十八个字母等原因而更加常用。</p><p>Minecraft本身就提供了本地化和国际化方案。在<code>assets/minecraft/lang</code>文件夹下，便有着各种语言的语言文件。</p><h3 id="为自己的Mod创建语言文件"><a href="#为自己的Mod创建语言文件" class="headerlink" title="为自己的Mod创建语言文件"></a>为自己的Mod创建语言文件</h3><p>大家在前面几部分中可能注意到了，拿在手里的不是金蛋，而是<code>item.goldenEgg.name</code>，放在地上的不是草块，而是<code>tile.grassBlock.name</code>，这正是因为没有添加语言文件。</p><p>英语是全球最广泛使用的语言，Minecraft的默认使用语言也是英语，所以很明显地，我们应该首先对英语提供支持。</p><p>新建文件夹<code>src/main/resources/assets/fmltutor/lang</code>，并在其中新建文件<code>en_US.lang</code>，注意等号的两边没有空格：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang:</code></strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">item.goldenEgg.name</span>=Golden Egg<br><br><span class="hljs-attr">tile.grassBlock.name</span>=Grass Block<br><br><span class="hljs-attr">itemGroup.fmltutor</span>=FML Tutor<br></code></pre></td></tr></table></figure><ul><li><code>item.goldenEgg.name</code>便是金蛋的名称，这个名称由该物品的<code>setUnlocalizedName</code>方法设置</li><li><code>tile.grassBlock.name</code>便是草块的名称，这个名称由该方块的<code>setUnlocalizedName</code>方法设置</li><li><code>itemGroup.tabFMLTutor</code>便是新创造模式物品栏的名称</li></ul><p>如果搞不清楚语言文件等号前面应该使用什么，可以先不写，在游戏中看一看，然后把不正常的部分写入语言文件。</p><p>当然，作为面向中国人制作的Mod，中文语言文件还是要有的。在同一个文件夹下新建文件<code>zh_CN.lang</code>：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang:</code></strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">item.goldenEgg.name</span>=金蛋<br><br><span class="hljs-attr">tile.grassBlock.name</span>=草块<br><br><span class="hljs-attr">itemGroup.fmltutor</span>=FML教程<br></code></pre></td></tr></table></figure><p>当然，你也可以添加其他语言文件，如繁体中文（zh_TW）等，语言文件的文件名通常按照“**<a href="https://zh.wikipedia.org/wiki/ISO_639-1">语言</a>_<a href="https://zh.wikipedia.org/wiki/ISO_3166-1">国家</a>**”代码标准。</p><p>最后说一句，语言文件<strong>一定要使用UTF-8编码</strong>。</p><h2 id="1-8-创建一份配置文件"><a href="#1-8-创建一份配置文件" class="headerlink" title="1.8 创建一份配置文件"></a>1.8 创建一份配置文件</h2><h3 id="为什么需要一份配置文件"><a href="#为什么需要一份配置文件" class="headerlink" title="为什么需要一份配置文件"></a>为什么需要一份配置文件</h3><p>很明显，一个Mod做得再好，也会有玩家不满意。这时候的一种常见的解决方案就是，开放Mod的部分参数选项，使其从配置文件中读取，这样玩家就可以通过修改Mod的配置文件来对Mod做出一些个性化设置了。</p><p>一个好的配置文件，不仅应该全面，更应该条理分明、层次紧密、简明易懂，让玩家不需要帮助甚至注释就可以理解并顺利地修改配置文件内容，而不会出现困惑的现象。</p><p>幸运的是，Forge本身就提供了配置文件的接口，Mod开发者们可以轻而易举地完成配置文件的创建、读取、以及写入等操作。</p><p>本部分通过对钻石作为燃料的烧炼秒数的配置，一步一步地完成配置文件的相关操作。</p><h3 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h3><p>首先，我们创建一个配置文件管理类，在包<code>com.github.ustc_zzzz.fmltutor.common</code>下创建文件<code>ConfigLoader.java</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/ConfigLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.common;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.common.config.Configuration;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><span class="hljs-keyword">import</span> org.apache.logging.log4j.Logger;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ConfigLoader</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Configuration config;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Logger logger;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> diamondBurnTime;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ConfigLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        logger = event.getModLog();<br>        config = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>(event.getSuggestedConfigurationFile());<br><br>        config.load();<br>        load();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">load</span><span class="hljs-params">()</span><br>    &#123;<br>        logger.info(<span class="hljs-string">&quot;Started loading config. &quot;</span>);<br>        String comment;<br>        <br>        comment = <span class="hljs-string">&quot;How many seconds can a diamond burn in a furnace. &quot;</span>;<br>        diamondBurnTime = config.get(Configuration.CATEGORY_GENERAL, <span class="hljs-string">&quot;diamondBurnTime&quot;</span>, <span class="hljs-number">640</span>, comment).getInt();<br><br>        config.save();<br>        logger.info(<span class="hljs-string">&quot;Finished loading config. &quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Logger <span class="hljs-title function_">logger</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> logger;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>首先，我们实例化了一个<code>Configuration</code>类：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/ConfigLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">config = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>(event.getSuggestedConfigurationFile());<br></code></pre></td></tr></table></figure><p>这里的<code>event.getSuggestedConfigurationFile()</code>，就是Forge推荐的配置文件位置。这个位置在游戏根目录的config文件夹下，名为“<code>&lt;Mod id&gt;.cfg</code>”，这里就是“<code>fmltutor.cfg</code>”。</p><p>然后我们读入配置：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/ConfigLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">config.load();<br></code></pre></td></tr></table></figure><p>接下来是加载配置：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/ConfigLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">comment = <span class="hljs-string">&quot;How many seconds can a diamond burn in a furnace. &quot;</span>;<br>diamondBurnTime = config.get(Configuration.CATEGORY_GENERAL, <span class="hljs-string">&quot;diamondBurnTime&quot;</span>, <span class="hljs-number">640</span>, comment).getInt();<br></code></pre></td></tr></table></figure><p>在一个正常的Forge Mod配置文件里，会有多个类别，Forge提供了一种类别“<code>general</code>”（<code>Configuration.CATEGORY_GENERAL</code>），<code>get</code>方法的第一个参数就是表示“<code>general</code>”类别。</p><p><code>get</code>方法的第三个参数，是该键的默认值（这里是640），当对应的键不存在时，就会返回该默认值。</p><p><code>get</code>方法的第四个参数，是该键的注释，用于描述该项配置的。</p><p>那么很明显，<code>get</code>方法的作用，就是获取<code>diamondBurnTime</code>键对应的值。</p><p><code>getInt</code>方法的作用，就是取整数（因为配置文件里的值一定是字符串）。</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/ConfigLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">config.save();<br></code></pre></td></tr></table></figure><p>最后我们保存配置。</p><p>这里要说一下，为什么要保存配置呢？这是因为当配置缺失（最常见的原因就是配置文件没有创建，这常常发生在你第一次使用Mod的时候）的时候，这一句会将默认的配置保存下来。</p><p>这里我们还顺路设置了一个<code>logger</code>，并在加载配置的时候使用到了它作日志记录。</p><p>在<code>CommonProxy</code>中注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConfigLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">CreativeTabsLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">BlockLoader</span>(event);<br>&#125;<br></code></pre></td></tr></table></figure><p>最后修改一下<code>CraftingLoader</code>文件：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/crafting/CraftingLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerFuel</span><span class="hljs-params">()</span><br>&#123;<br>    GameRegistry.registerFuelHandler(<span class="hljs-keyword">new</span> <span class="hljs-title class_">IFuelHandler</span>()<br>    &#123;<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getBurnTime</span><span class="hljs-params">(ItemStack fuel)</span><br>        &#123;<br>            <span class="hljs-keyword">return</span> Items.diamond != fuel.getItem() ? <span class="hljs-number">0</span> : Math.max(<span class="hljs-number">0</span>, ConfigLoader.diamondBurnTime) * <span class="hljs-number">20</span>;<br>        &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>运行游戏，我们会发现，在<code>config</code>文件夹下，生成了一个名为<code>fmltutor.cfg</code>的文件。下面是在作者的电脑下生成的这个文件的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cfg"># Configuration file<br><br>general &#123;<br>    # How many seconds can a diamond burn in a furnace. <br>    I:diamondBurnTime=640<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="2-初级部分"><a href="#2-初级部分" class="headerlink" title="2 初级部分"></a>2 初级部分</h1><h2 id="2-1-1-注册已有的事件"><a href="#2-1-1-注册已有的事件" class="headerlink" title="2.1.1 注册已有的事件"></a>2.1.1 注册已有的事件</h2><h3 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h3><p>Forge的事件系统一直在Forge中占有十分重要的地位，可以这么说，没有事件，就没有Mod。大家可以注意到，主类的<code>preInit</code>，<code>init</code>，<code>postInit</code>方法，全部都是事件驱动的。换句话说，理论上一个Mod的开发教程本身应该从事件讲起。</p><p>Forge的事件系统几乎涵盖了方方面面，从服务端到客户端，从世界生成到物品方块行为，从玩家行为到一般实体行为，等等。</p><p>Forge的事件系统分为两类，一类是FML生命周期事件，一类是Minecraft事件。</p><h3 id="FML生命周期事件"><a href="#FML生命周期事件" class="headerlink" title="FML生命周期事件"></a>FML生命周期事件</h3><p>FML生命周期事件，顾名思义，就是FML加载、关闭、和Mod加载等等相关的事件，这些希望监听对应事件的方法使用<code>@EventHandler</code>注解修饰，并且应在被<code>@Mod</code>注解修饰的主类下，Forge会寻找并注册仅含一个参数并且参数符合特定类型的方法。如下面三个FML生命周期事件是最常用的：</p><ul><li><code>FMLPreInitializationEvent</code></li><li><code>FMLInitializationEvent</code></li><li><code>FMLPostInitializationEvent</code></li></ul><p>这三个事件的使用方法已经讲过，此处不再赘述。</p><p>还有下面两个事件：</p><ul><li><code>FMLConstructionEvent</code>在Mod开始加载时触发。</li><li><code>FMLLoadCompleteEvent</code>在Mod加载完成时触发。</li></ul><p>除上面这些之外，还有下面的这些比较常用的用于服务端的FML生命周期事件：</p><ul><li><code>FMLServerAboutToStartEvent</code></li><li><code>FMLServerStartingEvent</code></li><li><code>FMLServerStartedEvent</code></li><li><code>FMLServerStoppingEvent</code></li><li><code>FMLServerStoppedEvent</code></li></ul><p>想必读者已经可以猜出来这五个事件的异同，并了解这些事件被触发的条件了。</p><h3 id="Minecraft事件"><a href="#Minecraft事件" class="headerlink" title="Minecraft事件"></a>Minecraft事件</h3><p>Forge本身提供了很多Minecraft事件，这些事件基本上可以完成对Minecraft大部分物品、方块、实体等特性的修改，并且这些事件的数量还在不断地上升。开发者只需要注册一个包含监听这些事件的方法的类，Forge就会挂钩上这些方法。这些方法使用<code>@SubscribeEvent</code>注解进行修饰，Forge寻找并挂钩这些方法的方式和上面的FML生命周期事件类似，只不过由于挂钩的方式不同，调用的时候效率要更高。</p><p>首先我们创造一个类。在包<code>com.github.ustc_zzzz.fmltutor.common</code>下新建一个文件<code>EventLoader.java</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.common;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.common.MinecraftForge;<br><span class="hljs-keyword">import</span> net.minecraftforge.event.entity.player.PlayerInteractEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.eventhandler.SubscribeEvent;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.gameevent.PlayerEvent;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EventLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">EventLoader</span><span class="hljs-params">()</span><br>    &#123;<br>        MinecraftForge.EVENT_BUS.register(<span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@SubscribeEvent</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPlayerItemPickup</span><span class="hljs-params">(PlayerEvent.ItemPickupEvent event)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (event.player.isServerWorld())<br>        &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">info</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;%s picks up: %s&quot;</span>, event.player.getName(), event.pickedUp.getEntityItem());<br>            ConfigLoader.logger().info(info);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@SubscribeEvent</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPlayerInteract</span><span class="hljs-params">(PlayerInteractEvent event)</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (!event.world.isRemote)<br>        &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">info</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;%s interacts with: %s&quot;</span>, event.entityPlayer.getName(), event.pos);<br>            ConfigLoader.logger().info(info);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里作者选取了两个事件进行举例，我们一步一步分析上面代码的含义：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPlayerItemPickup</span><span class="hljs-params">(PlayerEvent.ItemPickupEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (event.player.isServerWorld())<br>    &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">info</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;%s picks up: %s&quot;</span>, event.player.getName(), event.pickedUp.getEntityItem());<br>        ConfigLoader.logger().info(info);<br>    &#125;<br>&#125;<br>    <br><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPlayerInteract</span><span class="hljs-params">(PlayerInteractEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (!event.world.isRemote)<br>    &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">info</span> <span class="hljs-operator">=</span> String.format(<span class="hljs-string">&quot;%s interacts with: %s&quot;</span>, event.entityPlayer.getName(), event.pos);<br>        ConfigLoader.logger().info(info);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>@SubscribeEvent</code>注解的作用是Forge在你注册这个类的时候，会扫描所有具有该注解的方法，然后挂钩。 Forge会根据方法的参数类型来区分不同的事件。比如，这里的<code>onPlayerItemPickup</code>方法挂钩的就是物品即将被捡起的时候触发的事件<code>PlayerEvent.ItemPickupEvent</code>，而<code>onPlayerInteract</code>方法挂钩的就是玩家在和物品或方块互动的时候触发的事件<code>PlayerInteractEvent</code>。这里因为只是为了演示，我们这里只输出日志信息。</p><p><code>@SubscribeEvent</code>注解有两个参数，其中一个是<code>receiveCanceled</code>，与是否取消该事件相关，默认为<code>false</code>，这个参数不太常用，我们不去管它。还有一个参数是<code>priority</code>，比较常用，表示事件的优先级，可能的情况有五种：</p><ul><li><code>EventPriority.HIGHEST</code></li><li><code>EventPriority.HIGH</code></li><li><code>EventPriority.NORMAL</code></li><li><code>EventPriority.LOW</code></li><li><code>EventPriority.LOWEST</code></li></ul><p>默认的优先级是<code>EventPriority.NORMAL</code>，当然，如果想自定优先级，往往都会选择<code>EventPriority.HIGH</code>，和<code>EventPriority.HIGHEST</code>。如果没有特殊需求，这一项还是默认好了。</p><p>代码<code>event.player.isServerWorld()</code>用于检测调用该事件的游戏到底是客户端还是服务端，往往我们只希望服务端调用代码，这是因为服务端产生的变化，客户端往往都会同步，比如这里的向玩家输出游戏控制台信息。代码<code>!event.world.isRemote</code>也是同样的道理，在后面的内容中，这个用于判断服务端还是客户端的方法很常用。</p><p>最后就是事件的注册部分：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">EventLoader</span><span class="hljs-params">()</span><br>&#123;<br>    MinecraftForge.EVENT_BUS.register(<span class="hljs-built_in">this</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>我们使用<code>EventBus</code>的<code>register</code>方法，注册了所有我们想要注册的事件。</p><p>除此之外，Forge还提供了需要在<code>MinecraftForge.TERRAIN_GEN_BUS</code>上注册的地形生成事件，需要在<code>MinecraftForge.ORE_GEN_BUS</code>上注册的矿物生成事件等等。</p><p>最后在<code>CommonProxy</code>中注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">CraftingLoader</span>();<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">EventLoader</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>打开游戏试试吧～</p><h3 id="Event类解析"><a href="#Event类解析" class="headerlink" title="Event类解析"></a>Event类解析</h3><p>Forge提供的所有事件，都是<code>net.minecraftforge.fml.common.eventhandler.Event</code>类的子类。</p><p>Event类添加了下面几个公开方法：</p><ul><li><code>public boolean isCancelable()</code> <br> 返回该事件是否可以被取消。</li><li><code>public boolean isCanceled()</code> <br> 返回该事件是否已被取消。</li><li><code>public void setCanceled(boolean cancel)</code> <br> 设置该事件是否被取消。</li><li><code>public boolean hasResult()</code> <br> 返回该事件是否有结果，添加了<code>@HasResult</code>注解的事件默认为<code>true</code>，否则为<code>false</code>。</li><li><code>public Result getResult()</code> <br> 返回该事件的结果，有<code>Result.DENY</code>，<code>Result.DEFAULT</code>，<code>Result.ALLOW</code>三种，默认为<code>Result.DEFAULT</code>。</li><li><code>public void setResult(Result value)</code> <br> 为该事件设置一个结果。</li><li><code>public ListenerList getListenerList()</code> <br> 获取所有注册该事件的监听器。</li><li><code>public EventPriority getPhase()</code> <br> 获取该事件的优先级，上面已有说明。</li><li><code>public void setPhase(EventPriority value)</code> <br> 设置该事件的优先级，上面已有说明。</li></ul><h2 id="2-1-2-自定义新的事件"><a href="#2-1-2-自定义新的事件" class="headerlink" title="2.1.2 自定义新的事件"></a>2.1.2 自定义新的事件</h2><h3 id="自定义新的事件类"><a href="#自定义新的事件类" class="headerlink" title="自定义新的事件类"></a>自定义新的事件类</h3><p>我们在<code>EventLoader</code>类中新建一个我们想要的事件类。</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Cancelable</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PlayerRightClickGrassBlockEvent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">net</span>.minecraftforge.event.entity.player.PlayerEvent<br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> BlockPos pos;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> World world;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">PlayerRightClickGrassBlockEvent</span><span class="hljs-params">(EntityPlayer player, BlockPos pos, World world)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(player);<br>        <span class="hljs-built_in">this</span>.pos = pos;<br>        <span class="hljs-built_in">this</span>.world = world;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>很明显，这个类和玩家右键草块相关。该事件类继承了<code>PlayerEvent</code>，<code>@Cancelable</code>注解表明了该事件可取消。</p><h3 id="自定义事件的注册机制"><a href="#自定义事件的注册机制" class="headerlink" title="自定义事件的注册机制"></a>自定义事件的注册机制</h3><p>在上一部分，我们注意到<code>FMLCommonHandler.instance().bus()</code>和<code>MinecraftForge.EVENT_BUS</code>均为<code>EventBus</code>类型。该类型提供了名为<code>register</code>的方法使得事件可以被注册。</p><p>显然，我们自己也可以创建这样一个<code>EventBus</code>，并且使得所有自定义的事件在这里被注册。</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">EventBus</span> <span class="hljs-variable">EVENT_BUS</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">EventBus</span>();<br></code></pre></td></tr></table></figure><h3 id="使自定义事件会被触发到"><a href="#使自定义事件会被触发到" class="headerlink" title="使自定义事件会被触发到"></a>使自定义事件会被触发到</h3><p><code>EventBus</code>本身提供了一个名为<code>post</code>的方法，负责执行事件。大家如果经常翻源代码的话，会在Minecraft的许多类中找到这个方法的调用。这里我们希望在玩家点击草块时触发，我们也如法炮制。</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/block/BlockGrassBlock.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">onBlockActivated</span><span class="hljs-params">(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn,</span><br><span class="hljs-params">        EnumFacing side, <span class="hljs-type">float</span> hitX, <span class="hljs-type">float</span> hitY, <span class="hljs-type">float</span> hitZ)</span><br>&#123;<br>    EventLoader.PlayerRightClickGrassBlockEvent event;<br>    event = <span class="hljs-keyword">new</span> <span class="hljs-title class_">EventLoader</span>.PlayerRightClickGrassBlockEvent(playerIn, pos, worldIn);<br>    EventLoader.EVENT_BUS.post(event);<br>    <span class="hljs-keyword">if</span> (!event.isCanceled() &amp;&amp; !worldIn.isRemote)<br>    &#123;<br>        worldIn.setBlockToAir(pos);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>很明显，这段代码的意思是，如果事件被取消了，就阻止草块变成空气，否则草块就会变成空气。</p><h3 id="自定义事件的实现"><a href="#自定义事件的实现" class="headerlink" title="自定义事件的实现"></a>自定义事件的实现</h3><p>自定义事件的实现和Forge提供的完全一样，只不过我们要找准在哪里注册。</p><p>在<code>EventLoader</code>类中添加一个方法。</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPlayerClickGrassBlock</span><span class="hljs-params">(PlayerRightClickGrassBlockEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (!event.world.isRemote)<br>    &#123;<br>        <span class="hljs-type">BlockPos</span> <span class="hljs-variable">pos</span> <span class="hljs-operator">=</span> event.pos;<br>        <span class="hljs-type">Entity</span> <span class="hljs-variable">tnt</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">EntityTNTPrimed</span>(event.world, pos.getX() + <span class="hljs-number">0.5</span>, pos.getY() + <span class="hljs-number">0.5</span>, pos.getZ() + <span class="hljs-number">0.5</span>, <span class="hljs-literal">null</span>);<br>        event.world.spawnEntityInWorld(tnt);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>很明显，这里定义了当玩家两手空空时的行为。</p><p>然后我们注册这个事件。</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">EventLoader</span><span class="hljs-params">()</span><br>&#123;<br>    MinecraftForge.EVENT_BUS.register(<span class="hljs-built_in">this</span>);<br>    EventLoader.EVENT_BUS.register(<span class="hljs-built_in">this</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>打开游戏，放置一个草块，右键点击它，三、二、一。。。BOOM</p><h2 id="2-2-1-新的工具"><a href="#2-2-1-新的工具" class="headerlink" title="2.2.1 新的工具"></a>2.2.1 新的工具</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>本部分以制作一个红石镐为例，讲述如何做出一个新的工具或武器，如斧、镐、铲、以及锄和剑。</p><h3 id="物品和ToolMaterial"><a href="#物品和ToolMaterial" class="headerlink" title="物品和ToolMaterial"></a>物品和ToolMaterial</h3><p>在包<code>com.github.ustc_zzzz.fmltutor.item</code>下新建一个文件<code>ItemRedstonePickaxe.java</code>，并让<code>ItemRedstonePickaxe</code>类继承<code>ItemPickaxe</code>类：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemRedstonePickaxe.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.item;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.creativetab.CreativeTabsLoader;<br><br><span class="hljs-keyword">import</span> net.minecraft.item.Item;<br><span class="hljs-keyword">import</span> net.minecraft.item.ItemPickaxe;<br><span class="hljs-keyword">import</span> net.minecraftforge.common.util.EnumHelper;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ItemRedstonePickaxe</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ItemPickaxe</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Item.<span class="hljs-type">ToolMaterial</span> <span class="hljs-variable">REDSTONE</span> <span class="hljs-operator">=</span> EnumHelper.addToolMaterial(<span class="hljs-string">&quot;REDSTONE&quot;</span>, <span class="hljs-number">3</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16.0F</span>, <span class="hljs-number">0.0F</span>, <span class="hljs-number">10</span>);<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemRedstonePickaxe</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(REDSTONE);<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;redstonePickaxe&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setCreativeTab(CreativeTabsLoader.tabFMLTutor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们先来说说这一行：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemRedstonePickaxe.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Item.<span class="hljs-type">ToolMaterial</span> <span class="hljs-variable">REDSTONE</span> <span class="hljs-operator">=</span> EnumHelper.addToolMaterial(<span class="hljs-string">&quot;REDSTONE&quot;</span>, <span class="hljs-number">3</span>, <span class="hljs-number">16</span>, <span class="hljs-number">16.0F</span>, <span class="hljs-number">0.0F</span>, <span class="hljs-number">10</span>);<br></code></pre></td></tr></table></figure><p>这里添加了一个作为工具需要的枚举类，ToolMaterial的实例。顾名思义，ToolMaterial就是工具或武器使用的材料，Forge本身定义了五种材料：WOOD，STONE，IRON，EMERALD，GOLD。它们分别表示木头、石头、铁、钻石、金。</p><p>我们来看看ToolMaterial的构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-title function_">ToolMaterial</span><span class="hljs-params">(<span class="hljs-type">int</span> harvestLevel, <span class="hljs-type">int</span> maxUses, <span class="hljs-type">float</span> efficiency, <span class="hljs-type">float</span> damageVsEntity, <span class="hljs-type">int</span> enchantability)</span> &#123;...&#125;<br></code></pre></td></tr></table></figure><p>和五种材料的参数：</p><ul><li><code>WOOD(0, 59, 2.0F, 0.0F, 15),</code></li><li><code>STONE(1, 131, 4.0F, 1.0F, 5),</code></li><li><code>IRON(2, 250, 6.0F, 2.0F, 14),</code></li><li><code>EMERALD(3, 1561, 8.0F, 3.0F, 10),</code></li><li><code>GOLD(0, 32, 12.0F, 0.0F, 22);</code></li></ul><p>ToolMaterial的构造方法共有五个参数：</p><ul><li><code>harvestLevel</code>参数表示制作出的工具等级。这一点在镐中尤其明显，如木头为0，只能挖掘对应等级为0的方块才能掉落物品，如石头等，而钻石为3，就可以挖掘出对应等级为3的，其他镐挖不出物品的方块，如黑曜石。这里使用了最高等级3</li><li><code>maxUses</code>参数表示制作出的工具对应耐久。如钻石工具就是1561，耐久最高，而木工具为59，耐久最低。这里刻意降低了该数值，为16</li><li><code>efficiency</code>参数表示制作出的工具使用效率。使用效率和该参数的值成正比。这里刻意提高了该数值，为16.0F</li><li><code>damageVsEntity</code>参数表示攻击伤害力度。同样该力度和该参数的值成正相关。这里为0.0F，表示攻击力很低</li><li><code>enchantability</code>参数与附魔等级相关。Minecraft中关于附魔等级的系统十分复杂。但是有一点，就是该值越高，对应的附魔就越容易得到高等级。这也是为何金更容易得到高等级附魔，而石头得到的附魔就相当低。这里为10，和钻石相同</li></ul><p><code>EnumHelper</code>的作用就是为Minecraft的一些枚举类型注册新的实例，该方法的第一个参数为实例的名称，后面的参数就是该枚举类型构造方法需要的参数。比如这里就是向ToolMaterial枚举类型添加一个名为<code>REDSTONE</code>的实例，并提供相应的参数。</p><h3 id="物品模型和材质"><a href="#物品模型和材质" class="headerlink" title="物品模型和材质"></a>物品模型和材质</h3><p>该物品的模型：</p><p><strong><code>src/main/resources/assets/fmltutor/models/item/redstone_pickaxe.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;parent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;builtin/generated&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;textures&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;layer0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:items/redstone_pickaxe&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;display&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;thirdperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-35</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-3.5</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;firstperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-135</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>和对应的材质（然而大家可以明显地看出这只是钻石镐的调色&#x3D;_&#x3D;||）：</p><p><strong><code>src/main/resources/assets/fmltutor/textures/items/redstone_pickaxe.png:</code></strong></p><p><img src="/resources/redstone_pickaxe.png" alt="redstone_pickaxe"></p><h3 id="一些例行公事"><a href="#一些例行公事" class="headerlink" title="一些例行公事"></a>一些例行公事</h3><p>语言文件和在<code>GameRegistry</code>中注册（这里需要稍微注意一下的可能是<code>ToolMaterial</code>和物品的先后注册顺序）：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">item.redstonePickaxe.name=Redstone Pickaxe<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">item.redstonePickaxe.name=红石镐<br></code></pre></td></tr></table></figure><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Item</span> <span class="hljs-variable">goldenEgg</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemGoldenEgg</span>();<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">ItemPickaxe</span> <span class="hljs-variable">redstonePickaxe</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemRedstonePickaxe</span>();<br>    <br><span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    register(goldenEgg, <span class="hljs-string">&quot;golden_egg&quot;</span>);<br>    register(redstonePickaxe, <span class="hljs-string">&quot;redstone_pickaxe&quot;</span>);<br>&#125;<br>    <br><span class="hljs-meta">@SideOnly(Side.CLIENT)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRenders</span><span class="hljs-params">()</span><br>&#123;<br>    registerRender(goldenEgg);<br>    registerRender(redstonePickaxe);<br>&#125;<br></code></pre></td></tr></table></figure><p>当然最后，我们也可以加上合成表：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/crafting/CraftingLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">GameRegistry.addShapedRecipe(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(ItemLoader.redstonePickaxe), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]<br>&#123;<br>        <span class="hljs-string">&quot;###&quot;</span>, <span class="hljs-string">&quot; * &quot;</span>, <span class="hljs-string">&quot; * &quot;</span>, <span class="hljs-string">&#x27;#&#x27;</span>, Items.redstone, <span class="hljs-string">&#x27;*&#x27;</span>, Items.stick<br>&#125;);<br></code></pre></td></tr></table></figure><p>打开游戏试试吧～</p><p>当然，其他需要ToolMaterial的工具，如斧、铲、锄与剑，它们的制作，都是同样的道理。</p><h2 id="2-2-2-新的食物"><a href="#2-2-2-新的食物" class="headerlink" title="2.2.2 新的食物"></a>2.2.2 新的食物</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>本部分以制作一个红石苹果为例，讲述如何做出一个新的食物，并设置其食用后的效果。</p><h3 id="制作一个崭新的食物"><a href="#制作一个崭新的食物" class="headerlink" title="制作一个崭新的食物"></a>制作一个崭新的食物</h3><p>在包<code>com.github.ustc_zzzz.fmltutor.item</code>下新建一个文件<code>ItemRedstoneApple.java</code>，并让<code>ItemRedstoneApple</code>类继承<code>ItemFood</code>类：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemRedstoneApple.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.item;<br><br><span class="hljs-keyword">import</span> net.minecraft.item.ItemFood;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.creativetab.CreativeTabsLoader;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ItemRedstoneApple</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ItemFood</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemRedstoneApple</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(<span class="hljs-number">4</span>, <span class="hljs-number">0.6F</span>, <span class="hljs-literal">false</span>);<br>        <span class="hljs-built_in">this</span>.setAlwaysEdible();<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;redstoneApple&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setCreativeTab(CreativeTabsLoader.tabFMLTutor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>ItemFood</code>类的构造方法一共有三个参数：</p><ul><li>第一个参数<code>amount</code>表示该食物所能回复的饥饿值，这里被设定成和苹果相同，即<code>4</code>。</li><li>第二个参数<code>saturation</code>表示该食物所能添加的相对饱和度，其正比于饱和度和饥饿值的比值，这里设定为<code>0.6F</code>。</li><li>最后一个参数<code>isWolfFood</code>表示该食物能否被狼食用，这里简单地设置为<code>false</code>就可以了。</li></ul><p>饱和度的计算：<code>2 * amount * saturation</code>。如面包的<code>amount</code>为5，其<code>saturation</code>为0.6F，对应的饱和度为2 <em>5</em> 0.6 &#x3D; 6</p><p>为了方便读者，我们在这里列了一个常见食物对应的<code>amount</code>和<code>saturation</code>表。</p><table><thead><tr><th align="left">食物</th><th align="left">amount</th><th align="left">saturation</th></tr></thead><tbody><tr><td align="left">苹果</td><td align="left">4</td><td align="left">0.3F</td></tr><tr><td align="left">面包</td><td align="left">5</td><td align="left">0.6F</td></tr><tr><td align="left">生猪排</td><td align="left">3</td><td align="left">0.3F</td></tr><tr><td align="left">熟猪排</td><td align="left">8</td><td align="left">0.8F</td></tr><tr><td align="left">曲奇</td><td align="left">2</td><td align="left">0.1F</td></tr><tr><td align="left">西瓜片</td><td align="left">2</td><td align="left">0.3F</td></tr><tr><td align="left">生牛肉</td><td align="left">3</td><td align="left">0.3F</td></tr><tr><td align="left">牛排</td><td align="left">8</td><td align="left">0.8F</td></tr><tr><td align="left">生鸡肉</td><td align="left">2</td><td align="left">0.3F</td></tr><tr><td align="left">熟鸡肉</td><td align="left">6</td><td align="left">0.6F</td></tr><tr><td align="left">腐肉</td><td align="left">4</td><td align="left">0.1F</td></tr><tr><td align="left">蜘蛛眼</td><td align="left">2</td><td align="left">0.8F</td></tr><tr><td align="left">烤马铃薯</td><td align="left">5</td><td align="left">0.6F</td></tr><tr><td align="left">毒马铃薯</td><td align="left">2</td><td align="left">0.3F</td></tr><tr><td align="left">金萝卜</td><td align="left">6</td><td align="left">1.2F</td></tr><tr><td align="left">南瓜派</td><td align="left">8</td><td align="left">0.3F</td></tr></tbody></table><p>方法<code>setAlwaysEdible</code>表示该食物何时何地都可以被食用，即便玩家不需要回复饥饿度和饱和值。</p><p>下面就是一些例行公事了（模型、贴图、语言文件、以及注册）（贴图同为金苹果调色&#x3D;_&#x3D;||）：</p><p><strong><code>src/main/resources/assets/fmltutor/models/item/redstone_apple.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;parent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;builtin/generated&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;textures&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;layer0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:items/redstone_apple&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;display&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;thirdperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-35</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-3.5</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;firstperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-135</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/textures/items/redstone_apple.png:</code></strong></p><p><img src="/resources/redstone_apple.png" alt="redstone_apple"></p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">item.redstoneApple.name=Redstone Apple<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">item.redstoneApple.name=红石苹果<br></code></pre></td></tr></table></figure><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Item</span> <span class="hljs-variable">goldenEgg</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemGoldenEgg</span>();<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">ItemPickaxe</span> <span class="hljs-variable">redstonePickaxe</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemRedstonePickaxe</span>();<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">ItemFood</span> <span class="hljs-variable">redstoneApple</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemRedstoneApple</span>();<br>    <br><span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    register(goldenEgg, <span class="hljs-string">&quot;golden_egg&quot;</span>);<br>    register(redstonePickaxe, <span class="hljs-string">&quot;redstone_pickaxe&quot;</span>);<br>    register(redstoneApple, <span class="hljs-string">&quot;redstone_apple&quot;</span>);<br>&#125;<br>    <br><span class="hljs-meta">@SideOnly(Side.CLIENT)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRenders</span><span class="hljs-params">()</span><br>&#123;<br>    registerRender(goldenEgg);<br>    registerRender(redstonePickaxe);<br>    registerRender(redstoneApple);<br>&#125;<br></code></pre></td></tr></table></figure><p>当然我们也可以加上合成表：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/crafting/CraftingLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">GameRegistry.addShapedRecipe(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(ItemLoader.redstoneApple), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]<br>&#123;<br>        <span class="hljs-string">&quot;###&quot;</span>, <span class="hljs-string">&quot;#*#&quot;</span>, <span class="hljs-string">&quot;###&quot;</span>, <span class="hljs-string">&#x27;#&#x27;</span>, Items.redstone, <span class="hljs-string">&#x27;*&#x27;</span>, Items.apple<br>&#125;);<br></code></pre></td></tr></table></figure><p>打开游戏试试吧～</p><h3 id="为食物添加食用后的药水效果"><a href="#为食物添加食用后的药水效果" class="headerlink" title="为食物添加食用后的药水效果"></a>为食物添加食用后的药水效果</h3><p>实际上，<code>ItemFood</code>类本身就预置了药水效果的轮子，我们在构造函数中加上这么一句：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemRedstoneApple.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-built_in">this</span>.setPotionEffect(Potion.absorption.id, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1.0F</span>);<br></code></pre></td></tr></table></figure><p><code>setPotionEffect</code>方法共有四个参数：</p><ul><li>第一个参数表示对应药水效果的<code>potionId</code>，读者可以去<code>net.minecraft.potion.Potion</code>类中查看MC提供的二十四种药水效果，这里为伤害吸收。</li><li>第二个参数表示对应药水效果的持续时间，以秒计数，这里为十秒。</li><li>第三个参数表示对应药水效果的等级，很明显，0为一级，1为二级，2为三级，以此类推，这里为二级。</li><li>最后一个参数表示产生该药水效果的概率，这里为100%。</li></ul><p>到这里我们就完成了对于添加食用食物后的药水效果的设置，这对大部分的食物设定来说，是够用了的。事实上，MC游戏本身的大部分食物，它们食用后的药水效果（如食用腐肉后产生的饥饿效果，食用蜘蛛眼后产生的中毒效果）都是这么设定的。</p><h3 id="为食物添加食用后的更多效果"><a href="#为食物添加食用后的更多效果" class="headerlink" title="为食物添加食用后的更多效果"></a>为食物添加食用后的更多效果</h3><p>当然，总有例外，例如食用河豚或金苹果后产生的多种药水效果，就不能通过上面的方法完成。</p><p><code>ItemFood</code>类提供了一个方法<code>onFoodEaten</code>，我们可以把它覆写掉：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemRedstoneApple.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onFoodEaten</span><span class="hljs-params">(ItemStack stack, World worldIn, EntityPlayer player)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (!worldIn.isRemote)<br>    &#123;<br>        player.addPotionEffect(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PotionEffect</span>(Potion.saturation.id, <span class="hljs-number">200</span>, <span class="hljs-number">1</span>));<br>        player.addExperience(<span class="hljs-number">10</span>);<br>    &#125;<br>    <span class="hljs-built_in">super</span>.onFoodEaten(stack, worldIn, player);<br>&#125;<br></code></pre></td></tr></table></figure><p>这段代码的意思可能已经比较明显了：除了伤害吸收二，食用该食物还会给玩家带来十秒的饱和二效果，和十点经验。这里有一点不同的地方，就是<code>PotionEffect</code>的构造函数使用的时间是以gametick计数的。</p><p>打开游戏试试吧～</p><h2 id="2-2-3-新的盔甲"><a href="#2-2-3-新的盔甲" class="headerlink" title="2.2.3 新的盔甲"></a>2.2.3 新的盔甲</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><p>本部分以制作全套红石盔甲为例，讲述如何做出一个新的盔甲，并讲述如何制作盔甲的材质。</p><h3 id="ArmorMaterial"><a href="#ArmorMaterial" class="headerlink" title="ArmorMaterial"></a>ArmorMaterial</h3><p>和ToolMaterial类似，ArmorMaterial表示的就是盔甲的材质。</p><p>我们在包<code>com.github.ustc_zzzz.fmltutor.item</code>下新建一个文件<code>ItemRedstoneArmor.java</code>，并让<code>ItemRedstoneArmor</code>类继承<code>ItemArmor</code>类：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemRedstoneArmor.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.item;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.FMLTutor;<br><br><span class="hljs-keyword">import</span> net.minecraft.item.ItemArmor;<br><span class="hljs-keyword">import</span> net.minecraftforge.common.util.EnumHelper;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ItemRedstoneArmor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ItemArmor</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> ItemArmor.<span class="hljs-type">ArmorMaterial</span> <span class="hljs-variable">REDSTONE_ARMOR</span> <span class="hljs-operator">=</span> EnumHelper.addArmorMaterial(<span class="hljs-string">&quot;REDSTONE&quot;</span>,<br>            FMLTutor.MODID + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-string">&quot;redstone&quot;</span>, <span class="hljs-number">10</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[]<br>            &#123; <span class="hljs-number">2</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span> &#125;, <span class="hljs-number">10</span>);<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemRedstoneArmor</span><span class="hljs-params">(<span class="hljs-type">int</span> armorType)</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(REDSTONE_ARMOR, REDSTONE_ARMOR.ordinal(), armorType);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>和ToolMaterial一样，我们看看ArmorMaterial的构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-title function_">ArmorMaterial</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> maxDamage, <span class="hljs-type">int</span>[] reductionAmounts, <span class="hljs-type">int</span> enchantability)</span> &#123;...&#125;<br></code></pre></td></tr></table></figure><p>和原版提供的五种材料的参数：</p><ul><li><code>LEATHER(&quot;leather&quot;, 5, new int[]&#123;1, 3, 2, 1&#125;, 15),</code></li><li><code>CHAIN(&quot;chainmail&quot;, 15, new int[]&#123;2, 5, 4, 1&#125;, 12),</code></li><li><code>IRON(&quot;iron&quot;, 15, new int[]&#123;2, 6, 5, 2&#125;, 9),</code></li><li><code>GOLD(&quot;gold&quot;, 7, new int[]&#123;2, 5, 3, 1&#125;, 25),</code></li><li><code>DIAMOND(&quot;diamond&quot;, 33, new int[]&#123;3, 8, 6, 3&#125;, 10);</code></li></ul><p>ArmorMaterial的构造方法共有四个参数：</p><ul><li><code>name</code>参数与该ArmorMaterial的材质所在位置有关，这一部分的稍后面会讲到。这里是“<code>fmltutor:redstone</code>”。</li><li><code>maxDamage</code>参数和该ArmorMaterial对应的盔甲的耐久成正比。这里刻意降低了大小，为10。</li><li><code>reductionAmounts</code>参数的四个元素表示对应盔甲的头盔、胸甲、护腿、和靴子抵御伤害的能力，如皮甲分别为1，3，2，1，和为7，钻石甲分别为3，8，6，3，和为20，<strong>请不要让四个元素值的和超过这个值</strong>。这里为2，6，4，2，和为14。</li><li><code>enchantability</code>参数和ToolMaterial一样，和对应盔甲的附魔能力正相关，同样，金盔甲的附魔能力最高。这里为10。</li></ul><h3 id="制作一套崭新的盔甲"><a href="#制作一套崭新的盔甲" class="headerlink" title="制作一套崭新的盔甲"></a>制作一套崭新的盔甲</h3><p>在包<code>com.github.ustc_zzzz.fmltutor.item</code>下新建一个文件<code>ItemRedstoneArmor.java</code>，并让<code>ItemRedstoneArmor</code>类继承<code>ItemArmor</code>类：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemRedstoneArmor.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Helmet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ItemRedstoneArmor</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Helmet</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(<span class="hljs-number">0</span>);<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;redstoneHelmet&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setCreativeTab(CreativeTabsLoader.tabFMLTutor);<br>    &#125;<br>&#125;<br>    <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Chestplate</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ItemRedstoneArmor</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Chestplate</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(<span class="hljs-number">1</span>);<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;redstoneChestplate&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setCreativeTab(CreativeTabsLoader.tabFMLTutor);<br>    &#125;<br>&#125;<br>    <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Leggings</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ItemRedstoneArmor</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Leggings</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(<span class="hljs-number">2</span>);<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;redstoneLeggings&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setCreativeTab(CreativeTabsLoader.tabFMLTutor);<br>    &#125;<br>&#125;<br>    <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Boots</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ItemRedstoneArmor</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Boots</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(<span class="hljs-number">3</span>);<br>        <span class="hljs-built_in">this</span>.setUnlocalizedName(<span class="hljs-string">&quot;redstoneBoots&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setCreativeTab(CreativeTabsLoader.tabFMLTutor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>ItemArmor</code>的构造方法共有三个参数：</p><ul><li>第一个参数表示该盔甲的ArmorMaterial，自然就是我们刚刚创建的那个。</li><li>第二个参数的名称为<code>renderIndex</code>，目前在源代码中没有找到对其的引用，作者个人认为其在某个版本中被弃用了，随便填一个就可以了。但是为了保证不同的ArmorMaterial对应不同的值，作者这里使用了该ArmorMaterial的序数值。</li><li>第三个参数表示该盔甲的类型，0为头盔，1为胸甲，2为护腿，3为靴子。</li></ul><p>这里新建了四个子类，分别表示头盔、胸甲、护腿、和靴子。</p><h3 id="一些例行公事-1"><a href="#一些例行公事-1" class="headerlink" title="一些例行公事"></a>一些例行公事</h3><p>语言文件：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs lang">item.redstoneHelmet.name=Redstone Helmet<br>item.redstoneChestplate.name=Redstone Chestplate<br>item.redstoneLeggings.name=Redstone Leggings<br>item.redstoneBoots.name=Redstone Boots<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs lang">item.redstoneHelmet.name=红石头盔<br>item.redstoneChestplate.name=红石胸甲<br>item.redstoneLeggings.name=红石护腿<br>item.redstoneBoots.name=红石靴子<br></code></pre></td></tr></table></figure><p>模型及物品材质（大家没有猜错，物品材质仍然是调色）（读者：你TM就不能搞点原创么 (￣ε(#￣)☆╰╮o(￣皿￣&#x2F;&#x2F;&#x2F;) 整天调色 (￣ε(#￣)☆╰╮o(￣皿￣&#x2F;&#x2F;&#x2F;) ）：</p><p><strong><code>src/main/resources/assets/fmltutor/models/item/redstone_helmet.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;parent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;builtin/generated&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;textures&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;layer0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:items/redstone_helmet&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;display&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;thirdperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-35</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-3.5</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;firstperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-135</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/models/item/redstone_chestplate.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;parent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;builtin/generated&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;textures&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;layer0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:items/redstone_chestplate&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;display&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;thirdperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-35</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-3.5</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;firstperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-135</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/models/item/redstone_leggings.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;parent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;builtin/generated&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;textures&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;layer0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:items/redstone_leggings&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;display&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;thirdperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-35</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-3.5</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;firstperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-135</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/models/item/redstone_boots.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;parent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;builtin/generated&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;textures&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;layer0&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;fmltutor:items/redstone_boots&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;display&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;thirdperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">90</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-35</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.25</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-3.5</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.85</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;firstperson&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;rotation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">-135</span><span class="hljs-punctuation">,</span> <span class="hljs-number">25</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;translation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;scale&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.7</span> <span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/textures/items/redstone_helmet.png:</code></strong></p><p><img src="/resources/redstone_helmet.png" alt="redstone_helmet"></p><p><strong><code>src/main/resources/assets/fmltutor/textures/items/redstone_chestplate.png:</code></strong></p><p><img src="/resources/redstone_chestplate.png" alt="redstone_chestplate"></p><p><strong><code>src/main/resources/assets/fmltutor/textures/items/redstone_leggings.png:</code></strong></p><p><img src="/resources/redstone_leggings.png" alt="redstone_leggings"></p><p><strong><code>src/main/resources/assets/fmltutor/textures/items/redstone_boots.png:</code></strong></p><p><img src="/resources/redstone_boots.png" alt="redstone_boots"></p><p>注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/item/ItemLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">ItemArmor</span> <span class="hljs-variable">redstoneHelmet</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemRedstoneArmor</span>.Helmet();<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">ItemArmor</span> <span class="hljs-variable">redstoneChestplate</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemRedstoneArmor</span>.Chestplate();<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">ItemArmor</span> <span class="hljs-variable">redstoneLeggings</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemRedstoneArmor</span>.Leggings();<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">ItemArmor</span> <span class="hljs-variable">redstoneBoots</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemRedstoneArmor</span>.Boots();<br>    <br><span class="hljs-keyword">public</span> <span class="hljs-title function_">ItemLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    register(goldenEgg, <span class="hljs-string">&quot;golden_egg&quot;</span>);<br>    register(redstonePickaxe, <span class="hljs-string">&quot;redstone_pickaxe&quot;</span>);<br>    register(redstoneApple, <span class="hljs-string">&quot;redstone_apple&quot;</span>);<br>    <br>    register(redstoneHelmet, <span class="hljs-string">&quot;redstone_helmet&quot;</span>);<br>    register(redstoneChestplate, <span class="hljs-string">&quot;redstone_chestplate&quot;</span>);<br>    register(redstoneLeggings, <span class="hljs-string">&quot;redstone_leggings&quot;</span>);<br>    register(redstoneBoots, <span class="hljs-string">&quot;redstone_boots&quot;</span>);<br>&#125;<br>    <br><span class="hljs-meta">@SideOnly(Side.CLIENT)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">registerRenders</span><span class="hljs-params">()</span><br>&#123;<br>    registerRender(goldenEgg);<br>    registerRender(redstonePickaxe);<br>    registerRender(redstoneApple);<br>    <br>    registerRender(redstoneHelmet);<br>    registerRender(redstoneChestplate);<br>    registerRender(redstoneLeggings);<br>    registerRender(redstoneBoots);<br>&#125;<br></code></pre></td></tr></table></figure><p>加点合成表：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/crafting/CraftingLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java">GameRegistry.addShapedRecipe(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(ItemLoader.redstoneHelmet), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]<br>&#123;<br>        <span class="hljs-string">&quot;###&quot;</span>, <span class="hljs-string">&quot;# #&quot;</span>, <span class="hljs-string">&#x27;#&#x27;</span>, Items.redstone<br>&#125;);<br>GameRegistry.addShapedRecipe(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(ItemLoader.redstoneChestplate), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]<br>&#123;<br>        <span class="hljs-string">&quot;# #&quot;</span>, <span class="hljs-string">&quot;###&quot;</span>, <span class="hljs-string">&quot;###&quot;</span>, <span class="hljs-string">&#x27;#&#x27;</span>, Items.redstone<br>&#125;);<br>GameRegistry.addShapedRecipe(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(ItemLoader.redstoneLeggings), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]<br>&#123;<br>        <span class="hljs-string">&quot;###&quot;</span>, <span class="hljs-string">&quot;# #&quot;</span>, <span class="hljs-string">&quot;# #&quot;</span>, <span class="hljs-string">&#x27;#&#x27;</span>, Items.redstone<br>&#125;);<br>GameRegistry.addShapedRecipe(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemStack</span>(ItemLoader.redstoneBoots), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]<br>&#123;<br>        <span class="hljs-string">&quot;# #&quot;</span>, <span class="hljs-string">&quot;# #&quot;</span>, <span class="hljs-string">&#x27;#&#x27;</span>, Items.redstone<br>&#125;);<br></code></pre></td></tr></table></figure><p>现在打开游戏，应该就可以看到全套盔甲了。</p><h3 id="盔甲的材质"><a href="#盔甲的材质" class="headerlink" title="盔甲的材质"></a>盔甲的材质</h3><p>读者可能注意到了，现在的盔甲，虽然看进来很不错，但是穿上去后就很容易发现，盔甲的外观，只是单调的两种颜色交替。这就是因为虽然我们指定了盔甲对应物品的材质，我们还没有指定盔甲本身的材质。</p><p>盔甲的材质图是两个大小为64x32的图片。还记得刚刚说的ArmorMaterial的构造方法的<code>name</code>参数吗？那个就决定了这两个图片的位置。</p><p>例如，钻石的<code>name</code>参数为<code>diamond</code>，其两张图片的位置就是<code>textures/models/armor/diamond_layer_1.png</code>和<code>textures/models/armor/diamond_layer_2.png</code>。</p><p>这里我们的ArmorMaterial的<code>name</code>参数为<code>fmltutor:redstone</code>，其两张图片的位置就是<code>fmltutor:textures/models/armor/redstone_layer_1.png</code>和<code>fmltutor:textures/models/armor/redstone_layer_2.png</code>了。我们在那里新建文件夹，把我们想要的两张图放进去就可以了。</p><p>现在打开原版的材质图，我们可以注意到一团乱糟糟的外观碎片被放到了一起。实际上，这些碎片的摆放位置都是有规律的：</p><p><img src="/resources/armor_texture_analysis.png" alt="armor_texture_analysis"></p><p>（材质分区图，其中F表示前面，B表示后面，L表示左面。R表示右面，U表示顶面，D表示底面，紫色背景表示尺寸，每格大小为7x7，边框尺寸为1）</p><p>我们注意到，这一张材质图被分成了五个大部分，每一个部分都有不同的尺寸。它们分别为头（Head，8x8x8），头饰（Headwear，8x8x8），下肢（RightLeg&#x2F;LeftLeg，4x12x4），身体（Body，8x12x4），和上肢（RightArm&#x2F;LeftArm，4x12x4）。每一个部分分成了六个小部分，表示六个面。</p><p>那。。。为什么是两张图呢？</p><p>这是因为当游戏渲染不同的盔甲的时候，使用的材质图不一样。当游戏渲染护腿时使用第二张图，这里就是<code>redstone_layer_2.png</code>，渲染其他类型的盔甲时使用第一张图，这里为<code>redstone_layer_1.png</code>。</p><p>游戏会根据玩家已经穿戴的盔甲，决定哪一部分被渲染：</p><ul><li>当玩家穿戴上头盔，游戏渲染第一张图的Head和Headwear部分。</li><li>当玩家穿戴上胸甲，游戏渲染第一张图的Body和RightArm&#x2F;LeftArm部分。</li><li>当玩家穿戴上护腿，游戏渲染第二张图的Body和RightLeg&#x2F;LeftLeg部分。</li><li>当玩家穿戴上靴子，游戏渲染第一张图的RightLeg&#x2F;LeftLeg部分。</li></ul><p>这里准备了一张已经划分好不同部分的，大小为64x32的图，以方便读者设计盔甲。读者可以下载然后修改：</p><p><img src="/resources/armor_texture.png" alt="armor_texture"></p><p>我们这里使用这样的两张图（没错。。。调色。。。）：</p><p><strong><code>src/main/resources/assets/fmltutor/textures/models/armor/redstone_layer_1.png:</code></strong></p><p><img src="/resources/redstone_layer_1.png" alt="redstone_layer_1"></p><p><strong><code>src/main/resources/assets/fmltutor/textures/models/armor/redstone_layer_2.png:</code></strong></p><p><img src="/resources/redstone_layer_2.png" alt="redstone_layer_2"></p><p>打开游戏试试吧～</p><h2 id="2-3-1-新的伤害类型"><a href="#2-3-1-新的伤害类型" class="headerlink" title="2.3.1 新的伤害类型"></a>2.3.1 新的伤害类型</h2><h3 id="DamageSource"><a href="#DamageSource" class="headerlink" title="DamageSource"></a>DamageSource</h3><p>原版提供了一个<code>DamageSource</code>类，并且预置了一些常用的<code>DamageSource</code>：</p><ul><li><code>public static DamageSource inFire;</code> <br> 当站在火中时产生</li><li><code>public static DamageSource lightningBolt;</code> <br> 当遭雷劈时产生</li><li><code>public static DamageSource onFire;</code> <br> 当着火时产生</li><li><code>public static DamageSource lava;</code> <br> 当在岩浆中产生</li><li><code>public static DamageSource inWall;</code> <br> 当被方块窒息时产生</li><li><code>public static DamageSource drown;</code> <br> 当被水窒息时产生</li><li><code>public static DamageSource starve;</code> <br> 当饥饿值为零时产生</li><li><code>public static DamageSource cactus;</code> <br> 当被仙人掌刺伤时产生</li><li><code>public static DamageSource fall;</code> <br> 当受到跌落伤害时产生</li><li><code>public static DamageSource outOfWorld;</code> <br> 当跌落出这个世界时产生</li><li><code>public static DamageSource generic;</code> <br> 当死亡原因未知时产生</li><li><code>public static DamageSource magic;</code> <br> 当受到有伤害效果药水伤害时产生</li><li><code>public static DamageSource wither;</code> <br> 当被凋灵效果伤害时产生</li><li><code>public static DamageSource anvil;</code> <br> 当头顶铁砧时产生</li><li><code>public static DamageSource fallingBlock;</code> <br> 当头顶掉落的方块时产生</li></ul><p>当希望对实体产生对应伤害时，就可以通过调用实体的<code>attackEntityFrom</code>方法，比如下面的例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">player.attackEntityFrom(DamageSource.lightningBolt, <span class="hljs-number">8.0F</span>);<br></code></pre></td></tr></table></figure><p>意思就是对装*过度（误）的玩家产生八滴血的雷劈伤害。</p><h3 id="创造一个新的DamageSource"><a href="#创造一个新的DamageSource" class="headerlink" title="创造一个新的DamageSource"></a>创造一个新的DamageSource</h3><p>我们注意到，<code>DamageSource</code>类只有一个构造方法参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">DamageSource</span><span class="hljs-params">(String damageTypeIn)</span><br></code></pre></td></tr></table></figure><p>这个参数就是<code>DamageSource</code>的类型，决定着玩家死亡后会输出什么样的信息。</p><p>我们打开Minecraft原版的zh_CN.lang文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs lang">...<br>death.attack.indirectMagic.item=%1$s 被 %2$s 用 %3$s 杀死了<br>death.attack.lava=%1$s 试图在岩浆里游泳<br>death.attack.lava.player=%1$s 在逃离 %2$s 时试图在岩浆里游泳<br>death.attack.lightningBolt=%1$s 被闪电击中<br>death.attack.magic=%1$s 被魔法杀死了<br>death.attack.mob=%1$s 被 %2$s 杀死了<br>death.attack.onFire=%1$s 被烧死了<br>death.attack.onFire.player=%1$s 在试图与 %2$s 战斗时被烤的酥脆<br>death.attack.outOfWorld=%1$s 掉出了这个世界<br>death.attack.player=%1$s 被 %2$s 杀死了<br>death.attack.player.item=%1$s 被 %2$s 用 %3$s 杀死了<br>death.attack.starve=%1$s 饿死了<br>death.attack.thorns=%1$s 在试图伤害 %2$s 时被杀<br>death.attack.thrown=%1$s 被 %2$s 给砸死了<br>death.attack.thrown.item=%1$s 被 %2$s 用 %3$s 给砸死了<br>death.attack.wither=%1$s 凋零了<br>...<br></code></pre></td></tr></table></figure><p>换言之，玩家死亡收到的信息，就是<code>death.attack.&lt;damageTypeIn&gt;</code>，或者<code>death.attack.&lt;damageTypeIn&gt;.item</code>。</p><p>我们新建这样一个事件：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onEntityInteract</span><span class="hljs-params">(EntityInteractEvent event)</span><br>&#123;<br>    <span class="hljs-type">EntityPlayer</span> <span class="hljs-variable">player</span> <span class="hljs-operator">=</span> event.entityPlayer;<br>    <span class="hljs-keyword">if</span> (player.isServerWorld() &amp;&amp; event.target <span class="hljs-keyword">instanceof</span> EntityPig)<br>    &#123;<br>        <span class="hljs-type">EntityPig</span> <span class="hljs-variable">pig</span> <span class="hljs-operator">=</span> (EntityPig) event.target;<br>        <span class="hljs-type">ItemStack</span> <span class="hljs-variable">stack</span> <span class="hljs-operator">=</span> player.getCurrentEquippedItem();<br>        <span class="hljs-keyword">if</span> (stack != <span class="hljs-literal">null</span> &amp;&amp; (stack.getItem() == Items.wheat || stack.getItem() == Items.wheat_seeds))<br>        &#123;<br>            player.attackEntityFrom((<span class="hljs-keyword">new</span> <span class="hljs-title class_">DamageSource</span>(<span class="hljs-string">&quot;byPig&quot;</span>)).setDifficultyScaled().setExplosion(), <span class="hljs-number">8.0F</span>);<br>            player.worldObj.createExplosion(pig, pig.posX, pig.posY, pig.posZ, <span class="hljs-number">2.0F</span>, <span class="hljs-literal">false</span>);<br>            pig.setDead();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>并在语言文件中加上：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">death.attack.byPig=%s was dead because of a pig!<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">death.attack.byPig=%s被猪弄死了！<br></code></pre></td></tr></table></figure><p>读者应该能够看明白，这段代码的作用就是当玩家向猪试图喂食小麦或者小麦种子的时候，因为喂错饲料而发怒（误）的那头猪会Boom，并给玩家一定的伤害。</p><h3 id="DamageSource的属性"><a href="#DamageSource的属性" class="headerlink" title="DamageSource的属性"></a>DamageSource的属性</h3><p>刚刚读者可能已经注意到了，我们为这个<code>DamegeSource</code>赋予了两个属性：</p><ul><li><code>setDefficultyScaled</code>方法设置的属性表示受到的伤害随着难度的变化而变化。</li><li><code>setExplosion</code>方法设置的属性表示该伤害由爆炸造成，爆炸保护附魔会起到作用。</li></ul><p>除此之外，还可以设置<code>DamageSource</code>的其他属性：</p><ul><li><code>setDamageBypassesArmor</code>设置伤害不会因为盔甲的保护而折减。</li><li><code>setDamageAllowedInCreativeMode</code>设置创造模式同样会受到伤害。</li><li><code>setDamageIsAbsolute</code>设置伤害是绝对的，不会受到附魔、药水效果等影响。</li><li><code>setFireDamage</code>设置伤害由火焰造成，火焰保护附魔会起到作用。</li><li><code>setMagicDamage</code>设置伤害是由药水造成的。</li><li><code>setProjectile</code>设置伤害由弹射物造成，弹射物保护附魔会起到作用。</li></ul><h2 id="2-3-2-新的附魔属性"><a href="#2-3-2-新的附魔属性" class="headerlink" title="2.3.2 新的附魔属性"></a>2.3.2 新的附魔属性</h2><h3 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h3><p>作者在玩MC这款游戏时一直在想：要是挖铁矿出铁，挖金矿出金，那将是一件多么美妙的事。本部分将带领大家，一步一步地制作一个被用于工具的新的附魔：火焰灼烧。</p><h3 id="Enchantment类"><a href="#Enchantment类" class="headerlink" title="Enchantment类"></a>Enchantment类</h3><p>和附魔相关的类就是<code>Enchantment</code>类，打开<code>Enchantment</code>类，我们可以看到多个已经预设过的附魔种类。</p><p>我们先看看<code>Enchantment</code>类的构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">protected</span> <span class="hljs-title function_">Enchantment</span><span class="hljs-params">(<span class="hljs-type">int</span> enchID, ResourceLocation enchName, <span class="hljs-type">int</span> enchWeight, EnumEnchantmentType enchType)</span><br></code></pre></td></tr></table></figure><p>我们解释一下这个构造方法的四个参数：</p><ul><li><code>enchID</code>指的就是这个附魔的ID，我们看到原版已经定义了很多ID，当新建的ID重复时，游戏会报错。</li><li><code>enchName</code>指的就是这个附魔的名称，使用<code>ResourceLocation</code>的方式标记，比如时运就是<code>&quot;minecraft:fortune&quot;</code>，精准采集就是<code>&quot;minecraft:silk_touch&quot;</code>，这个名称和方块、物品的ID是类似的。</li><li><code>enchWeight</code>指的就是这个附魔的权重，和修复附魔需要的经验等级成负相关，和通过附魔台得到该种附魔的概率成正相关。</li><li><code>enchType</code>表示这种附魔是什么类型的，有武器、工具、弓等多种。</li></ul><p>我们注意到，<code>enchID</code>如果重复，游戏会报错，所以我们将这个ID写进配置，使得玩家可以修改它，以免和原版或者某些Mod重复。</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/ConfigLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> diamondBurnTime;<br>    <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> enchantmentFireBurn;<br>    <br><span class="hljs-keyword">public</span> <span class="hljs-title function_">ConfigLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    logger = event.getModLog();<br>    config = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Configuration</span>(event.getSuggestedConfigurationFile());<br>    <br>    config.load();<br>    load();<br>&#125;<br>    <br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">load</span><span class="hljs-params">()</span><br>&#123;<br>    logger.info(<span class="hljs-string">&quot;Started loading config. &quot;</span>);<br>    String comment;<br>    <br>    comment = <span class="hljs-string">&quot;How many seconds can a diamond burn in a furnace. &quot;</span>;<br>    diamondBurnTime = config.get(Configuration.CATEGORY_GENERAL, <span class="hljs-string">&quot;diamondBurnTime&quot;</span>, <span class="hljs-number">640</span>, comment).getInt();<br>    <br>    comment = <span class="hljs-string">&quot;Fire burn enchantment id. &quot;</span>;<br>    enchantmentFireBurn = config.get(Configuration.CATEGORY_GENERAL, <span class="hljs-string">&quot;enchantmentFireBurn&quot;</span>, <span class="hljs-number">36</span>, comment).getInt();<br>    <br>    config.save();<br>    logger.info(<span class="hljs-string">&quot;Finished loading config. &quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>然后我们新建包<code>com.github.ustc_zzzz.fmltutor.enchantment</code>，并在其中新建一个文件<code>EnchantmentFireBurn.java</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/enchantment/EnchantmentFireBurn.java</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.enchantment;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.FMLTutor;<br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.common.ConfigLoader;<br><br><span class="hljs-keyword">import</span> net.minecraft.enchantment.Enchantment;<br><span class="hljs-keyword">import</span> net.minecraft.enchantment.EnumEnchantmentType;<br><span class="hljs-keyword">import</span> net.minecraft.init.Items;<br><span class="hljs-keyword">import</span> net.minecraft.item.ItemStack;<br><span class="hljs-keyword">import</span> net.minecraft.util.ResourceLocation;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EnchantmentFireBurn</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Enchantment</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">EnchantmentFireBurn</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(ConfigLoader.enchantmentFireBurn, <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResourceLocation</span>(FMLTutor.MODID + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-string">&quot;fire_burn&quot;</span>), <span class="hljs-number">1</span>,<br>                EnumEnchantmentType.DIGGER);<br>        <span class="hljs-built_in">this</span>.setName(<span class="hljs-string">&quot;fireBurn&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getMinEnchantability</span><span class="hljs-params">(<span class="hljs-type">int</span> enchantmentLevel)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">15</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getMaxEnchantability</span><span class="hljs-params">(<span class="hljs-type">int</span> enchantmentLevel)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>.getMinEnchantability(enchantmentLevel) + <span class="hljs-number">50</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getMaxLevel</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">canApplyTogether</span><span class="hljs-params">(Enchantment ench)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>.canApplyTogether(ench) &amp;&amp; ench.effectId != silkTouch.effectId &amp;&amp; ench.effectId != fortune.effectId;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">canApply</span><span class="hljs-params">(ItemStack stack)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> stack.getItem() == Items.shears ? <span class="hljs-literal">true</span> : <span class="hljs-built_in">super</span>.canApply(stack);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>setName</code>方法的作用和方块、物品等的<code>setUnlocalizedName</code>方法类似，我们修改一下语言文件：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">enchantment.fireBurn=Fire Burning<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">enchantment.fireBurn=火焰灼烧<br></code></pre></td></tr></table></figure><p><code>getMinEnchantability</code>和<code>getMaxEnchantability</code>方法的作用就是获取可以获取到此附魔的最低等级和最高等级。这里被设置成了和精准采集相同。</p><p><code>getMaxLevel</code>方法指的就是这个附魔的最大等级了。自然，这个附魔只应该有一个等级。</p><p><code>canApplyTogether</code>方法表示的是这个附魔可否与其他附魔共存。这里设定为不能和精准采集和时运共存。</p><p><code>canApply</code>方法表示的是这个附魔可以作用的物品。既然是一个作用于工具的附魔，自然作用对象是所有工具和剪刀。</p><p>然后我们在<code>com.github.ustc_zzzz.fmltutor.enchantment</code>包下新建<code>EnchantmentLoader.java</code>文件，完成对这个附魔属性的注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/enchantment/EnchantmentLoader.java</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.enchantment;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.common.ConfigLoader;<br><br><span class="hljs-keyword">import</span> net.minecraft.enchantment.Enchantment;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EnchantmentLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Enchantment fireBurn;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">EnchantmentLoader</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">try</span><br>        &#123;<br>            fireBurn = <span class="hljs-keyword">new</span> <span class="hljs-title class_">EnchantmentFireBurn</span>();<br>            Enchantment.addToBookList(fireBurn);<br>        &#125;<br>        <span class="hljs-keyword">catch</span> (Exception e)<br>        &#123;<br>            ConfigLoader.logger().error(<br>                    <span class="hljs-string">&quot;Duplicate or illegal enchantment id: &#123;&#125;, the registry of class &#x27;&#123;&#125;&#x27; will be skipped. &quot;</span>,<br>                    ConfigLoader.enchantmentFireBurn, EnchantmentFireBurn.class.getName());<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里对该种附魔进行注册，如果ID重复，则输出错误信息。</p><p><code>addToBookList</code>方法使得该附魔被注册，使其在附魔台上可以被注册到，在创造模式物品栏上也可以找到对应的附魔书。</p><p>下面是一张拥有此种附魔的钻石镐示例：</p><p><img src="/resources/fire_burn.png" alt="fire_burn"></p><h3 id="完善你的附魔"><a href="#完善你的附魔" class="headerlink" title="完善你的附魔"></a>完善你的附魔</h3><p>为了使我们的附魔可以产生作用，我们需要在特定的地方监听事件，以使这个附魔产生作用：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onBlockHarvestDrops</span><span class="hljs-params">(BlockEvent.HarvestDropsEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (!event.world.isRemote &amp;&amp; event.harvester != <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-type">ItemStack</span> <span class="hljs-variable">itemStack</span> <span class="hljs-operator">=</span> event.harvester.getHeldItem();<br>        <span class="hljs-keyword">if</span> (EnchantmentHelper.getEnchantmentLevel(EnchantmentLoader.fireBurn.effectId, itemStack) &gt; <span class="hljs-number">0</span><br>                &amp;&amp; itemStack.getItem() != Items.shears)<br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; event.drops.size(); ++i)<br>            &#123;<br>                <span class="hljs-type">ItemStack</span> <span class="hljs-variable">stack</span> <span class="hljs-operator">=</span> event.drops.get(i);<br>                <span class="hljs-type">ItemStack</span> <span class="hljs-variable">newStack</span> <span class="hljs-operator">=</span> FurnaceRecipes.instance().getSmeltingResult(stack);<br>                <span class="hljs-keyword">if</span> (newStack != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    newStack = newStack.copy();<br>                    newStack.stackSize = stack.stackSize;<br>                    event.drops.set(i, newStack);<br>                &#125;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (stack != <span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-type">Block</span> <span class="hljs-variable">block</span> <span class="hljs-operator">=</span> Block.getBlockFromItem(stack.getItem());<br>                    <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> (block == <span class="hljs-literal">null</span>);<br>                    <span class="hljs-keyword">if</span> (!b &amp;&amp; (block.isFlammable(event.world, event.pos, EnumFacing.DOWN)<br>                            || block.isFlammable(event.world, event.pos, EnumFacing.EAST)<br>                            || block.isFlammable(event.world, event.pos, EnumFacing.NORTH)<br>                            || block.isFlammable(event.world, event.pos, EnumFacing.SOUTH)<br>                            || block.isFlammable(event.world, event.pos, EnumFacing.UP)<br>                            || block.isFlammable(event.world, event.pos, EnumFacing.WEST)))<br>                    &#123;<br>                        event.drops.remove(i);<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们监听了方块被挖掘后即将掉落物品的事件，在玩家手持存在“火焰灼烧”附魔的工具时，将其换成被灼烧过的物品掉落。</p><p>最后在<code>CommonProxy</code>中注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">CraftingLoader</span>();<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">EnchantmentLoader</span>();<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">EventLoader</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>打开游戏试试吧～</p><h2 id="2-3-3-新的药水效果"><a href="#2-3-3-新的药水效果" class="headerlink" title="2.3.3 新的药水效果"></a>2.3.3 新的药水效果</h2><h3 id="概述-4"><a href="#概述-4" class="headerlink" title="概述"></a>概述</h3><p>很多MOD都添加了玩家的附属效果，使用药水效果的方式展示玩家的效果有着清晰直观、方便控制的特点，本部分将以一个拥有摔落保护的药水效果为例，一步一步地带领大家实现一个崭新的药水效果。</p><h3 id="一个崭新的药水效果"><a href="#一个崭新的药水效果" class="headerlink" title="一个崭新的药水效果"></a>一个崭新的药水效果</h3><p>新建包<code>com.github.ustc_zzzz.fmltutor.potion</code>，在其中新建一个文件<code>PotionLoader.java</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/potion/PotionLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.potion;<br><br><span class="hljs-keyword">import</span> net.minecraft.potion.Potion;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLPreInitializationEvent;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PotionLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Potion potionFallProtection;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">PotionLoader</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>    &#123;<br>        potionFallProtection = <span class="hljs-keyword">new</span> <span class="hljs-title class_">PotionFallProtection</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在包<code>com.github.ustc_zzzz.fmltutor.potion</code>下新建文件<code>PotionFallProtection.java</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/potion/PotionFallProtection.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.potion;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.FMLTutor;<br><br><span class="hljs-keyword">import</span> net.minecraft.potion.Potion;<br><span class="hljs-keyword">import</span> net.minecraft.util.ResourceLocation;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PotionFallProtection</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Potion</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">ResourceLocation</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResourceLocation</span>(FMLTutor.MODID + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-string">&quot;textures/gui/potion.png&quot;</span>);<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">PotionFallProtection</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ResourceLocation</span>(FMLTutor.MODID + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-string">&quot;fall_protection&quot;</span>), <span class="hljs-literal">false</span>, <span class="hljs-number">0x7F0000</span>);<br>        <span class="hljs-built_in">this</span>.setPotionName(<span class="hljs-string">&quot;potion.fallProtection&quot;</span>);<br>        <span class="hljs-built_in">this</span>.setIconIndex(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们讲一下<code>Potion</code>构造方法的三个参数：</p><ul><li>第一个参数表示这个药水效果的名称，其使用方式和附魔相同</li><li>第二个参数表示这个附魔是否有害，这里很明显是无害的</li><li>第三个参数表示这个附魔的粒子效果（螺旋）颜色，这里定为深红色</li></ul><p><code>setIconIndex</code>方法表示这个药水效果在显示的时候使用的图标在下面这张图（来自<code>assets.minecraft.textures.gui.container.inventory.png</code>）中的位置，两个参数表示x和y坐标，这里设置为和速度药水效果的图标一致：</p><p><img src="/resources/inventory_potion_analysis.png" alt="inventory_potion_analysis"></p><p><code>setPotionName</code>方法和附魔的<code>setName</code>方法，以及方块、物品等的<code>setUnlocalizedName</code>方法类似，我们修改一下语言文件：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">potion.fallProtection=Fall Protection<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">potion.fallProtection=摔落保护<br></code></pre></td></tr></table></figure><p>在<code>preInit</code>阶段初始化：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">preInit</span><span class="hljs-params">(FMLPreInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConfigLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">CreativeTabsLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">ItemLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">BlockLoader</span>(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">PotionLoader</span>(event);<br>&#125;<br></code></pre></td></tr></table></figure><p>打开游戏，输入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">/effect <span class="hljs-keyword">@a</span> <span class="hljs-attribute">fmltutor</span>:fall_protection<br></code></pre></td></tr></table></figure><p>按下E键，就可以看到药水效果啦～</p><h3 id="使药水效果起到作用"><a href="#使药水效果起到作用" class="headerlink" title="使药水效果起到作用"></a>使药水效果起到作用</h3><p>我们在适当的时机通过调用<code>EntityLiving</code>类的<code>getActivePotionEffect</code>方法来使得药水效果真正起到作用，这里我们监视事件<code>LivingHurtEvent</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onLivingHurt</span><span class="hljs-params">(LivingHurtEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (event.source.getDamageType().equals(<span class="hljs-string">&quot;fall&quot;</span>))<br>    &#123;<br>        <span class="hljs-type">PotionEffect</span> <span class="hljs-variable">effect</span> <span class="hljs-operator">=</span> event.entityLiving.getActivePotionEffect(PotionLoader.potionFallProtection);<br>        <span class="hljs-keyword">if</span> (effect != <span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (effect.getAmplifier() == <span class="hljs-number">0</span>)<br>            &#123;<br>                event.ammount /= <span class="hljs-number">2</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                event.ammount = <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这段代码的作用就是当该药水效果等级为一时，摔落效果带来的伤害减半，如果等级超过一，伤害置零。</p><p><code>PotionEffect</code>类和<code>Potion</code>类的区别就是<code>PotionEffect</code>是一个特殊化了的药水效果，该药水效果被赋予了时长和等级等。</p><h3 id="让药水效果拥有自己的图标"><a href="#让药水效果拥有自己的图标" class="headerlink" title="让药水效果拥有自己的图标"></a>让药水效果拥有自己的图标</h3><p>刚刚我们可能注意到了，虽然我们可以指定药水效果的图标，但是这些图标都只被局限在一个图片中，所幸的是，Forge给我们提供了一个方法，让我们可以自定义药水的图标：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/potion/PotionFallProtection.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.potion;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.FMLTutor;<br><br><span class="hljs-keyword">import</span> net.minecraft.client.Minecraft;<br><span class="hljs-keyword">import</span> net.minecraft.potion.Potion;<br><span class="hljs-keyword">import</span> net.minecraft.potion.PotionEffect;<br><span class="hljs-keyword">import</span> net.minecraft.util.ResourceLocation;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PotionFallProtection</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Potion</span><br>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">ResourceLocation</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResourceLocation</span>(FMLTutor.MODID + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-string">&quot;textures/gui/potion.png&quot;</span>);<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">PotionFallProtection</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-built_in">super</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ResourceLocation</span>(FMLTutor.MODID + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-string">&quot;fall_protection&quot;</span>), <span class="hljs-literal">false</span>, <span class="hljs-number">0x7F0000</span>);<br>        <span class="hljs-built_in">this</span>.setPotionName(<span class="hljs-string">&quot;potion.fallProtection&quot;</span>);<br>        <span class="hljs-comment">// this.setIconIndex(0, 0);</span><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">renderInventoryEffect</span><span class="hljs-params">(<span class="hljs-type">int</span> x, <span class="hljs-type">int</span> y, PotionEffect effect, Minecraft mc)</span><br>    &#123;<br>        mc.getTextureManager().bindTexture(PotionFallProtection.res);<br>        mc.currentScreen.drawTexturedModalRect(x + <span class="hljs-number">6</span>, y + <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">18</span>, <span class="hljs-number">18</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们这里覆写的就是<code>renderInventoryEffect</code>方法，这个方法是当该药水效果的图标绘制时调用的。</p><p>除此之外，我们还要提供一个大小为256x256（其它尺寸是不可行的，只能256x256）的图片，并在左上角放上对应的18x18图标（这里终于是原创的了^_^）。</p><p><strong><code>src/main/resources/assets/fmltutor/textures/gui/potion.png:</code></strong></p><p><img src="/resources/gui_potion.png" alt="gui_potion"></p><p>（轻点打我。。。这个想法是一个叫作Blair的同学提供的，也为了纪念本部分的章节号23333333）<br>（我相信知道Blair是谁的人一定不会阅读到这部分教程(～￣▽￣)～）</p><p>现在，我们分析一下这个方法：</p><ul><li><code>x</code>参数表示药水效果框左上角的横坐标</li><li><code>y</code>参数表示药水效果框左上角的纵坐标</li><li><code>effect</code>参数表示该药水效果对应的<code>PotionEffect</code></li><li><code>mc</code>参数表示当前的这个游戏</li></ul><p><code>bindTexture</code>方法用于绑定我们想要用于绘制的图片，这里就是上面我们提供的图片。</p><p><code>drawTexturedModalRect</code>方法就是用于绘制这个图标了，我们这里简要分析一下这个方法，该方法在后面的部分还会提到，并加以更加详细的解释：</p><ul><li>第一个参数和第二个参数表示绘制的图标在游戏中的左上角的横纵坐标（xy值）。这里照着原版的数据做就行了</li><li>第三个参数和第四个参数表示绘制的图标在图片中的左上角的横纵坐标（uv值）。这里是整张图的左上角，自然都是零</li><li>第五个参数和第六个参数表示绘制的图标大小。这里和原版一样，是18x18</li></ul><p>现在打开游戏，是不是看到自定义的药水效果图标了呢～</p><p>下面是效果示例图：</p><p><img src="/resources/fall_protection.png" alt="fall_protection"></p><h2 id="2-4-1-热键绑定"><a href="#2-4-1-热键绑定" class="headerlink" title="2.4.1 热键绑定"></a>2.4.1 热键绑定</h2><h3 id="概述-5"><a href="#概述-5" class="headerlink" title="概述"></a>概述</h3><p>这一部分，作者将带领大家完成热键绑定的操作。在操作前，读者需要记住一点：<strong>所有和热键绑定相关的操作都只在客户端执行。</strong></p><h3 id="KeyBinding"><a href="#KeyBinding" class="headerlink" title="KeyBinding"></a>KeyBinding</h3><p>我们在包<code>com.github.ustc_zzzz.fmltutor.client</code>下新建一个文件<code>KeyLoader.java</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/client/KeyLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.client;<br><br><span class="hljs-keyword">import</span> net.minecraft.client.settings.KeyBinding;<br><span class="hljs-keyword">import</span> net.minecraftforge.fml.client.registry.ClientRegistry;<br><span class="hljs-keyword">import</span> org.lwjgl.input.Keyboard;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">KeyLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> KeyBinding showTime;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">KeyLoader</span><span class="hljs-params">()</span><br>    &#123;<br>        KeyLoader.showTime = <span class="hljs-keyword">new</span> <span class="hljs-title class_">KeyBinding</span>(<span class="hljs-string">&quot;key.fmltutor.showTime&quot;</span>, Keyboard.KEY_H, <span class="hljs-string">&quot;key.categories.fmltutor&quot;</span>);<br><br>        ClientRegistry.registerKeyBinding(KeyLoader.showTime);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后我们在<code>ClientProxy</code>下注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/client/ClientProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-built_in">super</span>.init(event);<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">KeyLoader</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>现在解释一下上面的代码。</p><p>首先，我们先定义一个<code>KeyBinding</code>，我们看一看<code>KeyBinding</code>的构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">KeyBinding</span><span class="hljs-params">(String description, <span class="hljs-type">int</span> keyCode, String category)</span> &#123;...&#125;<br></code></pre></td></tr></table></figure><ul><li><code>description</code>参数表示这个键的介绍。</li><li><code>keyCode</code>参数表示这个键的默认键名。这里是H。</li><li><code>category</code>参数表示这个键所在的键类别。</li></ul><p>我们修改一下语言文件：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lang">key.fmltutor.showTime=Show Time<br><br>key.categories.fmltutor=FML Tutor<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lang">key.fmltutor.showTime=显示时间<br><br>key.categories.fmltutor=FML教程<br></code></pre></td></tr></table></figure><p>然后我们使用<code>ClientRegistry</code>的<code>registerKeyBinding</code>方法注册。</p><p>打开游戏，进入控制设置，我们就可以看到我们注册到的<code>KeyBinding</code>了：</p><p><img src="/resources/key_binding.png" alt="key_binding"></p><h3 id="使绑定的热键产生作用"><a href="#使绑定的热键产生作用" class="headerlink" title="使绑定的热键产生作用"></a>使绑定的热键产生作用</h3><p>我们在注册的事件中加入监听按键按下的事件：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SideOnly(Side.CLIENT)</span><br><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onKeyInput</span><span class="hljs-params">(InputEvent.KeyInputEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (KeyLoader.showTime.isPressed())<br>    &#123;<br>        <span class="hljs-type">EntityPlayer</span> <span class="hljs-variable">player</span> <span class="hljs-operator">=</span> Minecraft.getMinecraft().thePlayer;<br>        <span class="hljs-type">World</span> <span class="hljs-variable">world</span> <span class="hljs-operator">=</span> Minecraft.getMinecraft().theWorld;<br>        player.addChatMessage(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ChatComponentTranslation</span>(<span class="hljs-string">&quot;chat.fmltutor.time&quot;</span>, world.getTotalWorldTime()));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>上面这段代码的作用，就是当键被按下的时候，如果检测到刚才我们注册的<code>KeyBinding</code>使用的键被按下，就向游戏控制台输入世界当前的总时间，也就是从世界创始以来的时间。</p><p><code>ChatComponentTranslation</code>这个类的作用，就是把语言文件对应的信息翻译掉，翻译的本质方式是<code>String</code>类的<code>format</code>方法，也就是说，首先Minecraft会从对应的语言文件中获取<code>ChatComponentTranslation</code>类的第一个参数对应的内容，然后调用<code>String</code>类的<code>format</code>方法，使用后面的参数替换前面的格式符，比如<code>%s</code>（字符串），<code>%d</code>（整数）等。</p><p>所以我们现在更新一下语言文件：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">chat.fmltutor.time=The total world time is: %s.<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lang">chat.fmltutor.time=现在时间为：%s。<br></code></pre></td></tr></table></figure><p>打开游戏试试吧～</p><h2 id="2-4-2-成就系统"><a href="#2-4-2-成就系统" class="headerlink" title="2.4.2 成就系统"></a>2.4.2 成就系统</h2><h3 id="概述-6"><a href="#概述-6" class="headerlink" title="概述"></a>概述</h3><p>成就系统往往在一个游戏中占有着重要的部分，通过这个成就系统，游戏可以引导玩家向游戏希望的方向发展。一个好的游戏，往往都会有着完善的、引导性强的成就系统。Minecraft这款游戏的原版成就系统虽然引导性不够强，但却是相当完善的。Forge通过成就页的方式使得每个Mod都可以产生自己的成就系统。</p><p>本部分将一步一步地带领读者完成一个新成就，和一个新成就页。</p><h3 id="新的成就"><a href="#新的成就" class="headerlink" title="新的成就"></a>新的成就</h3><p>本部分我们首先试图制作一个在前面部分制作的当玩家提供给猪错误的饲料产生伤害而死的成就。</p><p>我们新建一个包<code>com.github.ustc_zzzz.fmltutor.achievement</code>，并在其中新建一个文件<code>AchievementLoader.java</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/achievement/AchievementLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.achievement;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.item.ItemLoader;<br><br><span class="hljs-keyword">import</span> net.minecraft.stats.Achievement;<br><span class="hljs-keyword">import</span> net.minecraft.stats.AchievementList;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AchievementLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Achievement</span> <span class="hljs-variable">worseThanPig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Achievement</span>(<span class="hljs-string">&quot;achievement.fmltutor.worseThanPig&quot;</span>,<br>            <span class="hljs-string">&quot;fmltutor.worseThanPig&quot;</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">4</span>, ItemLoader.goldenEgg, AchievementList.buildSword);<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">AchievementLoader</span><span class="hljs-params">()</span><br>    &#123;<br>        worseThanPig.setSpecial().registerStat();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Minecraft提供了一个<code>Achievement</code>类，现在我们看一个这个<code>Achievement</code>类的构造方法：</p><ul><li>第一个参数是这个成就的名称。</li><li>第二个参数是这个成就的非本地化名称。</li><li>第三个参数和第四个参数是这个成就所在成就图中的位置，分别为x和y坐标。</li><li>第五个参数是这个成就在成就图上显示的图标。</li><li>最后一个参数是这个成就依赖的成就，如果这个成就独立，那么设为null。</li></ul><p>为使得成就的非本地化名称生效，我们更改一下语言文件：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lang">achievement.fmltutor.worseThanPig=Worse Than Pig<br>achievement.fmltutor.worseThanPig.desc=Die from inappropriate food for the pig<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><p> achievement.fmltutor.worseThanPig&#x3D;人不如猪<br> achievement.fmltutor.worseThanPig.desc&#x3D;因为提供给猪错误的饲料而死</p><p>含<code>desc</code>部分的行表示成就的显示描述，不含<code>desc</code>部分的行表示这个成就的显示名称。</p><p>下面这张图是一张Minecraft原版所有成就的坐标位置图，其中x和y均为零的位置，就是打开物品栏那个成就的位置：</p><p><img src="/resources/achievement_analysis.png" alt="achievement_analysis"></p><p><code>setSpecial</code>方法用于设置这个成就是一种特殊成就，在成就图上会有花边，获得成就时显示的文字也是紫色的。</p><p>然后，我们通过对这个<code>Achievement</code>类的实例调用<code>registerStat</code>方法注册这个成就。</p><p>最后我们在<code>CommonProxy</code>完成注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FMLInitializationEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">CraftingLoader</span>();<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">EnchantmentLoader</span>();<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">AchievementLoader</span>();<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">EventLoader</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>打开游戏，就可以在成就图上看到对应的成就了：</p><p><img src="/resources/achievement_example.png" alt="achievement_example"></p><h3 id="新的成就页"><a href="#新的成就页" class="headerlink" title="新的成就页"></a>新的成就页</h3><p>Forge提供了一个名为<code>AchievementPage</code>的类，我们可以实例化这个类，并注册他们（这里新添加了两个成就）：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/achievement/AchievementLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.achievement;<br><br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.FMLTutor;<br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.block.BlockLoader;<br><span class="hljs-keyword">import</span> com.github.ustc_zzzz.fmltutor.item.ItemLoader;<br><br><span class="hljs-keyword">import</span> net.minecraft.init.Blocks;<br><span class="hljs-keyword">import</span> net.minecraft.stats.Achievement;<br><span class="hljs-keyword">import</span> net.minecraft.stats.AchievementList;<br><span class="hljs-keyword">import</span> net.minecraftforge.common.AchievementPage;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AchievementLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Achievement</span> <span class="hljs-variable">worseThanPig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Achievement</span>(<span class="hljs-string">&quot;achievement.fmltutor.worseThanPig&quot;</span>,<br>            <span class="hljs-string">&quot;fmltutor.worseThanPig&quot;</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">4</span>, ItemLoader.goldenEgg, AchievementList.buildSword);<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Achievement</span> <span class="hljs-variable">buildGrassBlock</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Achievement</span>(<span class="hljs-string">&quot;achievement.fmltutor.buildGrassBlock&quot;</span>,<br>            <span class="hljs-string">&quot;fmltutor.buildGrassBlock&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, Blocks.vine, <span class="hljs-literal">null</span>);<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">Achievement</span> <span class="hljs-variable">explosionFromGrassBlock</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Achievement</span>(<span class="hljs-string">&quot;achievement.fmltutor.explosionFromGrassBlock&quot;</span>,<br>            <span class="hljs-string">&quot;fmltutor.explosionFromGrassBlock&quot;</span>, <span class="hljs-number">2</span>, -<span class="hljs-number">1</span>, BlockLoader.grassBlock, buildGrassBlock);<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">AchievementPage</span> <span class="hljs-variable">pageFMLTutor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AchievementPage</span>(FMLTutor.NAME, buildGrassBlock,<br>            explosionFromGrassBlock);<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">AchievementLoader</span><span class="hljs-params">()</span><br>    &#123;<br>        worseThanPig.setSpecial().registerStat();<br>        buildGrassBlock.initIndependentStat().registerStat();<br>        explosionFromGrassBlock.setSpecial().registerStat();<br><br>        AchievementPage.registerAchievementPage(pageFMLTutor);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>AchievementPage</code>类是Forge提供的，作用就是把不同种类的成就以不同的成就页方式隔离。</p><p><code>AchievementPage</code>类构造方法的第一个参数，是这个成就页的名称，这里用这个Mod的名称代替，而其第二个参数开始，就是这个成就页的所有成就，没有加入任何成就页的成就默认在原版的成就页上显示。</p><p><code>initIndependentStat</code>方法用于设置这个成就是一个独立的、不依赖于其他成就的成就。很明显，一个成就页必须至少存在这样一个成就。</p><p><code>registerAchievementPage</code>这个静态方法，就是注册这个成就页了。</p><p>最后我们修改一下语言文件，把新添加的两个成就对应的显示文字加进去：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs lang">achievement.fmltutor.worseThanPig=Worse Than Pig<br>achievement.fmltutor.worseThanPig.desc=Die from inappropriate food for the pig<br>achievement.fmltutor.buildGrassBlock=Grass Block<br>achievement.fmltutor.buildGrassBlock.desc=Build a grass block<br>achievement.fmltutor.explosionFromGrassBlock=Grass Block Explosion<br>achievement.fmltutor.explosionFromGrassBlock.desc=Make an explosion of grass block by the click<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs lang">achievement.fmltutor.worseThanPig=人不如猪<br>achievement.fmltutor.worseThanPig.desc=因为提供给猪错误的饲料而死<br>achievement.fmltutor.buildGrassBlock=草块<br>achievement.fmltutor.buildGrassBlock.desc=制作一个草块<br>achievement.fmltutor.explosionFromGrassBlock=草块爆炸<br>achievement.fmltutor.explosionFromGrassBlock.desc=通过点击草块使草块爆炸<br></code></pre></td></tr></table></figure><h3 id="使成就可以被获得"><a href="#使成就可以被获得" class="headerlink" title="使成就可以被获得"></a>使成就可以被获得</h3><p>我们可以注意到，我们添加的成就，并不能通过任何自然的、符合成就本身目的的方式获得，所以我们添加并修改一些事件：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPlayerClickGrassBlock</span><span class="hljs-params">(PlayerRightClickGrassBlockEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (!event.world.isRemote)<br>    &#123;<br>        <span class="hljs-type">BlockPos</span> <span class="hljs-variable">pos</span> <span class="hljs-operator">=</span> event.pos;<br>        <span class="hljs-type">Entity</span> <span class="hljs-variable">tnt</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">EntityTNTPrimed</span>(event.world, pos.getX() + <span class="hljs-number">0.5</span>, pos.getY() + <span class="hljs-number">0.5</span>, pos.getZ() + <span class="hljs-number">0.5</span>, <span class="hljs-literal">null</span>);<br>        event.world.spawnEntityInWorld(tnt);<br>        event.entityPlayer.triggerAchievement(AchievementLoader.explosionFromGrassBlock);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onLivingDeath</span><span class="hljs-params">(LivingDeathEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (event.entityLiving <span class="hljs-keyword">instanceof</span> EntityPlayer &amp;&amp; event.source.getDamageType().equals(<span class="hljs-string">&quot;byPig&quot;</span>))<br>    &#123;<br>        ((EntityPlayer) event.entityLiving).triggerAchievement(AchievementLoader.worseThanPig);<br>    &#125;<br>&#125;<br>    <br><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPlayerItemCrafted</span><span class="hljs-params">(PlayerEvent.ItemCraftedEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (event.crafting.getItem() == Item.getItemFromBlock(BlockLoader.grassBlock))<br>    &#123;<br>        event.player.triggerAchievement(AchievementLoader.buildGrassBlock);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们通过调用玩家的<code>triggerAchievement</code>方法，成功地使玩家获得了我们想要获得的成就。</p><h2 id="2-4-3-系统命令"><a href="#2-4-3-系统命令" class="headerlink" title="2.4.3 系统命令"></a>2.4.3 系统命令</h2><h3 id="系统命令的意义"><a href="#系统命令的意义" class="headerlink" title="系统命令的意义"></a>系统命令的意义</h3><p>看起来，系统命令这种扩展，似乎只有服务端的插件才有做的必要，其实不然。这里，我们假设有一个Mod，被用于服务端，那么服务器的管理员该如何管控呢？</p><p>我们设想这样一个情况，如果这个Mod具有复杂的任务树，那么服务器的管理员可能就存在通过一种方式让玩家一下子跳到某一个任务节点的需要。</p><p>我们再设想，如果这个Mod给玩家添加了一个属性值，那个对于服务器的管理员来说，获取并试图修改这个属性值，可能就是一件十分必要的事情。</p><p>那么而这样的事情该如何做到呢？显然系统命令是最适合的，通过敲指令来达到这种目的往往是服务器的管理员最擅长的事情，同时，通过命令方块往往能达到自动化的操作。</p><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>我们这部分将要带领读者一步一步地制作一个系统命令，这里的示例命令名称为<code>position</code>，用途是显示一个玩家的位置。</p><ul><li>当输入命令：<code>/position</code>的时候显示自己的位置</li><li>当输入命令：<code>/position Player</code>的时候显示特定玩家<code>Player</code>的位置</li><li>当输入命令：<code>/position @a</code>的时候显示所有玩家的位置。</li></ul><h3 id="新建一个系统命令"><a href="#新建一个系统命令" class="headerlink" title="新建一个系统命令"></a>新建一个系统命令</h3><p>这里，我们要用到一个之前讲到过的FML生命周期事件：<code>FMLServerStartingEvent</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/FMLTutor.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EventHandler</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">serverStarting</span><span class="hljs-params">(FMLServerStartingEvent event)</span><br>&#123;<br>    proxy.serverStarting(event);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">serverStarting</span><span class="hljs-params">(FMLServerStartingEvent event)</span><br>&#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>我们注意到<code>FMLServerStartingEvent</code>有一个名为<code>registerServerCommand</code>的方法，显而易见，我们需要通过调用这个方法来完成系统命令的注册。</p><p><code>registerServerCommand</code>方法需要一个实现了接口<code>ICommand</code>的对象，还好Minecraft这个游戏已经准备好了一个接口<code>ICommand</code>的方法大部分已经实现了的类：<code>CommandBase</code>。</p><p>新建包<code>com.github.ustc_zzzz.fmltutor.command</code>在其中新建文件<code>CommandPosition.java</code>，并使<code>CommandPosition</code>类继承<code>CommandBase</code>类：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/command/CommandPosition.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.command;<br><br><span class="hljs-keyword">import</span> net.minecraft.command.CommandBase;<br><span class="hljs-keyword">import</span> net.minecraft.command.CommandException;<br><span class="hljs-keyword">import</span> net.minecraft.command.ICommandSender;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommandPosition</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">CommandBase</span><br>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getCommandName</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;position&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getCommandUsage</span><span class="hljs-params">(ICommandSender sender)</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;commands.position.usage&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">processCommand</span><span class="hljs-params">(ICommandSender sender, String[] args)</span> <span class="hljs-keyword">throws</span> CommandException<br>    &#123;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们注意到，对于<code>ICommand</code>接口，<code>CommandBase</code>类还有三个方法没有实现，当然，这三个方法的内容其实都非常简单：</p><ul><li><code>getCommandName</code>方法就是这个命令的名称，也就是一个斜线之后紧接着出现的那个。</li><li><code>getCommandUsage</code>方法就是这个命令的用法，当玩家输入<code>/help position</code>的时候就会出现。这里自然需要国际化，随后我们就会在语言文件中添加相应字段。</li><li><code>processCommand</code>方法的含义更加显而易见，就是这个命令执行的时候会调用的方法。这里的<code>args</code>参数指的是<strong>去掉命令名称本身</strong>之后剩下的参数，比如如果我们输入<code>/position alice bob carol</code>，<code>args</code>就会是以<code>alice</code>、<code>bob</code>、<code>carol</code>为顺序的数组，如果我们只输入<code>/position</code>命令本身，那么<code>args</code>数组就是空的。</li></ul><p><code>processCommand</code>方法可能会抛出<code>CommandException</code>异常，这是因为在执行命令的时候可能会出现各种各样的错误，比如请求的玩家不存在、需要整数的地方提供了一个浮点数、等等，这时候就应该直接抛出异常，阻止命令的继续执行。</p><p><code>CommandBase</code>类提供了很多静态方法，用于一些常见的命令操作，比如通过玩家名称取出对应的玩家实体、将字符串转换成整数、等等，开发者可以放心大胆地使用。这个部分使用了三个这样的方法：</p><ul><li><code>getPlayer</code>方法用于通过玩家名称获取对应的玩家实体，如果无法找到，则会抛出异常。</li><li><code>getCommandSenderAsPlayer</code>方法用于获取输入该命令的玩家，如果该命令是命令方块等非玩家实体执行的，则会抛出异常。</li><li><code>getListOfStringsMatchingLastWord</code>方法用于将当前输入的字符串匹配对应字符串数组中对应的字符串列表，常用于自动补全。</li></ul><p>更多方法的使用，只要参照原版的命令来模仿就可以了。</p><p>我们这里完成<code>processCommand</code>方法：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/command/CommandPosition.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">processCommand</span><span class="hljs-params">(ICommandSender sender, String[] args)</span> <span class="hljs-keyword">throws</span> CommandException<br>&#123;<br>    <span class="hljs-keyword">if</span> (args.length &gt; <span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">WrongUsageException</span>(<span class="hljs-string">&quot;commands.position.usage&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-type">EntityPlayerMP</span> <span class="hljs-variable">entityPlayerMP</span> <span class="hljs-operator">=</span> args.length &gt; <span class="hljs-number">0</span> ? CommandBase.getPlayer(sender, args[<span class="hljs-number">0</span>])<br>                : CommandBase.getCommandSenderAsPlayer(sender);<br>        <span class="hljs-type">Vec3</span> <span class="hljs-variable">pos</span> <span class="hljs-operator">=</span> entityPlayerMP.getPositionVector();<br>        sender.addChatMessage(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ChatComponentTranslation</span>(<span class="hljs-string">&quot;commands.position.success&quot;</span>, entityPlayerMP.getName(),<br>                pos, entityPlayerMP.worldObj.provider.getDimensionName()));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>代码的意思很简单，就是取出第一个参数对应的玩家实体，如果这个参数不存在就取自己，把其坐标和所在世界输出出来。如果提供的参数不正确，就会抛出异常。</p><p>我们现在补充一下语言文件：</p><p><strong><code>src/main/resources/assets/fmltutor/lang/en_US.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lang">commands.position.usage=/position [player]<br>commands.position.success=The position of %1$s is %2$s in world %3$s<br></code></pre></td></tr></table></figure><p><strong><code>src/main/resources/assets/fmltutor/lang/zh_CN.lang（部分）:</code></strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lang">commands.position.usage=/position [玩家]<br>commands.position.success=玩家 %1$s 处于名为 %3$s 的世界，其坐标为 %2$s<br></code></pre></td></tr></table></figure><p>除了上面<code>CommandBase</code>未实现的方法，还有一个方法往往需要覆写，这就是<code>getRequiredPermissionLevel</code>方法，这个方法返回执行该命令所需要的等级。</p><p>等级一共分四种，对应的数字为1、2、3和4,等级为1代表任何玩家都可以执行，比如<code>/ping</code>这样的命令，等级为2代表命令方块可以执行，而等级4，则只有这个服务器的OP、还有单人模式下的作弊玩家可以执行。</p><p>这里我们把等级设置成2：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/command/CommandPosition.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getRequiredPermissionLevel</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后我们注册这个命令，在包<code>com.github.ustc_zzzz.fmltutor.command</code>下新建文件<code>CommandLoader.java</code>：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/command/CommandLoader.java:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.github.ustc_zzzz.fmltutor.command;<br><br><span class="hljs-keyword">import</span> net.minecraftforge.fml.common.event.FMLServerStartingEvent;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommandLoader</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">CommandLoader</span><span class="hljs-params">(FMLServerStartingEvent event)</span><br>    &#123;<br>        event.registerServerCommand(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CommandPosition</span>());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在<code>CommonProxy</code>中完成注册：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/CommonProxy.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">serverStarting</span><span class="hljs-params">(FMLServerStartingEvent event)</span><br>&#123;<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">CommandLoader</span>(event);<br>&#125;<br></code></pre></td></tr></table></figure><p>就可以了。</p><p>最后补充一点，<code>@p</code>、<code>@a</code>这样的通配符在Minecraft执行这个命令之前就已经展开成特定的名称了，比如这个服务器有<code>Alice</code>和<code>Bob</code>两个人，现在执行命令<code>/position @a</code>，相当于执行了一次<code>/position Alice</code>和一次<code>/position Bob</code>，所以这方面是不需要开发者操心的。</p><p>打开游戏试试吧～</p><h3 id="命令的自动补全"><a href="#命令的自动补全" class="headerlink" title="命令的自动补全"></a>命令的自动补全</h3><p>很明显，没有自动补全的命令行界面，无论什么情况下（包括cmd），都是很难用的，所以这里我们理所应当地应该提供自动补全的功能。</p><p>当然，实现自动补全的方法也并不难，这里只要实现<code>ICommand</code>的<code>addTabCompletionOptions</code>方法（也就是覆写<code>CommandBase</code>的对应方法）就可以了：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/command/CommandPosition.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> List&lt;String&gt; <span class="hljs-title function_">addTabCompletionOptions</span><span class="hljs-params">(ICommandSender sender, String[] args, BlockPos pos)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (args.length == <span class="hljs-number">1</span>)<br>    &#123;<br>        String[] names = MinecraftServer.getServer().getAllUsernames();<br>        <span class="hljs-keyword">return</span> CommandBase.getListOfStringsMatchingLastWord(args, names);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里也就是说当玩家输入第一个参数的部分内容，比如<code>/position Ali</code>，或者仅仅输入了一个空格的时候，这个方法会让系统会找到所有这个服务器上的玩家，并且把对应的提供给系统。</p><p>上面的例子中，如果服务器中有一个名为<code>Alice</code>的玩家，命令行界面可能就会自动补全成<code>/position Alice</code>。</p><h2 id="2-4-4-声音系统"><a href="#2-4-4-声音系统" class="headerlink" title="2.4.4 声音系统"></a>2.4.4 声音系统</h2><h3 id="概述-7"><a href="#概述-7" class="headerlink" title="概述"></a>概述</h3><p>一个好的游戏，往往都有着丰富的声音系统，比如说在Minecraft这个游戏中，当你靠近一个洞穴的时候系统就会播放风声，当你的附近有着僵尸的时候就会传来僵尸的吼叫声，玩家可以通过声音来判断目前的状态，这无疑增加了游戏的趣味性和冒险性。</p><p>本部分内容将带领读者完成在Minecraft中导入声音、并在适当的时候播放声音的内容。我们假设读者已经拥有了想要应用在Minecraft中的<strong>OGG格式的</strong>音乐，也就是后缀名为ogg的音乐文件。这里我们采用的是本部分的作者使用计算机合成的一段非常短的，被用作音效的音乐。如有需要，可以通过这个<a href="https://github.com/ustc-zzzz/fmltutor/raw/master/src/main/resources/assets/fmltutor/sounds/fmltutor.ogg">链接</a>获取音乐，并随意使用，作者不保留这段音乐的任何版权。</p><h3 id="音乐索引文件"><a href="#音乐索引文件" class="headerlink" title="音乐索引文件"></a>音乐索引文件</h3><p>我们需要在<code>assets.fmltutor</code>包下创建一个文件：<code>sounds.json</code>：</p><p><strong><code>src/main/resources/assets/fmltutor/sounds.json:</code></strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;fmltutor.test&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;category&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;player&quot;</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-attr">&quot;sounds&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span> <br>            <span class="hljs-string">&quot;fmltutor&quot;</span> <br>        <span class="hljs-punctuation">]</span> <br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>这个名为<code>sounds.json</code>的文件，就是这个Mod的音乐索引文件，其中贮存了各种各样音乐的索引。</p><p>这个文件的内容，是一段非常普通的JSON文件，这个文件通过储存JSON对象的方式提供键值对。这里的键值对中，标识符为这个声音的名称，在这里就是<code>fmltutor.test</code>，在程序中调用的时候要加上Mod id，也就是<code>fmltutor:fmltutor.test</code>，而值就是关于这个声音的信息。</p><ul><li><code>category</code>表示的是这个声音的类型，总共有<code>ambient</code>（环境）、<code>weather</code>（天气）、<code>player</code>（玩家）、<code>neutral</code>（中立）、<code>hostile</code>（敌对）、<code>block</code>（方块）、<code>record</code>（唱片）、<code>music</code>（音乐）、<code>master</code>（控制）这八种类型。</li><li><code>sounds</code>表示的就是声音了，这里表示的声音存放在这个音乐索引文件所在目录下的<code>sounds</code>文件夹下，在这里就是<code>assets.fmltutor.sounds</code>包下，这里表示的声音是一个列表，在游戏中会随机选取其中一个所代表的声音播放。</li></ul><p><code>sounds</code>表示的声音列表还可以有<code>volume</code>、<code>pitch</code>等选项，分别表示响度、音量等。不过这里我们不作讨论，感兴趣的读者可以自己查找相关信息。</p><p>然后我们在<code>assets.fmltutor.sounds</code>下放置一个名为<code>fmltutor.ogg</code>的<strong>OGG格式</strong>的音乐，就可以了。</p><h3 id="播放这个音乐"><a href="#播放这个音乐" class="headerlink" title="播放这个音乐"></a>播放这个音乐</h3><p><code>net.minecraft.world.World</code>类有数个用于播放音乐的方法，其中有两个方法比较常用，其中一个为<code>playSoundAtEntity</code>，用于在特定实体所在位置播放音乐，还有一个就是<code>playSound</code>方法，用于在特定位置播放特定的声音，还可以设定这个声音是否有声速延迟。</p><p>我们先来看一下<code>playSound</code>方法：</p><ul><li>前三个参数表示这个声音所在位置的坐标，分别为<code>x</code>、<code>y</code>、<code>z</code>。</li><li>第四个参数表示这个声音的名称，在上面的声音索引文件中有所提及。</li><li>第五个参数表示这个声音的响度，默认响度为1.0F。</li><li>第六个参数表示这个声音的音调，默认音调为1.0F。</li><li>最后一个参数表示这个声音是否有延迟，比如雷声就存在着延迟。</li></ul><p>我们再来看一下<code>playSoundAtEntity</code>方法：</p><ul><li>第一个参数表示该实体，没有什么过多的解释。</li><li>第二个参数表示声音的名称，和上面一样。</li><li>最后两个参数分别表示声音的响度和音调，和上面的同样没有差别。</li></ul><p>有了这些，我们就可以试一试了：</p><p><strong><code>src/main/java/com/github/ustc_zzzz/fmltutor/common/EventLoader.java（部分）:</code></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SubscribeEvent</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onPlayerItemCrafted</span><span class="hljs-params">(PlayerEvent.ItemCraftedEvent event)</span><br>&#123;<br>    event.player.worldObj.playSoundAtEntity(event.player, <span class="hljs-string">&quot;fmltutor:fmltutor.test&quot;</span>, <span class="hljs-number">1.0F</span>, <span class="hljs-number">1.0F</span>);<br>    <span class="hljs-keyword">if</span> (event.crafting.getItem() == Item.getItemFromBlock(BlockLoader.grassBlock))<br>    &#123;<br>        event.player.triggerAchievement(AchievementLoader.buildGrassBlock);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当玩家在工作台合成物品之后便会在玩家所在处播放一个叫作<code>fmltutor</code>的Mod下的一个名为<code>fmltutor.test</code>的声音，也就是这里的示例声音。</p><p>打开游戏试试吧～</p><h2 id="2-5-1-在世界生成矿物"><a href="#2-5-1-在世界生成矿物" class="headerlink" title="2.5.1 在世界生成矿物"></a>2.5.1 在世界生成矿物</h2><h2 id="2-5-2-注册和使用矿物字典"><a href="#2-5-2-注册和使用矿物字典" class="headerlink" title="2.5.2 注册和使用矿物字典"></a>2.5.2 注册和使用矿物字典</h2><h2 id="2-6-1-创建并注册一份流体"><a href="#2-6-1-创建并注册一份流体" class="headerlink" title="2.6.1 创建并注册一份流体"></a>2.6.1 创建并注册一份流体</h2><h2 id="2-6-2-为流体添加对应的桶"><a href="#2-6-2-为流体添加对应的桶" class="headerlink" title="2.6.2 为流体添加对应的桶"></a>2.6.2 为流体添加对应的桶</h2>]]></content>
    
    
    
    <tags>
      
      <tag>tutorial</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
